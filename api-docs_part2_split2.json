{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "Muntra Practice Management System API",
    "version": "3.5.234"
  },
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "definitions": {
    "AccountPlanTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Norge"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BAST 2022"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "number",
              "example": 1010
            },
            "account_name": {
              "type": "string",
              "example": "Utvecklingsutgifter"
            },
            "balance_type": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicAccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateCostRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template_cost_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ActionNeededPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "action_needed_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "entry_type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "fee": {
              "type": "number",
              "example": 10
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "signed_at": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number"
            },
            "quantity": {
              "type": "number"
            },
            "discount_excluding_vat": {
              "type": "number"
            },
            "vat_percentage": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_owner_name": {
              "type": "string",
              "example": "John"
            },
            "animal_owner_street_address_1": {
              "type": "string",
              "example": "Hold street"
            },
            "animal_owner_street_address_2": {
              "type": "string",
              "example": "Talk street"
            },
            "animal_owner_postal_code": {
              "type": "string"
            },
            "animal_owner_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "animal_owner_country_name": {
              "type": "string",
              "example": "Sweden"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 223
            },
            "vat_amount": {
              "type": "number",
              "example": 120
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": false
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string"
            },
            "animal_id_qualifier": {
              "type": "string"
            },
            "animal_species": {
              "type": "string"
            },
            "dosage_form": {
              "type": "string"
            },
            "indication_for_prescription": {
              "type": "string"
            },
            "license_id": {
              "type": "string"
            },
            "package_content": {
              "type": "string"
            },
            "pharmacy_id": {
              "type": "string"
            },
            "quantity": {
              "type": "number"
            },
            "quantity_unit": {
              "type": "string"
            },
            "strength": {
              "type": "string"
            },
            "supplementary_information": {
              "type": "string"
            },
            "delegated": {
              "type": "boolean"
            },
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowWaitingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row_waiting_time"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number_of_days": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "prescriber_cit": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "delivery_location_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "delivery_location_id": {
              "type": "string"
            },
            "delivery_location_postal_code": {
              "type": "string"
            },
            "delivery_location_street_name": {
              "type": "string"
            },
            "delivery_location_telecommunication": {
              "type": "string"
            },
            "include_prescription_fee": {
              "type": "boolean",
              "example": true
            },
            "prescription_fee_including_vat": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalSpeciesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_species"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "type": {
              "type": "string",
              "example": "pet"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string",
              "example": "Nytt test"
            },
            "animal_id_qualifier": {
              "type": "string",
              "example": "IND"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "FK_claim_id": {
              "type": "string"
            },
            "FK_claim_amount": {
              "type": "number"
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number"
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "eligible_from_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "atb_usage_atb_number": {
              "type": "string"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 123
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 12
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": false
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "validated": {
              "type": "boolean",
              "example": true
            },
            "validation_sent_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "submitted": {
              "type": "number"
            },
            "submitted_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "answered_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": false
            },
            "reversed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "reversal_error_code": {
              "type": "string"
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "deducted_from_invoice": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "number"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 1
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymouseInvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "string"
            },
            "paid_at": {
              "type": "string",
              "example": "2024-07-12T10:43:49+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-12T10:43:49+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-22T10:43:49+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPatientInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "third_party_name": {
              "type": "string",
              "example": "Boom"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "read_by_recipient_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-11T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousSalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "lab_fee": {
              "type": "number",
              "example": 12
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousTreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 2
            },
            "down_vote_count": {
              "type": "number",
              "example": 3
            },
            "creation_date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "SMS_REMINDER_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "SMS-påminnelse"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AtbCheckReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "atb_check_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": 123
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BalanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "balance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dqwd21qwd12q"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "opening_balance": {
              "type": "number",
              "example": 1000
            },
            "closing_balance": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookkeepingAllocationRulesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_allocation_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "BookKeepingFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "from_date": {
              "type": "string"
            },
            "to_date": {
              "type": "string"
            },
            "include_already_exported": {
              "type": "boolean",
              "example": false
            },
            "number_of_verifications": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookKeepingLockResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_lock"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "boolean",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": false
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingConversationReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_conversion_report_row"
        },
        "id": {
          "type": "string",
          "example": "2wq12rwqrwqw11"
        },
        "attributes": {
          "properties": {
            "pixel_id": {
              "type": "string"
            },
            "booking_count": {
              "type": "number"
            },
            "session_count": {
              "type": "number"
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExdateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_exdate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "rescheduling_lock_period_in_hours": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPreferenceDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 1
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 5
            },
            "fit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleByDayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule_by_day"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 123
            },
            "freq": {
              "type": "string"
            },
            "interval": {
              "type": "number",
              "example": 10
            },
            "until": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": "PUBLIC"
            },
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": false
            },
            "dtstart": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "location": {
              "type": "string"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "price": {
              "type": "number",
              "example": 111
            },
            "new_patient": {
              "type": "boolean",
              "example": false
            },
            "patient_wants_earlier_slot": {
              "type": "boolean",
              "example": false
            },
            "patient_made_late_cancellation": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear_handled": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "done": {
              "type": "boolean",
              "example": false
            },
            "archived_at": {
              "type": "string",
              "example": "2024-02-01T09:11:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string",
              "example": "#9FC6E7"
            },
            "text_color": {
              "type": "string",
              "example": "#000000"
            },
            "color_order": {
              "type": "number",
              "example": 0
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BoxResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "box"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number": {
              "type": "number",
              "example": 1
            },
            "last_treatment_date": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CalendarViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "calendar_view"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "days": {
              "type": "number",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED,TENTATIVE"
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": true
            },
            "from_minute": {
              "type": "number",
              "example": 10
            },
            "to_minute": {
              "type": "boolean",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraAcceptsReviewRequestsEmailSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_accepts_review_requests_email_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepts_review_request_emails": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookingAttendeesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-booking-attendee"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookings": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_booking"
        },
        "id": {
          "type": "string",
          "example": "BKel6a02b"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": 3
            },
            "summary": {
              "type": "string",
              "example": "Title"
            },
            "text": {
              "type": "string",
              "example": "Text"
            },
            "dtstart": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            },
            "dtend": {
              "type": "string",
              "format": "date",
              "example": "2023-02-11T18:19:43+01:00"
            },
            "description": {
              "type": "string",
              "example": "Description"
            },
            "location": {
              "type": "string",
              "example": "Address"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "booked_by_patient": {
              "type": "boolean",
              "example": true
            },
            "new_patient": {
              "type": "boolean",
              "example": true
            },
            "referral_source": {
              "type": "string",
              "example": "muntra.com"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "data": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "muntra_clinic"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 49.427062
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 32.081114
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": true
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": false
            },
            "calendar_activated": {
              "type": "boolean",
              "example": true
            },
            "distance": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "latest_review_comment": {
              "type": "string",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "caregiver": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver"
                    },
                    "id": {
                      "type": "integer",
                      "example": 2
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "free_bookable_slots": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_free_bookable_slot"
                      },
                      "id": {
                        "type": "string",
                        "example": "1-2-1"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "procedures": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_caregiver_procedure_at_location"
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "default_procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver_procedure_at_location"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "next_free_bookable_slot": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_free_bookable_slot"
                    },
                    "id": {
                      "type": "integer",
                      "example": "1-2-1"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverProcedureAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_procedure_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "gender": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 0
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicAdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic_ad"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "per_page": {
              "type": "number",
              "format": "float",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "clinic_address_1": {
              "type": "string"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "default_sms_reminder_text": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "google_places_description": {
              "type": "string"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": true
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_restroom": {
              "type": "boolean",
              "example": true
            },
            "has_toys": {
              "type": "boolean",
              "example": true
            },
            "has_tv": {
              "type": "boolean",
              "example": true
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": true
            },
            "has_wifi": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 10
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Testa, Sverige"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "reference": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientClinicCurationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_clinic_curation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string",
              "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": false
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": false
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "phas_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_restroom": {
              "type": "boolean",
              "example": false
            },
            "has_toys": {
              "type": "boolean",
              "example": false
            },
            "has_tv": {
              "type": "boolean",
              "example": false
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": false
            },
            "has_wifi": {
              "type": "boolean",
              "example": false
            },
            "created_date": {
              "type": "string",
              "example": "11-05-2024"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPatientReviewCaregiver": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_review"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 3
            },
            "patient_name": {
              "type": "string",
              "example": "Pontus G."
            },
            "review_comment": {
              "type": "boolean",
              "example": true
            },
            "created_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100411"
            },
            "to": {
              "type": "string",
              "example": "+46840906343"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AutostarttokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AuthLoginResponse": {
      "properties": {
        "token_type": {
          "type": "string",
          "example": "Bearer"
        },
        "expires_in": {
          "type": "number",
          "example": 7200
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "MuntraRolesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-role"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "slug"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CariesDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "caries"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 22.5
            },
            "image_height": {
              "type": "number",
              "example": 33
            },
            "image_width": {
              "type": "number",
              "example": 25
            },
            "xmax": {
              "type": "number",
              "example": 10
            },
            "xmin": {
              "type": "number",
              "example": 10
            },
            "ymax": {
              "type": "number",
              "example": 10
            },
            "ymin": {
              "type": "number",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CertificateUploadDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "certificate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "issuer": {
              "type": "string"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ChangeLogsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "change_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_date": {
              "type": "string",
              "example": "2024-06-20T17:03:59+02:00"
            },
            "record_id": {
              "type": "string",
              "example": "1"
            },
            "route_name": {
              "type": "string",
              "example": "patient"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CheckoutServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "checkout_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentSpecificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment_specification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_organization_id": {
              "type": "number",
              "example": 1
            },
            "issue_date": {
              "type": "string"
            },
            "payment_id": {
              "type": "number",
              "example": 2
            },
            "total_amount": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number",
              "example": 1
            },
            "care_provider_org_number": {
              "type": "number",
              "example": 1
            },
            "government_organization_id": {
              "type": "number",
              "example": 123
            },
            "user_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_fin": {
              "type": "number",
              "example": 1
            },
            "dentist_ssn": {
              "type": "number",
              "example": 1
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "atb_usage_atb_number": {
              "type": "number",
              "example": 1
            },
            "atb_usage_teeth_count": {
              "type": "number",
              "example": 1
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number",
              "example": 1
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "stb_amount_available": {
              "type": "number",
              "example": 1
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "FK_claim_id": {
              "type": "number",
              "example": true
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "19953"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-10-24T11:32:51+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test Sverige"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Testvägen 1"
            },
            "clinic_address_2": {
              "type": "string",
              "example": "Testvägen 2"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "12345"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_reference": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "workplace_code": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "show_user_in_invoice_clinic_reference": {
              "type": "boolean",
              "example": true
            },
            "timezone": {
              "type": "string",
              "example": "Europe/Stockholm"
            },
            "latitude": {
              "type": "integer",
              "format": "float"
            },
            "longitude": {
              "type": "integer",
              "format": "float"
            },
            "google_places_description": {
              "type": "string"
            },
            "journal_entry_autosign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "journal_entry_unsign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "default_sms_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Välkommen [booking_datetime] [clinic_address_1]. Bekräfta tiden via [booking_confirmation_link]. Mvh, [caregiver_title] [caregiver_first_name] [caregiver_last_name] (OBS! det går inte att svara på detta meddelande)"
            },
            "default_sms_reminder_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Här är en påminnelse om din tid på [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date]. Mvh, [caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_snail_mail_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]!\\r\\n\\r\\nNu är det dags att besöka oss.\\r\\n\\r\\nVälkommen till [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date].\\r\\n\\r\\nBekräfta gärna tiden genom att gå till följande länk: [booking_confirmation_link]\\r\\n\\r\\nMed vänlig hälsning,\\r\\n[caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_hours_until_sms_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_before_sms_reminder_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_until_snail_mail_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "allow_remittance_without_individual_recipient": {
              "type": "boolean",
              "example": true
            },
            "accepts_digital_remittance": {
              "type": "boolean",
              "example": true
            },
            "has_cbct": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:16:42+02:00"
            },
            "updated_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:17:48+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ComputersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "computer"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "mac_address": {
              "type": "string"
            },
            "backup_folder": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CorsProxyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "CostCentersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "cost-center"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "country"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Sverige"
            },
            "code": {
              "type": "string",
              "example": "SE"
            },
            "calling_code": {
              "type": "string",
              "example": "+46"
            },
            "personal_id_min_length": {
              "type": "number",
              "example": 10
            },
            "personal_id_placeholder": {
              "type": "string",
              "example": "ååååmmddxxxx"
            },
            "personal_id_regex": {
              "type": "string",
              "example": "/^(18|19|[2-9]\\\\d)\\\\d{2}(0[1-9]|1[0-2])[0-9]\\\\d{5}$/"
            },
            "legal_entity_id_regex": {
              "type": "string"
            },
            "postal_code_length": {
              "type": "number",
              "example": 5
            },
            "postal_code_regex": {
              "type": "string"
            },
            "general_information": {
              "type": "string",
              "example": "Planerat underhåll tisdagen den 21 januari 22:00-02:00 på servrar för läkemedelsartiklar och apotek\\r\\n\\r\\nGlöm inte att prenumera på vårt nyhetsbrev för produktnyheter, <a href=\\'https://hs.muntra.se/prenumerera\\'>anmäl dig här</a>"
            },
            "muntra_support_phone_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "S1"
            },
            "label": {
              "type": "string",
              "example": "Medfödd missbildning i käkområdet eller ansiktet, om inte missbildningen endast är av ringa omfattning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Stockholm 2018"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "string",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2017-10-23T12:05:37+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-30T15:54:10+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "lab_fee": {
              "type": "number",
              "example": 5
            },
            "included_material": {
              "type": "string"
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Hälso- och sjukvårdsförvaltningen"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Box 120 81"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "10223"
            },
            "organization_name": {
              "type": "string",
              "example": "Region Stockholm"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CourseItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course_item"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "video_link": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CoursesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Introduktion till Muntra Care"
            },
            "description": {
              "type": "string",
              "example": "Course, created by Groove Commerce"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CredentialsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credential"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CreditChecksResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credit_check"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "approved": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "valid_until": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CurrencyWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "currency"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "SEK"
            },
            "name": {
              "type": "string",
              "example": "Svenska kroner"
            },
            "suffix": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomPaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "custom_payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerCreditReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_credit_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "paid_amount": {
              "type": "number",
              "example": 111
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "payment_id": {
              "type": "string"
            },
            "remaining_credit": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerLossResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_loss"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": "1000.00"
            },
            "date": {
              "type": "string",
              "example": "2024-11-08"
            },
            "realized": {
              "type": "boolean",
              "example": "true"
            },
            "comment": {
              "type": "string",
              "example": "comment"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableRepRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "string",
              "example": "123"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 100
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DailyReconciliationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "daily_reconciliation"
        },
        "id": {
          "type": "string",
          "example": "106794"
        },
        "attributes": {
          "properties": {
            "card_rounding": {
              "type": "number"
            },
            "card_total": {
              "type": "number",
              "example": 1000
            },
            "mobile_total": {
              "type": "number"
            },
            "date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "incoming_cash_balance": {
              "type": "number"
            },
            "outgoing_cash_balance": {
              "type": "number"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "grand_total_sales": {
              "type": "number"
            },
            "grand_total_credits": {
              "type": "number"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DashboardReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dashboard_report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_name": {
              "type": "string",
              "example": "action-needed-patient-report-row"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DebtCollectionServicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "debt_collection_service"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_url": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-16T14:49:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-16T14:49:45+02:00"
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Allmän information"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraDeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": true
            },
            "deleted_at": {
              "type": "string",
              "example": "2025-01-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationSmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsMuntraResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeductionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deducted_from_invoice": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string",
              "example": "test name"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 2
            },
            "quantity": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabAnchoringResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_anchoring"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test lab"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabConstructionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "comment": {
              "type": "string",
              "example": "Test comment"
            },
            "pick_out_color_in_lab": {
              "type": "boolean",
              "example": true
            },
            "splint_soft_inside": {
              "type": "boolean",
              "example": false
            },
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "boolean",
              "example": "2024-08-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDesignDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "no_metal_margin"
            },
            "label": {
              "type": "string",
              "example": "Ingen metallmarginal"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabInterproximalContactResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_interproximal_contact"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabMaterialResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_material"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "e_max"
            },
            "label": {
              "type": "string",
              "example": "E-Max"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOcclusionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_occlusion"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabPonticDesignResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_pontic_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "sanitary"
            },
            "label": {
              "type": "string",
              "example": "Sanitary"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabProcessStepResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_process_step"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "immediate_prosthesis"
            },
            "label": {
              "type": "string",
              "example": "Immediatprotes"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabScaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_scale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Bioform"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "lab_name": {
              "type": "string",
              "example": "Arclai lab"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testemail@muntra.com"
            },
            "latitude": {
              "type": "number",
              "example": 59.932461
            },
            "longitude": {
              "type": "number",
              "example": 10.778304
            },
            "lab_orders_receiver_weight": {
              "type": "number",
              "example": 1
            },
            "number_of_lab_order_senders": {
              "type": "number",
              "example": 1
            },
            "number_of_received_lab_orders": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DepositionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "active_area_height_in_millimeters": {
              "type": "number",
              "example": 20
            },
            "active_area_width_in_millimeters": {
              "type": "number",
              "example": 30
            },
            "primary_device_identifier_number": {
              "type": "string",
              "example": "EKAV101038841"
            },
            "product_name": {
              "type": "string",
              "example": "Gendex GXS-700"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "extraoral-xray"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DigitalMailCheckStatusResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "digital_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sent_at": {
              "type": "string"
            },
            "patient_approved_at": {
              "type": "string"
            },
            "expired_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftEmailReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_email_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSmsReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_sms_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSnailMailReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_snail_mail_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EducationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "education"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "degree": {
              "type": "string"
            },
            "field_of_study": {
              "type": "string"
            },
            "school": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementAdapterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element_adapter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "49R"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_address"
        },
        "id": {
          "type": "string",
          "example": "1423"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "testemail@com.eu"
            },
            "verified_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailIcsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_ics"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string",
              "example": "testemail@com.is"
            },
            "to_name": {
              "type": "string",
              "example": "Gordon"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EquipmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ErrorNotificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "error_notification"
        },
        "id": {
          "type": "number",
          "example": 2034592
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "stack": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "version": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "ip_address": {
              "type": "string",
              "example": "79.112.148.244"
            },
            "user_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EventsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-07-02T21:31:00+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-07-02T23:26:00+02:00"
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "patient_id": {
              "type": "string"
            },
            "patient_fullname": {
              "type": "string"
            },
            "patient_partstat": {
              "type": "string"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "patient_email_status": {
              "type": "string"
            },
            "patient_sms_invitation_status": {
              "type": "string"
            },
            "patient_sms_reminder_status": {
              "type": "string"
            },
            "patient_snail_mail_status": {
              "type": "string"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "user_ids": {
              "type": "string"
            },
            "room_ids": {
              "type": "string"
            },
            "resource_ids": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string",
              "example": "done"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "expired_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Patienter med FK-data"
            },
            "requires_organization": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FilesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "intraoral-xray-bitewing"
            },
            "label": {
              "type": "string",
              "example": "Bitewing"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FirstBookableSlotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_bookable_slot"
        },
        "id": {
          "type": "string",
          "example": "8059ac202cad85fd18cf4c547c17715d"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2023-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2025-07-28T00:00:00+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": true
            },
            "book_outstanding_treatments": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card_check"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "has_free_card": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-11-02T09:16:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "place_id": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-google-place-detail-request"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "country_short_name": {
              "type": "string",
              "example": "sv"
            },
            "international_phone_number": {
              "type": "string"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "postal_code": {
              "type": "string"
            },
            "postal_town": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "route": {
              "type": "string"
            },
            "street_number": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_detail"
        },
        "id": {
          "type": "string",
          "example": "gpdr6772e7fe0af69"
        },
        "attributes": {
          "properties": {
            "include_in_sitemap": {
              "type": "boolean",
              "example": true
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "reference": {
              "type": "string"
            },
            "international_phone_number": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "formatted_address": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GovernmentAuditResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "government_audit"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_clinic_id": {
              "type": "number",
              "example": 1
            },
            "organization_number": {
              "type": "number",
              "example": 2
            },
            "transaction_id": {
              "type": "number",
              "example": 3
            },
            "date": {
              "type": "string",
              "example": "2024-11-12T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GrandTotalesponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "grand_total"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "credits": {
              "type": "number",
              "example": 100
            },
            "sales": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "mouth-selector"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistorySelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "history_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "history_code": {
              "type": "string",
              "example": "S"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-13T10:23:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "code": {
              "type": "string",
              "example": "TS"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": false
            },
            "surface_text": {
              "type": "string"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HolidayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+00:00"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            },
            "exchangable": {
              "type": "boolean",
              "example": true
            },
            "include_intro_pack": {
              "type": "boolean",
              "example": false
            },
            "reimbursed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription"
        },
        "id": {
          "type": "string",
          "example": "5"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "designated_message_receiver": {
              "type": "string"
            },
            "prescriber_city": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_street_name": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "healthcare_agent_id": {
              "type": "string"
            },
            "subject_of_care_sex": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdcCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "icd_code"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "A000"
            },
            "description": {
              "type": "string",
              "example": "Kolera som skyldes Vibrio cholerae 01, biovar cholerae"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "id_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "google-authenticator"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "personal_id_regex": {
              "type": "string"
            },
            "personal_id_placeholder": {
              "type": "string"
            },
            "personal_id_min_length": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageAnnotationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image_annotation"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 4.5
            },
            "image_height": {
              "type": "number",
              "example": 1000
            },
            "image_width": {
              "type": "number",
              "example": 500
            },
            "coordinates": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncidentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incident"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "corrective_action": {
              "type": "string"
            },
            "preventive_action": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncompleteReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incomplete_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InsuranceContractResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "insurance_contract"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "contract_id": {
              "type": "string"
            },
            "start_date": {
              "type": "string",
              "example": "2024-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-07-28T00:00:00+02:00"
            },
            "organization_id": {
              "type": "number",
              "example": 123
            },
            "price_excluding_vat": {
              "type": "string",
              "example": 10
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-10-14T22:28:33+02:00"
            },
            "cancellation_error_text": {
              "type": "string",
              "example": "Test text"
            },
            "cancellation_sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cancelled_at": {
              "type": "string",
              "example": "2024-09-14T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InventoryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "inventory_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 200
            },
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "delivery_id": {
              "type": "number",
              "example": 421
            },
            "signer_full_name": {
              "type": "string",
              "example": "John Otto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-22T10:04:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T10:04:25+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "qw112421dwqd"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "205"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 200
            },
            "vat_amount": {
              "type": "number",
              "example": 333
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-06T11:36:23+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-10-22T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_patient_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e333"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenueBreakdownPerUserReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_user_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xxr3756fe039e323"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_patient_report_row"
        },
        "id": {
          "type": "number",
          "example": "irpprr6781226528118"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1533
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1rwqw24rwq211"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "bankgiro_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_type"
        },
        "id": {
          "type": "string",
          "example": "3"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "debit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "IpAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ip_address"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "ip_address": {
              "type": "string",
              "example": "103.103.87.255"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1111"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "class": {
              "type": "string"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "mouth"
            },
            "tooth": {
              "type": "string",
              "example": "NA"
            },
            "element": {
              "type": "string",
              "example": "NA"
            },
            "class": {
              "type": "string",
              "example": "reimbursed"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionOptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section_option"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "dropdown"
            },
            "sort_order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 33
            },
            "lab_fee": {
              "type": "number",
              "example": 11
            },
            "price_code": {
              "type": "string"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoiced_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMissingBookingEpicrisisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_booking_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MissingEpicrisisReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnsignedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unsigned_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnclaimedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unclaimed_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalValidationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_validation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "required": {
              "type": "string"
            },
            "patient_history": {
              "type": "boolean",
              "example": false
            },
            "combination": {
              "type": "boolean",
              "example": false
            },
            "tooth": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceListDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-02T11:29:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabDeliveryResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string"
            },
            "received_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabUserDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LanguageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "iso_code_639_3": {
              "type": "string",
              "example": "aar"
            },
            "iso_code_639_2": {
              "type": "string",
              "example": "aar/aar"
            },
            "iso_code": {
              "type": "string",
              "example": "aa"
            },
            "name": {
              "type": "string",
              "example": "Afar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LastSelectedPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "last_selected_patient"
        },
        "id": {
          "type": "string",
          "example": "lsp6718dfd20707b"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "LegalEntityDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "legal_entity"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "1234123412241115"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "locale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string",
              "example": "sv-se"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "location"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "city": {
              "type": "string",
              "example": "Uppsala"
            },
            "postal_code": {
              "type": "string",
              "example": "75135"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LoginAttemptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "login_attempt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T12:02:27+00:00"
            },
            "version": {
              "type": "string",
              "example": "1.1.1456"
            },
            "machine_id": {
              "type": "string",
              "example": "Online"
            },
            "ip_address": {
              "type": "string",
              "example": "213.179.18.172"
            },
            "successful": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MacroSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "macro_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MaintenanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "maintenance"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MasterFindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "master_finding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "caries"
            },
            "name": {
              "type": "string",
              "example": "Karies"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRecipientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_recipient"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "is_read": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRoomDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_room"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "topic": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "unread": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-31T08:44:51+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-31T08:37:57+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageSenderDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_sender"
        },
        "id": {
          "type": "string",
          "example": "21118"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "resolved_ticket": {
              "type": "boolean",
              "example": true
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonitoredPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "monitored_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "height": {
              "type": "number",
              "example": 1
            },
            "rotate": {
              "type": "number",
              "example": 1
            },
            "sequence": {
              "type": "number",
              "example": 0
            },
            "width": {
              "type": "number",
              "example": 0
            },
            "x": {
              "type": "number",
              "example": 1
            },
            "y": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "boolean",
              "example": "Pan 20x30 cm"
            },
            "aspect_ratio": {
              "type": "number",
              "example": 1.842630779
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NewPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "new_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwwd1dqw21"
        },
        "attributes": {
          "properties": {
            "charged_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NightyDumpResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "nighty_dump"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "region": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_type": {
              "type": "string"
            },
            "model_id": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "is_read": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfPatientHoursReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_patient_hours_report_row"
        },
        "id": {
          "type": "string",
          "example": "nophrr674f1f5104976"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 1.9167
            },
            "end_date": {
              "type": "string",
              "example": "2024-06-26T23:59:59+02:00"
            },
            "start_date": {
              "type": "string",
              "example": "2024-06-26T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfUnreadMessageRoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_unread_message_room"
        },
        "id": {
          "type": "string",
          "example": "cfcd208495d565ef66e7dff9f98764da"
        },
        "attributes": {
          "properties": {
            "unread_message_rooms": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OpeningHourResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "opening_hours"
        },
        "id": {
          "type": "string",
          "example": "40098"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 10
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_name": {
              "type": "string",
              "example": "Test name"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 1
            },
            "quantity": {
              "type": "number",
              "example": 2
            },
            "vat_percentage": {
              "type": "number",
              "example": 3
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "supplier_order_id": {
              "type": "number",
              "example": 1
            },
            "confirmed_by_supplier": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization_clinic_setting"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_bankgiro": {
              "type": "string"
            },
            "government_clinic_id": {
              "type": "string"
            },
            "disable_state_api_cron_fetch": {
              "type": "boolean",
              "example": false
            },
            "auto_create_claim_payment_verifications": {
              "type": "boolean",
              "example": false
            },
            "include_mobile_payment_info_on_invoice": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraOrganizationsCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Katarinavägen 24"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "11645"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:59:38+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-02-16T08:01:01+01:00"
            },
            "invoice_reference": {
              "type": "string"
            },
            "invoice_country_code": {
              "type": "string",
              "example": "Tandblekning"
            },
            "name": {
              "type": "string",
              "example": "SE"
            },
            "invoice_plusgiro": {
              "type": "string",
              "example": "12831-8"
            },
            "invoice_bankgiro": {
              "type": "string",
              "example": "12831-9"
            },
            "invoice_account_number": {
              "type": "string"
            },
            "invoice_clearing_number": {
              "type": "string"
            },
            "invoice_swish_number": {
              "type": "string",
              "example": "1230955831"
            },
            "iban": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "company"
            },
            "cert_exists": {
              "type": "boolean",
              "example": false
            },
            "has_unpaid_invoices": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OutstandingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "outstanding_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "journal_entry_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "journal_entry_id": {
              "type": "string",
              "example": "123"
            },
            "outstanding_amount": {
              "type": "number",
              "example": 300
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Otto"
            },
            "patient_id": {
              "type": "string",
              "example": "233"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PageViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "page_view"
        },
        "id": {
          "type": "string",
          "example": "pv6772xc71d8327"
        },
        "attributes": {
          "properties": {
            "page": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1qwf12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "8a3f12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-11-11T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_entry_type"
        },
        "id": {
          "type": "string",
          "example": "pocket"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "pocket"
            },
            "detail_type": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_report_row"
        },
        "id": {
          "type": "string",
          "example": "parrr1425823c6b112"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 5
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodTemplateItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_template_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tabindex": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_selected_sides": {
              "type": "number"
            },
            "show_bleeding": {
              "type": "boolean",
              "example": true
            },
            "show_furc": {
              "type": "boolean",
              "example": true
            },
            "show_gr": {
              "type": "boolean",
              "example": true
            },
            "show_mobility": {
              "type": "boolean",
              "example": true
            },
            "show_plackindex": {
              "type": "boolean",
              "example": true
            },
            "show_pocket_depth": {
              "type": "boolean",
              "example": true
            },
            "show_pus": {
              "type": "boolean",
              "example": true
            },
            "show_sub": {
              "type": "boolean",
              "example": true
            },
            "show_supra": {
              "type": "boolean",
              "example": true
            },
            "show_lower": {
              "type": "boolean",
              "example": true
            },
            "show_upper": {
              "type": "boolean",
              "example": true
            },
            "history_id": {
              "type": "string",
              "example": "draft"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontMapResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "prev_history_id": {
              "type": "string",
              "example": "123"
            },
            "next_history_id": {
              "type": "string",
              "example": "123"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PasswordResetDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "password_reset"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "reset_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerBirthYearReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_birth_year_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpttrr775064256010a"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpdrr6750687d0302a"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T00:00:00+02:00"
            },
            "value": {
              "type": "string",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_name": {
              "type": "string",
              "example": "Mike's Clinic"
            },
            "organization_country": {
              "type": "string",
              "example": "Sverige"
            },
            "organization_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "organization_street_address_1": {
              "type": "string",
              "example": "White street"
            },
            "organization_street_address_2": {
              "type": "string",
              "example": "Stone street"
            },
            "organization_postal_code": {
              "type": "string",
              "example": "111 22"
            },
            "organization_phone_nr": {
              "type": "string"
            },
            "organization_email": {
              "type": "string",
              "example": "test_organization_email@email.com"
            },
            "organization_number": {
              "type": "string",
              "example": "123456-1234"
            },
            "ocr_number": {
              "type": "string",
              "example": "010000000269256"
            },
            "invoice_reference": {
              "type": "string"
            },
            "swish_number": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "rounding_amount": {
              "type": "number",
              "example": 1
            },
            "invoice_fee": {
              "type": "number",
              "example": 1
            },
            "clearing_number": {
              "type": "string"
            },
            "account_number": {
              "type": "string"
            },
            "bankgiro_number": {
              "type": "string"
            },
            "plusgiro_number": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "category": {
              "type": "string",
              "example": "regular"
            },
            "patient_name": {
              "type": "string",
              "example": "Over Lord"
            },
            "patient_street_address_1": {
              "type": "string",
              "example": "Yellow street"
            },
            "patient_street_address_2": {
              "type": "string",
              "example": "Blue street"
            },
            "patient_postal_code": {
              "type": "string",
              "example": "111 24"
            },
            "patient_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "patient_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string"
            },
            "third_party_name": {
              "type": "string"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "third_party_status": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 1
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 2
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 3
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T11:10:21+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientReviewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_review"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "2"
            },
            "comparison_to_expectations": {
              "type": "string"
            },
            "created_date": {
              "type": "string"
            },
            "extra_special_amazing_amenities": {
              "type": "boolean",
              "example": true
            },
            "extra_special_excellent_quality": {
              "type": "boolean",
              "example": false
            },
            "extra_special_fast_and_painless": {
              "type": "boolean",
              "example": false
            },
            "extra_special_no_waiting_time": {
              "type": "boolean",
              "example": true
            },
            "extra_special_outstanding_treatment": {
              "type": "boolean",
              "example": false
            },
            "extra_special_phenomenal_information": {
              "type": "boolean",
              "example": true
            },
            "extra_special_useful_practical_tips": {
              "type": "boolean",
              "example": false
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "example": 1
            },
            "info_rating_follow_up": {
              "type": "number",
              "example": 1
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_health": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "example": 5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "example": 5
            },
            "info_rating_pricing": {
              "type": "number",
              "example": 5
            },
            "overall_rating": {
              "type": "number",
              "example": 5
            },
            "private_comment_to_caregiver": {
              "type": "string"
            },
            "rating_quality": {
              "type": "number",
              "example": 5
            },
            "rating_bedside_manner": {
              "type": "number",
              "example": 5
            },
            "rating_hygiene": {
              "type": "string"
            },
            "rating_reception_on_arrival": {
              "type": "string"
            },
            "rating_thoroughness": {
              "type": "string",
              "example": 5
            },
            "rating_wait_time": {
              "type": "number",
              "example": 4
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_tag"
        },
        "id": {
          "type": "string",
          "example": "patient_tag"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "blue"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text_color": {
              "type": "string",
              "example": "yellow"
            },
            "expose": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "valid_from": {
              "type": "string",
              "example": "2024-07-01T19:25:31+02:00"
            },
            "valid_to": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-10-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTotalReceivableResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_total_receivable"
        },
        "id": {
          "type": "string",
          "example": "d3d9446802a44259755d38e6d163e811"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTransactionReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_transaction_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199008266972"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "maiden_name": {
              "type": "string",
              "example": "Lore"
            },
            "initials": {
              "type": "string",
              "example": "J.S."
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2002-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "muntra@email.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "patient_number": {
              "type": "string",
              "format": "number",
              "example": "222"
            },
            "invoice_reference": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "wants_anestesia": {
              "type": "boolean",
              "example": false
            },
            "start_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "end_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "free_card_number": {
              "type": "string"
            },
            "county_council_certificate_number": {
              "type": "string"
            },
            "county_council_certificate_end_date": {
              "type": "string"
            },
            "euro_certificate_number": {
              "type": "string"
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "risk_level": {
              "type": "string",
              "example": "1"
            },
            "warning": {
              "type": "boolean",
              "example": true
            },
            "warning_text": {
              "type": "string"
            },
            "xray_id": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "external_dentist": {
              "type": "string"
            },
            "external_hygienist": {
              "type": "string"
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": true
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "referral_source": {
              "type": "string"
            },
            "teeth_count": {
              "type": "string"
            },
            "untreated_teeth_count": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "nearest_booking_date": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "latest_unbooked_rebooking_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PayerTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payer_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "object_model": {
              "type": "string",
              "example": "patient"
            },
            "object_property": {
              "type": "string",
              "example": "id"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BGMax"
            },
            "value": {
              "type": "string",
              "example": "bgmax"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentPerInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_per_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            },
            "vat_amount": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTerminalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_terminal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "terminal_id": {
              "type": "string"
            },
            "async": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "bankgiro"
            },
            "label": {
              "type": "string",
              "example": "Bankgiro"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PdfResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pdf"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "201941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "customer_managed": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "action": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "person"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199002240038"
            },
            "first_name": {
              "type": "string",
              "example": "Test name"
            },
            "last_name": {
              "type": "string",
              "example": "Test last name"
            },
            "maiden_name": {
              "type": "string",
              "example": "Test maiden name"
            },
            "initials": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01001"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2000-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+380958957041"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testcq@mail.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalAccessTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_access_token"
        },
        "id": {
          "type": "string",
          "example": "19186557b98cd78214d8b1a52adbebfc8e1e943db77305ecef4ce2a103037a737517052e3scc5c6y"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            },
            "revoked": {
              "type": "boolean",
              "example": false
            },
            "access_token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalIdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PharmaceuticalArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmaceutical_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "010777"
            },
            "article_name": {
              "type": "string",
              "example": "Alvedon®"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            },
            "assortment_code": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string",
              "example": "Muntra"
            },
            "drug_form": {
              "type": "string"
            },
            "high_risk_pharmaceutical": {
              "type": "boolean",
              "example": false
            },
            "is_reimbursed": {
              "type": "boolean",
              "example": false
            },
            "non_approved": {
              "type": "boolean",
              "example": true
            },
            "npl_pack_id": {
              "type": "string",
              "example": "19780408400186"
            },
            "npl_id": {
              "type": "string",
              "example": "25780408400116"
            },
            "package_text": {
              "type": "string",
              "example": "Strip, 10 suppositorier"
            },
            "prescription_required": {
              "type": "boolean",
              "example": true
            },
            "preventive_action": {
              "type": "string"
            },
            "quantity_text": {
              "type": "string",
              "example": "10 styck"
            },
            "reference_price": {
              "type": "number",
              "example": "0.00"
            },
            "sales_stopped": {
              "type": "boolean",
              "example": true
            },
            "strength": {
              "type": "string",
              "example": "500 mg"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalPharmacyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmacy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "code": {
              "type": "string",
              "example": "7350045512239"
            },
            "label": {
              "type": "string",
              "example": "RECEPTBREVLÅDAN"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100421"
            },
            "to": {
              "type": "string",
              "example": "+46840906333"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PinnedCalendarItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimRow": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "fk_id": {
              "type": "number",
              "example": 1
            },
            "diagnosis": {
              "type": "string"
            },
            "treatment": {
              "type": "string"
            },
            "tooth": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "fk_claim_id": {
              "type": "number"
            },
            "fk_claim_status": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean"
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreSignedUrlResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "presigned_url"
        },
        "id": {
          "type": "string",
          "example": "https://media.muntra.com/patients/111111111/688f78532240feefb27113a80c3db84e8f8b09a7fe4f4.png?Expires=1737108561&Signature=qcalCAQYG8lUoFMoOsmNITQ4Pc1p-nhdD8hQ7LaeM5DJlLtgY8ier~LZrDVIEp3d-VCzH75YWX3zS0TXAu6cJav4qb3o7hdre6p2lmYRnUIs7GDCN6AO9IYfcLmnByru7YC8Q1DQL7sWkRVrBcSSLrpOuhDQjPGFj~6a335uGfEw1t1k660cVcRiRmjGjBTEQEFSjx7QRe-hdgDqJGFb9rD22RS17vSBsuQHuyBDROCu-~zMtv7dkVV55L0DLQQEaNkdFpZkSUY9o~3C22PpMotlTo0SnDRWSEzJl2Bv0phdqX03j9zTh~JEorOC9Yv5c8yZCNHWpRN2i0wVYWW2Eg__&Key-Pair-Id=K3KD4VOQOWIAAU"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreferenceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "counter": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PriceSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p123"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 2
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-19T13:31:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PricesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p701"
            },
            "price_type": {
              "type": "string",
              "example": ""
            },
            "description": {
              "type": "string",
              "example": "Fyllning av en yta på framtand eller hörntand"
            },
            "printed_text": {
              "type": "string",
              "example": ""
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "lab_fee": {
              "type": "number",
              "example": 0
            },
            "included_material": {
              "type": "string",
              "example": "Komposit"
            },
            "time_based": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "standard_duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "multi_tooth": {
              "type": "boolean",
              "example": false
            },
            "class": {
              "type": "string",
              "example": ""
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PrinterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "printer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "manufacturer_name": {
              "type": "string",
              "example": "Test manufacturer name"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "type": {
              "type": "string"
            },
            "hardware_id": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraProceduresResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandblekning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Botox-behandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PromoCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "promo_code"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "eq"
            },
            "code": {
              "type": "string",
              "example": "UZSUXF"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "gives_consent": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "New Project Proposal"
            },
            "description": {
              "type": "string",
              "example": "This is a detailed description of the proposal."
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PublicPersonDataResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "public_person_datum"
        },
        "id": {
          "type": "string",
          "example": "6776dcae07f91"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Sareksvägen 18 lgh 1002"
            },
            "address_2": {
              "type": "string"
            },
            "assembly": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "country": {
              "type": "string",
              "example": "Sweden"
            },
            "county": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "municipality": {
              "type": "string"
            },
            "postal_code": {
              "type": "number",
              "example": "16735"
            },
            "note": {
              "type": "string",
              "example": "Test note"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityActionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_action"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "type": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "frequency": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraQuestionTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "muntra"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionTagDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "calendar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "view_count": {
              "type": "number",
              "example": 2
            },
            "up_vote_count": {
              "type": "number",
              "example": 3
            },
            "down_vote_count": {
              "type": "number",
              "example": 4
            },
            "creation_date": {
              "type": "string",
              "example": "2021-11-04T12:12:54+00:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-11-04T12:12:54+00:00"
            },
            "closed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking_default"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "status": {
              "type": "string"
            },
            "booking_duration": {
              "type": "number",
              "example": 30
            },
            "months_to_booking": {
              "type": "number",
              "example": 12
            },
            "auto_rebook": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-31T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "rebooked": {
              "type": "boolean",
              "example": true
            },
            "last_treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "next_treatment_date": {
              "type": "string",
              "example": "2024-09-08T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceiptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "receipt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "receipt_number": {
              "type": "string"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "control_code": {
              "type": "string"
            },
            "control_unit_id": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-04T19:25:31+02:00"
            },
            "copy_printed_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementRuleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "share": {
              "type": "number",
              "example": 50
            },
            "from": {
              "type": "number",
              "example": 3000
            },
            "to": {
              "type": "number",
              "example": 10000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "FK & patient name"
            },
            "active": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string",
              "example": "Test text"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-30T15:00:00+01:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-30T15:00:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponseResp": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_response"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "external": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "receiver_signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceivedRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "received_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SentRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sent_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RepaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "repayment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ResourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "resource"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskEvaluationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "risk_evaluation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-27T13:41:22+02:00"
            },
            "caries_diet": {
              "type": "number",
              "example": 0
            },
            "caries_fluor_exposure": {
              "type": "number",
              "example": 0
            },
            "caries_history": {
              "type": "number",
              "example": 0
            },
            "caries_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "caries_other": {
              "type": "number",
              "example": 0
            },
            "caries_progression": {
              "type": "number",
              "example": 0
            },
            "caries_saliva": {
              "type": "number",
              "example": 0
            },
            "generic_age": {
              "type": "number",
              "example": 0
            },
            "generic_cooperation_willingness": {
              "type": "number",
              "example": 0
            },
            "generic_dental_fear": {
              "type": "number",
              "example": 0
            },
            "generic_diseases": {
              "type": "number",
              "example": 0
            },
            "generic_medications": {
              "type": "number",
              "example": 0
            },
            "parodontal_activity": {
              "type": "number",
              "example": 0
            },
            "parodontal_bleeding": {
              "type": "number",
              "example": 0
            },
            "parodontal_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "parodontal_plaque": {
              "type": "number",
              "example": 0
            },
            "parodontal_tobacco_use": {
              "type": "number",
              "example": 0
            },
            "technical_bite_physiology": {
              "type": "number",
              "example": 0
            },
            "technical_erosion": {
              "type": "number",
              "example": 0
            },
            "technical_fillings_and_crowns": {
              "type": "number",
              "example": 0
            },
            "technical_other": {
              "type": "number",
              "example": 0
            },
            "technical_prosthetics": {
              "type": "number",
              "example": 0
            },
            "technical_root_fillings": {
              "type": "number",
              "example": 0
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-27T12:41:22+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-05-27T12:41:22+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "role"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "dentist"
            },
            "occupational_code": {
              "type": "string",
              "example": "TAN"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "room"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "floor": {
              "type": "string",
              "example": "5"
            },
            "order": {
              "type": "number",
              "example": 10
            },
            "replace_with_default_users": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SafeModeConfigResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "safe_mode_config"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceSalesPerArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_sales_per_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1wdqgqw21g3f44"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "clinic_id": {
              "type": "string",
              "example": "134"
            },
            "year": {
              "type": "string",
              "example": "2024"
            },
            "month": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_description": {
              "type": "string",
              "example": "Test description"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "amount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerDateReporRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2018-01-05T00:00:00+01:00"
            },
            "value": {
              "type": "number",
              "example": 1500
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            },
            "vat_amount": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesVerificationPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_verifications_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "total_sales_amount": {
              "type": "number",
              "example": 100
            },
            "user_share": {
              "type": "number"
            },
            "verification_id": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchAnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "id_number": {
              "type": "string",
              "example": "1234123415"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "organization"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchOrganizationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Gatuadress #11"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Ort #11"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "01001"
            },
            "organization_name": {
              "type": "string",
              "example": "Företagsnamn #11"
            },
            "organization_number": {
              "type": "string",
              "example": "010011-7890"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_number": {
              "type": "string",
              "example": "256"
            },
            "social_security_number": {
              "type": "string",
              "example": "199003242402"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2005-06-14T00:00:00+02:00"
            },
            "phone_number_work": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "380951957739"
            },
            "e_mail_address": {
              "type": "string",
              "example": "triq@testmain.com"
            },
            "clinic_name": {
              "type": "string",
              "example": "Healthful #2"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchUserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "role_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShrinkageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "shrinkage"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 3
            },
            "quantity": {
              "type": "number",
              "example": 5
            },
            "signed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SickReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sick-report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string"
            },
            "caregiver_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            },
            "organization_id": {
              "type": "string"
            },
            "main_icd_code_id": {
              "type": "string"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "caregiver_first_name": {
              "type": "string",
              "example": "Mike"
            },
            "caregiver_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "caregiver_social_security_number": {
              "type": "string"
            },
            "professional_designation": {
              "type": "string"
            },
            "caregiver_third_party_id": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_street_address_1": {
              "type": "string"
            },
            "organization_name": {
              "type": "string"
            },
            "organization_number": {
              "type": "string"
            },
            "organization_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "organization_postal_code": {
              "type": "string"
            },
            "organization_street_address_1": {
              "type": "string"
            },
            "organization_clinic_third_party_id": {
              "type": "string"
            },
            "employer_name": {
              "type": "string",
              "example": "Bob Dob"
            },
            "employment_percentage": {
              "type": "number",
              "example": 12
            },
            "number_of_employers": {
              "type": "number",
              "example": 100
            },
            "from_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-09-09T19:25:31+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-24T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SigningTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "signing_token"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsInvitationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_invitation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "example": "Test message"
            },
            "segments": {
              "type": "number",
              "example": 3
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-17T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T10:26:13+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 1
            },
            "only_send_if_booking_unconfirmed": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "number"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-18T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T17:06:51+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "sender_id": {
              "type": "string"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Gorro"
            },
            "last_name": {
              "type": "string",
              "example": "Gordon"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Kyiv"
            },
            "postal_code": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 12
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "only_send_if_booking_unconfirmed": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_invoice_unread": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_remittance_unread": {
              "type": "boolean",
              "example": true
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpecialityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "speciality"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Bettfysiologi"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StandardOperatingProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "standard_operating_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_insurance_agency_id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "reference_price_general_dentistry": {
              "type": "number",
              "example": 25.3
            },
            "reference_price_specialist_dentistry": {
              "type": "number",
              "example": 33.3
            },
            "reimbursement_amount": {
              "type": "number",
              "example": 77.2
            },
            "included_material": {
              "type": "string"
            },
            "allowed_for_stb": {
              "type": "boolean",
              "example": true
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StbDiseaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "stb_disease"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1100"
            },
            "description": {
              "type": "string",
              "example": "Muntorrhet pga. läkemedelsbehandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "supplier_product_code": {
              "type": "string",
              "example": "SMS_INVITATION_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "Kallelse via SMS"
            },
            "price_is_percent_of_transaction_amount": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "customer_invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "customer_invoice_country_name": {
              "type": "string",
              "example": "Sweden"
            },
            "customer_invoice_email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "customer_invoice_postal_code": {
              "type": "string"
            },
            "customer_invoice_street_address1": {
              "type": "string"
            },
            "customer_invoice_street_address2": {
              "type": "string"
            },
            "customer_name": {
              "type": "string"
            },
            "supplier_bankgiro_number": {
              "type": "string"
            },
            "supplier_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "supplier_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "supplier_email": {
              "type": "string",
              "example": "test@testsupplieremail.com"
            },
            "supplier_name": {
              "type": "string",
              "example": "John"
            },
            "supplier_number": {
              "type": "string"
            },
            "supplier_phone_nr": {
              "type": "string"
            },
            "supplier_postal_code": {
              "type": "string"
            },
            "supplier_street_address_1": {
              "type": "string"
            },
            "supplier_street_address_2": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-08-01T00:00:00+01:00"
            },
            "ocr_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentMethodResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment_method"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            },
            "vat_amount": {
              "type": "number",
              "example": 100
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSettingsForOrganizationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_settings_for_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "api_username_at_supplier": {
              "type": "string"
            },
            "api_password_at_supplier": {
              "type": "string"
            },
            "organization_id_at_supplier": {
              "type": "string"
            },
            "preferred_supplier": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportAgentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_agent"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Ked"
            },
            "initials": {
              "type": "string",
              "example": "JO"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportEmailAdressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_email_adress"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@mail.com"
            },
            "default": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-29T10:11:17+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SurfacesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "surface"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            },
            "points": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "green"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TandenCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tanden_check"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "eligble": {
              "type": "boolean",
              "example": "Tandblekning"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "stb_amount_available": {
              "type": "number",
              "example": 10
            },
            "hcd_amount": {
              "type": "number",
              "example": 10
            },
            "hcd_start_date": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "last_treatment_date": {
              "type": "string"
            },
            "faultcode": {
              "type": "number"
            },
            "faultstring": {
              "type": "string"
            },
            "error_code": {
              "type": "number"
            },
            "error_text": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-01T11:35:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "channel": {
              "type": "string",
              "example": "web"
            },
            "public": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T10:58:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "2"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TenantDatabaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tenant_database"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "database": {
              "type": "string",
              "example": "prodentor_823"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryTextTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_text_template"
        },
        "id": {
          "type": "string",
          "example": "220731"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyIdResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyOrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_organization_clinic_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "third_party_clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "75% Horisontalt overbitt, 9 mm eller mer"
            },
            "code": {
              "type": "string",
              "example": "887"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "232100-0024"
            },
            "organization_name": {
              "type": "string",
              "example": "Folktandvården Uppsala"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "75135"
            },
            "invoice_city": {
              "type": "string",
              "example": "Uppsala"
            },
            "invoice_email_address": {
              "type": "string",
              "example": "niels@muntra.se"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "ean_number": {
              "type": "string",
              "example": "0121456784012"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "category": {
              "type": "string",
              "example": "regular"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThreeDImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "three-d-image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "application/octet-stream"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TicketResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ticket"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "subject": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-10-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSideResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "buccal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "buccal"
            },
            "two_side": {
              "type": "boolean",
              "example": false
            },
            "four_side": {
              "type": "boolean",
              "example": false
            },
            "six_side": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": false
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSurfaceSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_surface_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": true
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothTeethResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth"
        },
        "id": {
          "type": "number",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tooth": {
              "type": "string",
              "example": "19"
            },
            "jaw": {
              "type": "string",
              "example": "upper"
            },
            "side": {
              "type": "string",
              "example": "right"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string",
              "example": "1040"
            },
            "account_name": {
              "type": "string",
              "example": "Licenser"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TranslationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "translation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "count": {
              "type": "number",
              "example": 123
            },
            "lab_fee": {
              "type": "number",
              "example": 10
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dwq1d21dddqwq1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AllTreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "all_treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr673c8acec87be"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p831"
            },
            "count": {
              "type": "number",
              "example": 5
            },
            "lab_fee": {
              "type": "number",
              "example": 3
            },
            "value": {
              "type": "number",
              "example": 1000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr67475f68f09ed"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p835"
            },
            "count": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "value": {
              "type": "number",
              "example": 3000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwfqqw12f2121"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 10
            },
            "vat_amount": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "spurr6756fb2d82b87"
        },
        "attributes": {
          "properties": {
            "user_id": {
              "type": "number",
              "example": 2
            },
            "label": {
              "type": "string",
              "example": "Niels Rask"
            },
            "value": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountOfTreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "count_of_treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "tpn618df83f46a9a"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 277
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item"
        },
        "id": {
          "type": "string",
          "example": "4"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 11
            },
            "lab_fee": {
              "type": "number",
              "example": 22
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "vat_percentage": {
              "type": "number",
              "example": 11.4
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "order": {
              "type": "string"
            },
            "done": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Terapiplan"
            },
            "terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "reference": {
              "type": "string",
              "example": "Test reference"
            },
            "atb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": false
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "validated_reimbursement_amount": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "treatment_plan_free_text": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test_file.xml"
            },
            "type": {
              "type": "string",
              "example": "text/plain"
            },
            "size_in_bytes": {
              "type": "number"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "from_date": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "report_type": {
              "type": "string",
              "example": "libretto"
            },
            "only_include_reimbursed_examinations": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string",
              "example": "libretto"
            },
            "name": {
              "type": "string",
              "example": "Vårdrapportering till Libretto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e323"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Protes"
            },
            "value": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_code": {
              "type": "string",
              "example": "US"
            },
            "price_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 3
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T13:56:36+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Amalgam"
            },
            "code": {
              "type": "string",
              "example": "AM"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": true
            },
            "surface_text": {
              "type": "string",
              "example": "Test text"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwainDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "twain_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "data_source_manager_id": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string"
            },
            "product_family": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "version_info": {
              "type": "string"
            },
            "version_major": {
              "type": "string"
            },
            "version_minor": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "noise_reduction_level": {
              "type": "number"
            },
            "path_to_files": {
              "type": "string"
            },
            "monitor_folder_path": {
              "type": "string"
            },
            "monitor_folder_extension": {
              "type": "string"
            },
            "keepalive": {
              "type": "boolean",
              "example": true
            },
            "show_in_menu": {
              "type": "boolean",
              "example": true
            },
            "show_sensor_ui": {
              "type": "boolean",
              "example": true
            },
            "pass_parent_window_to_source": {
              "type": "boolean",
              "example": true
            },
            "use_modal_mode": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwoFactorAuthenticationSetupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "two_factor_authentication_setup"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "activated_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnassignedReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unassigned_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptInvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "af12f2154gewgw1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 100
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptPatientInvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_patient_invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UninvoicableLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoicable_lab_fee_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "asf12ff11212aqa"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadDentalLabOrderReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_dental_lab_order_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadSentRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_sent_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "enable_shortcuts": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": true
            },
            "enable_done": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": true
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": true
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": true
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": true
            },
            "default_treatment_plan_terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": true
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": true
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicSeedResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic_seed"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "property": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "change_user_allowed": {
              "type": "boolean",
              "example": true
            },
            "allowed_to_do_treatment": {
              "type": "boolean",
              "example": true
            },
            "use_specialist_reference_prices": {
              "type": "boolean",
              "example": true
            },
            "use_patient_properties_for_teeth_statistics": {
              "type": "boolean",
              "example": true
            },
            "save_delay_in_milliseconds": {
              "type": "boolean",
              "example": 3000
            },
            "remittance_user": {
              "type": "boolean",
              "example": false
            },
            "enable_shortcuts": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": false
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_declaration_email": {
              "type": "boolean",
              "example": true
            },
            "auto_include_declaration_sms": {
              "type": "boolean",
              "example": true
            },
            "include_ics_in_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_check_public_records_on_snail_mail_creation": {
              "type": "boolean",
              "example": true
            },
            "only_add_snail_mail_when_others_missing": {
              "type": "boolean",
              "example": true
            },
            "default_booking_title": {
              "type": "string"
            },
            "default_booking_disclaimer": {
              "type": "string"
            },
            "default_booking_cancelling_text": {
              "type": "boolean",
              "example": "Patienten ringde och lämnade"
            },
            "default_booking_duration": {
              "type": "number",
              "example": 10
            },
            "max_nr_of_days_before_first_sendout": {
              "type": "number",
              "example": 20
            },
            "default_months_to_rebooking": {
              "type": "number",
              "example": 20
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "default_days_in_calendar": {
              "type": "string"
            },
            "calendar_time_label_interval_minutes": {
              "type": "number",
              "example": 20
            },
            "calendar_minute_increment": {
              "type": "number",
              "example": 20
            },
            "calendar_zoom_value": {
              "type": "number",
              "example": 20
            },
            "calendar_from_minute": {
              "type": "string"
            },
            "calendar_to_minute": {
              "type": "string"
            },
            "calendar_color": {
              "type": "string"
            },
            "base_booking_color_on_calendar_color": {
              "type": "boolean",
              "example": false
            },
            "default_patient_booking_text": {
              "type": "string",
              "example": "Test text"
            },
            "default_patient_partstat": {
              "type": "string",
              "example": "NEEDS-ACTION"
            },
            "display_pride_config": {
              "type": "boolean",
              "example": false
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_booking_times": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": false
            },
            "search_events_by_or": {
              "type": "boolean",
              "example": false
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": false
            },
            "enable_done": {
              "type": "boolean",
              "example": false
            },
            "public_calendar_activated": {
              "type": "boolean",
              "example": false
            },
            "booking_requests_activated": {
              "type": "boolean",
              "example": false
            },
            "order_in_public_clinic_page": {
              "type": "string"
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": false
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": false
            },
            "default_invoice_credit_days": {
              "type": "number"
            },
            "default_invoice_fee": {
              "type": "number"
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_on_invoice_handling": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_receipt_on_payment": {
              "type": "boolean",
              "example": false
            },
            "default_to_no_atb": {
              "type": "boolean",
              "example": false
            },
            "use_default_journal_entry_filters": {
              "type": "boolean",
              "example": false
            },
            "default_journal_entry_status_filter": {
              "type": "string"
            },
            "default_journal_entry_type_filter": {
              "type": "string"
            },
            "default_treatment_plan_terms": {
              "type": "string"
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": false
            },
            "include_admin_journal_entries": {
              "type": "boolean",
              "example": false
            },
            "display_journal_entry_rows": {
              "type": "boolean",
              "example": false
            },
            "enable_deepest_pocket": {
              "type": "boolean",
              "example": false
            },
            "display_red_pocket_depth_text_in_perio": {
              "type": "boolean",
              "example": false
            },
            "display_roots_in_perio": {
              "type": "boolean",
              "example": false
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_fee": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_any_pharmacy": {
              "type": "boolean",
              "example": false
            },
            "accepts_referrals": {
              "type": "boolean",
              "example": false
            },
            "telemedicine_activated": {
              "type": "boolean",
              "example": false
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserProcedureAtClinicDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_procedure_at_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Forester"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string",
              "example": "Testgatan"
            },
            "address_2": {
              "type": "string",
              "example": "Testgatan 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01003"
            },
            "municipality": {
              "type": "string",
              "example": "1995-11-10T00:00:00+01:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_home": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_work": {
              "type": "string",
              "example": "+46734100450"
            },
            "fax_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:51:52+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-10T09:32:14+02:00"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "prescriber_code": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string",
              "example": "Supportmedarbetare, Muntra"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "hide_reviews_discreetly": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "example": 4.5
            },
            "overall_rating": {
              "type": "number",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ValidateClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "validate_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VatCodeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "vat_percentage": {
              "type": "number",
              "example": 33.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "CASH INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test text"
            },
            "verification_number": {
              "type": "string",
              "example": "Test text"
            },
            "created_at": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_text": {
              "type": "string",
              "example": "Patientfaktura"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VersionLogResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "version_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2020-03-22T00:00:00+00:00"
            },
            "description_of_change": {
              "type": "string",
              "example": "Introduction of version logs, bugfixes."
            },
            "software_unit_name": {
              "type": "string",
              "example": "MPMS Clinical Frontend"
            },
            "version_number": {
              "type": "string",
              "example": "1.1.432"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookQuetryParameterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_query_parameter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookRequestOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_request_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "webhook_model_id": {
              "type": "string"
            },
            "webhook_model": {
              "type": "string"
            },
            "done_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "request_method": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "request_trigger": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "partstat": {
              "type": "string"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            },
            "first_sendout_on": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "status": {
              "type": "string"
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_submitted": {
              "type": "boolean",
              "example": true
            },
            "payment_prepared": {
              "type": "boolean",
              "example": false
            },
            "price": {
              "type": "number",
              "example": 132
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_attendees": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_attendee"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_type": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_type"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "procedure"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string"
            },
            "text_color": {
              "type": "string"
            },
            "color_order": {
              "type": "string"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 123
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Dental Clinic"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Central Street 12"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string",
              "example": "dental.clinic@dental.com"
            },
            "clinic_phone_number": {
              "type": "string",
              "example": "0465636985"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "07586"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "referral": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "fee": {
              "type": "number",
              "example": 333
            },
            "lab_fee": {
              "type": "number",
              "example": 111
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 8.5
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 16
            },
            "entry_type": {
              "type": "string"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": false
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vat_code": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "vat_code"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "invoice_postal_code": {
          "type": "string"
        },
        "invoice_city": {
          "type": "string"
        },
        "invoice_email_address": {
          "type": "string"
        },
        "invoice_phone_number": {
          "type": "string"
        },
        "invoice_phone_number_2": {
          "type": "string"
        },
        "invoice_phone_mobile": {
          "type": "string"
        },
        "invoice_fax": {
          "type": "string"
        },
        "invoice_reference": {
          "type": "string"
        },
        "invoice_country_code": {
          "type": "string"
        },
        "invoice_plusgiro": {
          "type": "string"
        },
        "invoice_bankgiro": {
          "type": "string"
        },
        "invoice_account_number": {
          "type": "string"
        },
        "invoice_clearing_number": {
          "type": "string"
        },
        "invoice_swish_number": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2024-09-01T19:25:31+02:00"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-09-02T22:25:31+02:00"
        }
      },
      "type": "object"
    },
    "PatientWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "date_of_birth": {
              "type": "string",
              "example": "1956-01-01"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "e_mail_address": {
              "type": "string",
              "example": "test@email.com"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "patient_number": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": false
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "social_security_number": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string"
            },
            "view_count": {
              "type": "number",
              "example": 10
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "embedded_text": {
              "type": "string",
              "example": "Test embeded text"
            },
            "embedding": {
              "type": "string"
            },
            "relevant_for_clinic_support": {
              "type": "boolean",
              "example": true
            },
            "internal": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "public": {
              "type": "boolean",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "responsible": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "responsible"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "creator": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "creator"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "comments": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "comment"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string"
            },
            "account_name": {
              "type": "string"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Jerald"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "social_security_number": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test verification text"
            },
            "verification_number": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fiscal_year": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "fiscal_year"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "verification_serie": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "verification_serie"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "transactions": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "transactions"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WeekdayDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "weekday"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WiaDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "wia_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "wia_device_id": {
              "type": "string"
            },
            "wia_device_manufacturer": {
              "type": "string"
            },
            "wia_device_name": {
              "type": "string"
            },
            "added_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number"
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "column_name": {
              "type": "string"
            },
            "regular_expression": {
              "type": "string"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            },
            "path_to_executable": {
              "type": "string"
            },
            "path_to_files": {
              "type": "string"
            },
            "path_to_write_file": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 3
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string",
              "example": "patient"
            },
            "column_name": {
              "type": "string",
              "example": "first_name"
            },
            "regular_expression": {
              "type": "string",
              "example": "'[^0-9]'"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "422": {
      "description": "Validation error",
      "schema": {
        "properties": {
          "message": {
            "description": "List muntra-clinics",
            "type": "string",
            "example": "Please make sure that request parameters is correct"
          }
        },
        "type": "object"
      }
    }
  },
  "paths": {
    "/api/last-selected-patients": {
      "get": {
        "tags": [
          "last-selected-patients"
        ],
        "summary": "List last-selected-patients",
        "description": "Returns list of last selected patients based on the given filters",
        "operationId": "getLastSelectedPatients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List last-selected-patients",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LastSelectedPatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List last-selected-patients",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "last-selected-patients"
        ],
        "summary": "Create a last-selected-patient",
        "description": "Returns list of last selected patients based on the given filters",
        "operationId": "postLastSelectedPatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a last-selected-patient",
                  "properties": {
                    "attributes": {
                      "description": "Create a last-selected-patient",
                      "properties": {
                        "patient_id": {
                          "description": "Create a last-selected-patient",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a last-selected-patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LastSelectedPatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a last-selected-patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/latest-monitored-journal-entries": {
      "get": {
        "tags": [
          "latest-monitored-journal-entries"
        ],
        "summary": "List latest-monitored-journal-entries",
        "description": "Returns a list of latest monitored journal entries based on the given filters",
        "operationId": "getLatestMonitoredJournalEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'journal_diagnosis', 'free_card', 'verification', 'user', 'related_user', 'history', 'treatment', 'reimbursement_type', 'price', 'county_council_price', 'currency', 'vat_code', 'teeth', 'elements', 'position_elements', 'journal_validation', 'patient_invoice_row', 'patient_invoice_rows', 'claim_row', 'signer', 'prescription', 'remittance', 'received_remittance', 'sent_remittance'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List latest-monitored-journal-entries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/JournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List latest-monitored-journal-entries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/legal-entities": {
      "get": {
        "tags": [
          "legal-entities"
        ],
        "summary": "List legal-entities",
        "description": "Returns list of legal entities based on the given filters",
        "operationId": "getLegalEntitiesDocList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'tags'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_number",
            "in": "query",
            "description": "'organization_number' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List legal-entities",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LegalEntityDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List legal-entities",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "legal-entities"
        ],
        "summary": "Create a legal-entity",
        "description": "Returns created of payments per invoices based on the given filters",
        "operationId": "postLegalEntity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a legal-entity",
                  "properties": {
                    "attributes": {
                      "description": "Create a legal-entity",
                      "properties": {
                        "organization_number": {
                          "description": "Create a legal-entity",
                          "type": "string",
                          "example": "123412341124215"
                        },
                        "organization_name": {
                          "description": "Create a legal-entity",
                          "type": "string",
                          "example": "Test organization name"
                        },
                        "invoice_address_1": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_address_2": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_postal_code": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_city": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_email_address": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_number": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_number_2": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_mobile": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        },
                        "invoice_fax": {
                          "description": "Create a legal-entity",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a legal-entity",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LegalEntityDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a legal-entity",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/legal-entities/{id}": {
      "get": {
        "tags": [
          "legal-entities"
        ],
        "summary": "Retrieve a legal-entity",
        "description": "Returns certain legal entity based on the given filters",
        "operationId": "getLegalEntityDocById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'tags'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a legal-entity",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LegalEntityDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a legal-entity",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "legal-entities"
        ],
        "summary": "Edit a legal-entity",
        "description": "Returns edited legal entity based on the given filters",
        "operationId": "patchLegalEntityDocById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a legal-entity",
                  "properties": {
                    "attributes": {
                      "description": "Edit a legal-entity",
                      "properties": {
                        "deleted": {
                          "description": "Edit a legal-entity",
                          "type": "boolean",
                          "example": false
                        },
                        "organization_number": {
                          "description": "Edit a legal-entity",
                          "type": "string",
                          "example": "123412341124215"
                        },
                        "organization_name": {
                          "description": "Edit a legal-entity",
                          "type": "string",
                          "example": "Test organization name"
                        },
                        "invoice_address_1": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_address_2": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_postal_code": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_city": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_email_address": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_number": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_number_2": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_phone_mobile": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        },
                        "invoice_fax": {
                          "description": "Edit a legal-entity",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a legal-entity",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LegalEntityDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a legal-entity",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/locales": {
      "get": {
        "tags": [
          "locales"
        ],
        "summary": "List locales",
        "description": "Returns list of locales based on the given filters",
        "operationId": "getLocales",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'language'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "tag",
            "in": "query",
            "description": "'tag' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List locales",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LocaleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List locales",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/locales/{id}": {
      "get": {
        "tags": [
          "locales"
        ],
        "summary": "Retrieve a locale",
        "description": "Returns certain locale based on the given filters",
        "operationId": "getLocale",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'language'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a locale",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LocaleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a locale",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/locations": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "List locations",
        "description": "Returns list of locations based on the given filters",
        "operationId": "getLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List locations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LocationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List locations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/locations/{id}": {
      "get": {
        "tags": [
          "locations"
        ],
        "summary": "Retrieve a location",
        "description": "Returns certain location based on the given filters",
        "operationId": "getLocation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a location",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LocationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a location",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/login-attempts": {
      "get": {
        "tags": [
          "login-attempts"
        ],
        "summary": "List login-attempts",
        "description": "Returns list of login attempts based on the given filters",
        "operationId": "getLoginAttempts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List login-attempts",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LoginAttemptResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List login-attempts",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/login-attempts/{id}": {
      "get": {
        "tags": [
          "login-attempts"
        ],
        "summary": "Retrieve a login-attempt",
        "description": "Returns certain login attempt based on the given filters",
        "operationId": "getLoginAttempt",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a login-attempt",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/LoginAttemptResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a login-attempt",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/macro-selects": {
      "get": {
        "tags": [
          "macro-selects"
        ],
        "summary": "List macro-selects",
        "description": "Returns list of macro selects based on the given filters",
        "operationId": "getMacroSelects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'journal_entry_macro', 'county_council_patient_category', 'reimbursement_type', 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List macro-selects",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MacroSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List macro-selects",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "macro-selects"
        ],
        "summary": "Create a macro-select",
        "description": "Returns created macro select based on the given filters",
        "operationId": "postMacroSelect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'journal_diagnosis', 'price', 'county_council_price', 'treatment', 'county_council_patient_category', 'reimbursement_type', 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a macro-select",
                  "properties": {
                    "attributes": {
                      "description": "Create a macro-select",
                      "properties": {
                        "recommendation_position": {
                          "description": "Create a macro-select",
                          "type": "number",
                          "example": 1
                        },
                        "journal_entry_macro_id": {
                          "description": "Create a macro-select",
                          "type": "number",
                          "example": 1
                        },
                        "elements": {
                          "description": "Create a macro-select",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a macro-select",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MacroSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a macro-select",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/maintenances": {
      "get": {
        "tags": [
          "maintenances"
        ],
        "summary": "List maintenances",
        "description": "Returns list of maintenances based on the given filters",
        "operationId": "getMaintenances",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'equipment'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "equipment_id",
            "in": "query",
            "description": "'equipment_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List maintenances",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MaintenanceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List maintenances",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "maintenances"
        ],
        "summary": "Create a maintenance",
        "description": "Returns created maintenance based on the given filters",
        "operationId": "postMaintenance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'equipment'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a maintenance",
                  "properties": {
                    "attributes": {
                      "description": "Create a maintenance",
                      "properties": {
                        "name": {
                          "description": "Create a maintenance",
                          "type": "string",
                          "example": "Test name"
                        },
                        "description": {
                          "description": "Create a maintenance",
                          "type": "string",
                          "example": "Test description"
                        },
                        "equipment_id": {
                          "description": "Create a maintenance",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a maintenance",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MaintenanceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a maintenance",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/maintenances/{id}": {
      "get": {
        "tags": [
          "maintenances"
        ],
        "summary": "Retrieve a maintenance",
        "description": "Returns certain maintenance based on the given filters",
        "operationId": "getMaintenanceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'equipment'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a maintenance",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MaintenanceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a maintenance",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "maintenances"
        ],
        "summary": "Edit a maintenance",
        "description": "Returns edited maintenance based on the given filters",
        "operationId": "patchMaintenance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a maintenance",
                  "properties": {
                    "attributes": {
                      "description": "Edit a maintenance",
                      "properties": {
                        "name": {
                          "description": "Edit a maintenance",
                          "type": "string",
                          "example": "Test name"
                        },
                        "description": {
                          "description": "Edit a maintenance",
                          "type": "string",
                          "example": "Test description"
                        },
                        "equipment_id": {
                          "description": "Edit a maintenance",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a maintenance",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MaintenanceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a maintenance",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/master-findings": {
      "get": {
        "tags": [
          "master-findings"
        ],
        "summary": "List master-findings",
        "description": "Returns a list of Master Findings (Types of findings in image annotation)",
        "operationId": "getMasterFindings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List master-findings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MasterFindingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List master-findings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-recipients": {
      "get": {
        "tags": [
          "message-recipients"
        ],
        "summary": "List message-recipients",
        "description": "Returns list of message recipients based on the given filters",
        "operationId": "getMessageRecipients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient', 'message'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "message_id",
            "in": "query",
            "description": "'message_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List message-recipients",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRecipientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List message-recipients",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "message-recipients"
        ],
        "summary": "Create a message-recipient",
        "description": "Returns created message recipient based on the given filters",
        "operationId": "postMessageRecipient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message-recipient",
                  "properties": {
                    "attributes": {
                      "description": "Create a message-recipient",
                      "properties": {
                        "message_id": {
                          "description": "Create a message-recipient",
                          "type": "number",
                          "example": 10
                        },
                        "is_read": {
                          "description": "Create a message-recipient",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message-recipient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRecipientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a message-recipient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-recipients/{id}": {
      "get": {
        "tags": [
          "message-recipients"
        ],
        "summary": "Retrieve a message-recipient",
        "description": "Returns certain message recipient based on the given filters",
        "operationId": "getMessageRecipientById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient', 'message'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a message-recipient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRecipientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a message-recipient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "message-recipients"
        ],
        "summary": "Edit a message-recipient",
        "description": "Returns edited message recipient based on the given filters",
        "operationId": "patchMessageRecipientById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message-recipient",
                  "properties": {
                    "attributes": {
                      "description": "Edit a message-recipient",
                      "properties": {
                        "message_id": {
                          "description": "Edit a message-recipient",
                          "type": "number",
                          "example": 10
                        },
                        "is_read": {
                          "description": "Edit a message-recipient",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message-recipient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRecipientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a message-recipient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-rooms": {
      "get": {
        "tags": [
          "message-rooms"
        ],
        "summary": "List message-rooms",
        "description": "Returns list of message rooms based on the given filters",
        "operationId": "getMessageRooms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'ticket', 'users', 'support_agents', 'patients', 'messages', 'last_message'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_ticket",
            "in": "query",
            "description": "'has_ticket' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field can contain: 'name', 'topic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List message-rooms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRoomDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List message-rooms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "message-rooms"
        ],
        "summary": "Create a message-rooms",
        "description": "Returns create message room based on the given filters",
        "operationId": "postMessageRoom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message-rooms",
                  "properties": {
                    "attributes": {
                      "description": "Create a message-rooms",
                      "properties": {
                        "name": {
                          "description": "Create a message-rooms",
                          "type": "string",
                          "example": "Test name"
                        },
                        "topic": {
                          "description": "Create a message-rooms",
                          "type": "string"
                        },
                        "unread": {
                          "description": "Create a message-rooms",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message-rooms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRoomDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a message-rooms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-rooms/{id}": {
      "get": {
        "tags": [
          "message-rooms"
        ],
        "summary": "Retrieve a message-room",
        "description": "Returns certain message room based on the given filters",
        "operationId": "getMessageRoom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'ticket', 'users', 'support_agents', 'patients', 'messages', 'last_message'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a message-room",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRoomDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a message-room",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "message-rooms"
        ],
        "summary": "Edit a message-room",
        "description": "Returns edited message room based on the given filters",
        "operationId": "patchMessageRoom",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message-room",
                  "properties": {
                    "attributes": {
                      "description": "Edit a message-room",
                      "properties": {
                        "name": {
                          "description": "Edit a message-room",
                          "type": "string",
                          "example": "Test name"
                        },
                        "topic": {
                          "description": "Edit a message-room",
                          "type": "string"
                        },
                        "unread": {
                          "description": "Edit a message-room",
                          "type": "boolean",
                          "example": false
                        },
                        "deleted": {
                          "description": "Edit a message-room",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message-room",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageRoomDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a message-room",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-senders": {
      "post": {
        "tags": [
          "message-senders"
        ],
        "summary": "Create a message-sender",
        "description": "Returns created message sender based on the given filters",
        "operationId": "postMessageSender",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message-sender",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageSenderDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a message-sender",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/message-senders/{id}": {
      "get": {
        "tags": [
          "message-senders"
        ],
        "summary": "Retrieve a message-sender",
        "description": "Returns certain message sender based on the given filters",
        "operationId": "getMessageSender",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'support_agent', 'chatbot', 'patient', 'messages'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a message-sender",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageSenderDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a message-sender",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messages": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "List messages",
        "description": "Returns list of messages based on the given filters",
        "operationId": "getMessages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'message_room', 'message_sender', 'message_recipients'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "message_room_id",
            "in": "query",
            "description": "'message_room_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "'order' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List messages",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List messages",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "messages"
        ],
        "summary": "Create a message",
        "description": "Returns created message based on the given filters",
        "operationId": "postMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message",
                  "properties": {
                    "attributes": {
                      "description": "Create a message",
                      "properties": {
                        "name": {
                          "description": "Create a message",
                          "type": "string",
                          "example": "Test name"
                        },
                        "body": {
                          "description": "Create a message",
                          "type": "string",
                          "example": "Test body"
                        },
                        "resolved_ticket": {
                          "description": "Create a message",
                          "type": "boolean",
                          "example": true
                        },
                        "read_by_recipient_at": {
                          "description": "Create a message",
                          "type": "string",
                          "example": "2024-08-12T23:59:59+02:00"
                        },
                        "message_room_id": {
                          "description": "Create a message",
                          "type": "number",
                          "example": 1
                        },
                        "message_sender_id": {
                          "description": "Create a message",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a message",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a message",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/messages/{id}": {
      "get": {
        "tags": [
          "messages"
        ],
        "summary": "Retrieve a message",
        "description": "Returns certain message based on the given filters",
        "operationId": "getMessageById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'message_room', 'message_sender', 'message_recipients'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a message",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a message",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "messages"
        ],
        "summary": "Edit a message",
        "description": "Returns edited message based on the given filters",
        "operationId": "patchMessage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message",
                  "properties": {
                    "attributes": {
                      "description": "Edit a message",
                      "properties": {
                        "name": {
                          "description": "Edit a message",
                          "type": "string",
                          "example": "Test name"
                        },
                        "body": {
                          "description": "Edit a message",
                          "type": "string",
                          "example": "Test body"
                        },
                        "resolved_ticket": {
                          "description": "Edit a message",
                          "type": "boolean",
                          "example": true
                        },
                        "read_by_recipient_at": {
                          "description": "Edit a message",
                          "type": "string"
                        },
                        "message_room_id": {
                          "description": "Edit a message",
                          "type": "number",
                          "example": 1
                        },
                        "message_sender_id": {
                          "description": "Edit a message",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a message",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MessageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a message",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/missing-booking-epicrisis-report-rows": {
      "get": {
        "tags": [
          "missing-booking-epicrisis-report-rows"
        ],
        "summary": "List missing-booking-epicrisis-report-rows",
        "description": "Returns a list of missing booking epicrisis report rows based on the given filters",
        "operationId": "getMissingBookingEpicrisisReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include_archive",
            "in": "query",
            "description": "'include_archive' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List missing-booking-epicrisis-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/JournalEntryMissingBookingEpicrisisResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List missing-booking-epicrisis-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/missing-epicrisis-report-rows": {
      "get": {
        "tags": [
          "missing-epicrisis-report-rows"
        ],
        "summary": "List missing-epicrisis-report-rows",
        "description": "Returns a list of missing epicrisis report rows based on the given filters",
        "operationId": "getMissingEpicrisisReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List missing-epicrisis-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MissingEpicrisisReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List missing-epicrisis-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/monitored-prices": {
      "get": {
        "tags": [
          "monitored-prices"
        ],
        "summary": "List monitored-prices",
        "description": "Returns list of monitored prices based on the given filters",
        "operationId": "getMonitoredPrices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'price'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List monitored-prices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MonitoredPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List monitored-prices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "monitored-prices"
        ],
        "summary": "Create a monitored-price",
        "description": "Returns created monitored price based on the given filters",
        "operationId": "postMonitoredPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a monitored-price",
                  "properties": {
                    "attributes": {
                      "description": "Create a monitored-price",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Create a monitored-price",
                          "type": "number",
                          "example": 5
                        },
                        "price_id": {
                          "description": "Create a monitored-price",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a monitored-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MonitoredPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a monitored-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/monitored-prices/{id}": {
      "get": {
        "tags": [
          "monitored-prices"
        ],
        "summary": "Retrieve a monitored-price",
        "description": "Returns certain monitored price based on the given filters",
        "operationId": "getMonitoredPriceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'price'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a monitored-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MonitoredPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a monitored-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "monitored-prices"
        ],
        "summary": "Edit a monitored-price",
        "description": "Returns edited monitored price based on the given filters",
        "operationId": "patchMonitoredPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a monitored-price",
                  "properties": {
                    "attributes": {
                      "description": "Edit a monitored-price",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Edit a monitored-price",
                          "type": "number",
                          "example": 5
                        },
                        "price_id": {
                          "description": "Edit a monitored-price",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a monitored-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MonitoredPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a monitored-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mount-items": {
      "get": {
        "tags": [
          "mount-items"
        ],
        "summary": "List mount-items",
        "description": "Returns list of mount items based on the given filters",
        "operationId": "getMountItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'mount', 'image'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List mount-items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountItemsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List mount-items",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mount-items/{id}": {
      "get": {
        "tags": [
          "mount-items"
        ],
        "summary": "Retrieve a mount-item",
        "description": "Returns certain mount item based on the given filters",
        "operationId": "getMountItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'mount', 'image'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a mount-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountItemsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a mount-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "mount-items"
        ],
        "summary": "Edit a mount-item",
        "description": "Returns edited mount item based on the given filters",
        "operationId": "patchMountItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a mount-item",
                  "properties": {
                    "attributes": {
                      "description": "Edit a mount-item",
                      "properties": {
                        "mount_id": {
                          "description": "Edit a mount-item",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "image_id",
            "in": "query",
            "description": "'image_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a mount-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountItemsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a mount-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mount-template-selects": {
      "get": {
        "tags": [
          "mount-template-selects"
        ],
        "summary": "List mount-template-selects",
        "description": "Returns list of mount template selects based on the given filters",
        "operationId": "getMountTemplateSelects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'mount_template'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List mount-template-selects",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountTemplateSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List mount-template-selects",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "mount-template-selects"
        ],
        "summary": "Create a mount-template-select",
        "description": "Returns created mount template select based on the given filters",
        "operationId": "postMountTemplateSelect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a mount-template-select",
                  "properties": {
                    "attributes": {
                      "description": "Create a mount-template-select",
                      "properties": {
                        "recommendation_position": {
                          "description": "Create a mount-template-select",
                          "type": "number",
                          "example": 1
                        },
                        "mount_template_id": {
                          "description": "Create a mount-template-select",
                          "type": "number",
                          "example": 2
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a mount-template-select",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountTemplateSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a mount-template-select",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mount-templates": {
      "get": {
        "tags": [
          "mount-templates"
        ],
        "summary": "List mount-templates",
        "description": "Returns list of mount templates based on the given filters",
        "operationId": "getMountTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'mount_template_items', 'devices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "'device_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List mount-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List mount-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mount-templates/{id}": {
      "get": {
        "tags": [
          "mount-templates"
        ],
        "summary": "Retrieve a mount-template",
        "description": "Returns certain mount template based on the given filters",
        "operationId": "getMountTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'mount_template_items', 'devices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a mount-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a mount-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mounts": {
      "get": {
        "tags": [
          "mounts"
        ],
        "summary": "List mounts",
        "description": "Returns a list of mounts based on the given filters",
        "operationId": "getMounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'signer', 'mount_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List mounts",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List mounts",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "mounts"
        ],
        "summary": "Create a mount",
        "description": "Returns created mount based on the given filters",
        "operationId": "postMounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a mount",
                  "properties": {
                    "attributes": {
                      "description": "Create a mount",
                      "properties": {
                        "patient_id": {
                          "description": "Create a mount",
                          "type": "number",
                          "example": 212
                        },
                        "name": {
                          "description": "Create a mount",
                          "type": "string"
                        },
                        "mount_template_id": {
                          "description": "Create a mount",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a mount",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a mount",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/mounts/{id}": {
      "get": {
        "tags": [
          "mounts"
        ],
        "summary": "Retrieve a mount",
        "description": "Returns certain mount based on the given filters",
        "operationId": "getMount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'signer', 'mount_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a mount",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a mount",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "mounts"
        ],
        "summary": "Edit a mount",
        "description": "Returns edited mount based on the given filters",
        "operationId": "patchMount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a mount",
                  "properties": {
                    "attributes": {
                      "description": "Edit a mount",
                      "properties": {
                        "patient_id": {
                          "description": "Edit a mount",
                          "type": "number",
                          "example": 212
                        },
                        "name": {
                          "description": "Edit a mount",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a mount",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a mount",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-accepts-review-requests-email-settings": {
      "post": {
        "tags": [
          "muntra-accepts-review-requests-email-settings"
        ],
        "summary": "Create a muntra-accepts-review-requests-email-setting",
        "description": "Returns created Muntra accepts review requests email settings based on the given filters",
        "operationId": "postMuntraAcceptsReviewRequestsEmailSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-accepts-review-requests-email-setting",
                  "properties": {
                    "attributes": {
                      "description": "Create a muntra-accepts-review-requests-email-setting",
                      "properties": {
                        "external_id": {
                          "description": "Create a muntra-accepts-review-requests-email-setting",
                          "type": "string",
                          "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-accepts-review-requests-email-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraAcceptsReviewRequestsEmailSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-accepts-review-requests-email-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-booking-attendees": {
      "get": {
        "tags": [
          "muntra-booking-attendees"
        ],
        "summary": "List muntra-booking-attendees",
        "description": "Returns a list of Muntra booking attendees based on the given filters",
        "operationId": "getMuntraBookingAttendees",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking', 'patient', 'user', 'sms_reminders'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "only_users",
            "in": "query",
            "description": "'only_users' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-booking-attendees",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-booking-attendees",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "muntra-booking-attendees"
        ],
        "summary": "Create a muntra-booking-attendee",
        "description": "Returns created Muntra booking attendee based on the given filters",
        "operationId": "postMuntraBookingAttendee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (The user id field is required when patient id is null.)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-booking-attendee",
                  "properties": {
                    "attributes": {
                      "description": "Create a muntra-booking-attendee",
                      "properties": {
                        "booking_id": {
                          "description": "Create a muntra-booking-attendee",
                          "type": "string",
                          "example": "1"
                        },
                        "patient_id": {
                          "description": "Create a muntra-booking-attendee",
                          "type": "integer",
                          "example": 2
                        },
                        "user_id": {
                          "description": "Create a muntra-booking-attendee",
                          "type": "integer",
                          "example": 3
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "partstat",
            "in": "query",
            "description": "'partstat' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rsvp",
            "in": "query",
            "description": "'rsvp' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-booking-attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-booking-attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-booking-attendees/confirm": {
      "post": {
        "tags": [
          "muntra-booking-attendees"
        ],
        "summary": "Confirm a muntra-booking-attendee",
        "description": "Returns confirmed Muntra booking attendee based on the given filters",
        "operationId": "postMuntraBookingAttendeeConfirm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Confirm a muntra-booking-attendee",
                  "properties": {
                    "attributes": {
                      "description": "Confirm a muntra-booking-attendee",
                      "properties": {
                        "external_id": {
                          "description": "Confirm a muntra-booking-attendee",
                          "type": "string",
                          "example": "123"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Confirm a muntra-booking-attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Confirm a muntra-booking-attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-booking-attendees/{id}": {
      "get": {
        "tags": [
          "muntra-booking-attendees"
        ],
        "summary": "Retrieve a muntra-booking-attendee",
        "description": "Returns certain Muntra booking attendee based on the given filters",
        "operationId": "getMuntraBookingAttendee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' of price",
            "required": true,
            "type": "number"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking', 'patient', 'user', 'sms_reminders'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-booking-attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-booking-attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-booking-attendees/{id}/reschedule": {
      "post": {
        "tags": [
          "muntra-booking-attendees"
        ],
        "summary": "Reschedule muntra-booking-attendee",
        "description": "Returns rescheduled Muntra booking attendee based on the given filters",
        "operationId": "postMuntraBookingAttendeeReschedule",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "new_dtstart",
            "in": "formData",
            "description": "Format example: '2024-09-01T23:25:31+02:00'",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Reschedule muntra-booking-attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookingAttendeesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Reschedule muntra-booking-attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-bookings": {
      "get": {
        "tags": [
          "muntra-bookings"
        ],
        "summary": "List muntra-bookings",
        "description": "Returns a list of bookings based on the given filters",
        "operationId": "getMuntraBookings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "'booking_attendees', 'caregiver', 'room', 'booking_policy', 'clinic', can be added.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Period filter of bookings.",
            "required": false,
            "type": "string",
            "format": "date",
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Period filter of bookings.",
            "required": false,
            "type": "string",
            "format": "date",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by booking status.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-bookings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookings"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-bookings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "muntra-bookings"
        ],
        "summary": "Create a muntra-booking",
        "description": "Create a booking",
        "operationId": "postMuntraBookings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": false,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "formData",
            "description": "Clinic id field",
            "required": true,
            "type": "integer"
          },
          {
            "name": "organizer_id",
            "in": "formData",
            "description": "Organizer id field",
            "required": true,
            "type": "integer"
          },
          {
            "name": "summary",
            "in": "formData",
            "description": "Summary field",
            "required": true,
            "type": "string"
          },
          {
            "name": "dtstart",
            "in": "formData",
            "description": "Date time start field",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "dtend",
            "in": "formData",
            "description": "Date time end field",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "description",
            "in": "formData",
            "description": "Description field",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "country_id id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_personal_id",
            "in": "query",
            "description": "patient_personal_id id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "procedure_id",
            "in": "formData",
            "description": "Procedure id field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "class",
            "in": "formData",
            "description": "Class field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "text",
            "in": "formData",
            "description": "Text field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "location",
            "in": "formData",
            "description": "Location field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "transparent",
            "in": "formData",
            "description": "Transparent field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Status field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "formData",
            "description": "New patient field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "referral_source",
            "in": "formData",
            "description": "Referral source field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookings"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-bookings/{id}": {
      "get": {
        "tags": [
          "muntra-bookings"
        ],
        "summary": "Retrieve a muntra-booking",
        "description": "Retrieves a specific booking",
        "operationId": "getMuntraBooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Booking id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "type": "integer",
            "default": ""
          },
          {
            "name": "muntra_booking_id",
            "in": "query",
            "description": "Muntra booking id",
            "required": true,
            "type": "integer",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "'booking_attendees', 'caregiver', 'room', 'booking_policy', 'clinic', can be added.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Period filter of bookings.",
            "required": false,
            "type": "string",
            "format": "date",
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Period filter of bookings.",
            "required": false,
            "type": "string",
            "format": "date",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by booking status.",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraBookings"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-booking",
                  "type": "string",
                  "example": "Muntra Booking with Id BK1NxwX not found."
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-caregiver-at-locations": {
      "get": {
        "tags": [
          "muntra-caregiver-at-locations"
        ],
        "summary": "List muntra-caregiver-at-locations",
        "description": "Returns a list of caregiver-location combinations based on the given filters",
        "operationId": "getCaregiverAtLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "active",
            "in": "query",
            "description": "Query for active caregivers",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "role_ids",
            "in": "query",
            "description": "List of role ids for filtering",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "procedure_ids",
            "in": "query",
            "description": "List of procedures for filtering caregiver_at_locations records",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "query",
            "description": "Parameter for new patient procedure duration.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_caregiver_locations_without_procedure_id_matches",
            "in": "query",
            "description": "Include caregiver_locations relations without requested procedures",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "Current datetime with ISO format for defining free bookable slots",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "End of a day (current + 3 days) with ISO format for defining free bookable slots",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude of requested location for sorting results with the distance",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude of requested location for sorting results with the distance",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "radius",
            "in": "query",
            "description": "Radius in kilometers for result limitation with the distance",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_northeast_lat",
            "in": "query",
            "description": "Viewport geo limits",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_northeast_lng",
            "in": "query",
            "description": "Viewport geo limits",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_southwest_lat",
            "in": "query",
            "description": "Viewport geo limits",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_southwest_lng",
            "in": "query",
            "description": "Viewport geo limits",
            "required": false,
            "type": "number",
            "format": "float",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "Clinic ID of clinic at locations records",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "caregiver_id",
            "in": "query",
            "description": "Caregiver ID of clinic at locations records",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records in response, default is 10",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of offset page",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": "15"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-caregiver-at-locations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraCaregiverAtLocationResponse"
                  }
                },
                "included": {
                  "description": "List muntra-caregiver-at-locations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                },
                "meta": {
                  "description": "List muntra-caregiver-at-locations",
                  "properties": {
                    "pagination": {
                      "description": "List muntra-caregiver-at-locations",
                      "properties": {
                        "total": {
                          "description": "List muntra-caregiver-at-locations",
                          "type": "number",
                          "example": "2"
                        },
                        "count": {
                          "description": "List muntra-caregiver-at-locations",
                          "type": "number",
                          "example": "2"
                        },
                        "per_page": {
                          "description": "List muntra-caregiver-at-locations",
                          "type": "number",
                          "example": "2"
                        },
                        "current_page": {
                          "description": "List muntra-caregiver-at-locations",
                          "type": "number",
                          "example": "1"
                        },
                        "total_pages": {
                          "description": "List muntra-caregiver-at-locations",
                          "type": "number",
                          "example": "1"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-caregiver-at-locations",
                  "type": "string",
                  "example": "Please make request with all required query parameters"
                },
                "errors": {
                  "description": "List muntra-caregiver-at-locations",
                  "properties": {
                    "dtstart": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The dtstart is not a valid date."
                      }
                    },
                    "dtend": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The dtend field is required when dtstart is present."
                      }
                    },
                    "lng": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The lng field is required when lat is present."
                      }
                    },
                    "lat": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The lat field is required when lng is present."
                      }
                    },
                    "viewport_northeast_lat": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The viewport_northeast_lat field is required when viewport_northeast_lng,viewport_southwest_lat,viewport_southwest_lng is present."
                      }
                    },
                    "viewport_northeast_lng": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The viewport_northeast_lng field is required when viewport_northeast_lat,viewport_southwest_lat,viewport_southwest_lng is present."
                      }
                    },
                    "viewport_southwest_lat": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The viewport_northeast_lng field is required when viewport_northeast_lng,viewport_northeast_lat,viewport_southwest_lng is present."
                      }
                    },
                    "viewport_southwest_lng": {
                      "description": "List muntra-caregiver-at-locations",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "The viewport_northeast_lng field is required when viewport_northeast_lng,viewport_northeast_lat,viewport_southwest_lat is present."
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-caregiver-procedure-at-locations": {
      "get": {
        "tags": [
          "muntra-caregiver-procedure-at-locations"
        ],
        "summary": "List muntra-caregiver-procedure-at-locations",
        "description": "Returns a list of caregiver, location and procedure combinations based on the given filters",
        "operationId": "getCaregiverProcedureAtLocations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "List of additional includes in response, e.g. 'caregiver_at_location', 'procedure'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-caregiver-procedure-at-locations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraCaregiverProcedureAtLocationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-caregiver-procedure-at-locations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-caregivers": {
      "get": {
        "tags": [
          "muntra-caregivers"
        ],
        "summary": "List muntra-caregivers",
        "description": "Returns a list of caregivers based on the given filters",
        "operationId": "getMuntraCaregivers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "active",
            "in": "query",
            "description": "Query for active caregivers.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "roles",
            "in": "query",
            "description": "List of roles for filtering.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "procedure_ids",
            "in": "query",
            "description": "List of procedures for filtering caregiver_at_locations records.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "query",
            "description": "Parameter for new patient procedure duration.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_caregiver_locations_without_procedure_id_matches",
            "in": "query",
            "description": "Include caregiver_locations relations without requested procedures.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records in response, default is 10",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of offset page",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Sort by attribute name",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order of sorting, default is asc",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-caregivers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraCaregiverResponse"
                  }
                },
                "included": {
                  "description": "List muntra-caregivers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                },
                "meta": {
                  "description": "List muntra-caregivers",
                  "properties": {
                    "pagination": {
                      "description": "List muntra-caregivers",
                      "properties": {
                        "total": {
                          "description": "List muntra-caregivers",
                          "type": "number",
                          "example": "1"
                        },
                        "count": {
                          "description": "List muntra-caregivers",
                          "type": "number",
                          "example": "1"
                        },
                        "per_page": {
                          "description": "List muntra-caregivers",
                          "type": "number",
                          "example": "1"
                        },
                        "current_page": {
                          "description": "List muntra-caregivers",
                          "type": "number",
                          "example": "1"
                        },
                        "total_pages": {
                          "description": "List muntra-caregivers",
                          "type": "number",
                          "example": "1"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-caregivers",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-caregivers/{id}": {
      "get": {
        "tags": [
          "muntra-caregivers"
        ],
        "summary": "Retrieve a muntra-caregiver",
        "description": "Retrieves a specific caregiver",
        "operationId": "getMuntraCaregiverById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "List of additional includes in response, e.g. clinic,caregiver,free_bookable_slots,procedures,default_procedure,next_free_bookable_slot",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "caregiver_id",
            "in": "query",
            "description": "Caregiver Id.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "procedure_ids",
            "in": "query",
            "description": "List of procedures for filtering caregiver_at_locations records.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "query",
            "description": "Parameter for new patient procedure duration.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_caregiver_locations_without_procedure_id_matches",
            "in": "query",
            "description": "Include caregiver_locations relations without requested procedures.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-caregiver",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraCaregiverResponse"
                  }
                },
                "included": {
                  "description": "Retrieve a muntra-caregiver",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                },
                "meta": {
                  "description": "Retrieve a muntra-caregiver",
                  "properties": {
                    "pagination": {
                      "description": "Retrieve a muntra-caregiver",
                      "properties": {
                        "total": {
                          "description": "Retrieve a muntra-caregiver",
                          "type": "number",
                          "example": "1"
                        },
                        "count": {
                          "description": "Retrieve a muntra-caregiver",
                          "type": "number",
                          "example": "1"
                        },
                        "per_page": {
                          "description": "Retrieve a muntra-caregiver",
                          "type": "number",
                          "example": "1"
                        },
                        "current_page": {
                          "description": "Retrieve a muntra-caregiver",
                          "type": "number",
                          "example": "1"
                        },
                        "total_pages": {
                          "description": "Retrieve a muntra-caregiver",
                          "type": "number",
                          "example": "1"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-caregiver",
                  "type": "string",
                  "example": "Muntra Caregiver with Id 5 not found."
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-clinic-ads": {
      "get": {
        "tags": [
          "muntra-clinic-ads"
        ],
        "summary": "List muntra-clinic-ads",
        "description": "Returns a list of clinics advertised on the start page of Muntra's clinical app",
        "operationId": "getMuntraClinicAds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "'muntra_clinic_image' can be added",
            "required": false,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-clinic-ads",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicAdsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-clinic-ads",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-clinics": {
      "get": {
        "tags": [
          "muntra-clinics"
        ],
        "summary": "List muntra-clinics",
        "description": "Returns a list of clinics based on the given filters",
        "operationId": "getMuntraClinicsList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', caregivers', 'caregiver_locations', 'google_place_detail', 'patient_reviews', 'default_clinic_image', 'logotype', 'clinic_images', 'opening_hours', 'locale'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "include_administrative_roles",
            "in": "query",
            "description": "All staff/caregivers only.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "procedure_ids",
            "in": "query",
            "description": "List of procedures for filtering caregiver_at_locations records.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "query",
            "description": "Parameter for new patient procedure duration.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_caregiver_locations_without_procedure_id_matches",
            "in": "query",
            "description": "Include caregiver_locations relations without requested procedures.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_secret",
            "in": "query",
            "description": "Find a clinic by secret, this will return only one clinic as response, and not a list.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Attribute name for sorting.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction, default is asc.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records in response, default is 10",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": "",
            "maximum": 20,
            "minimum": 1
          },
          {
            "name": "page",
            "in": "query",
            "description": "Number of offset page",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-clinics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                },
                "included": {
                  "description": "List muntra-clinics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-clinics/{id}": {
      "get": {
        "tags": [
          "muntra-clinics"
        ],
        "summary": "Retrieve a muntra-clinic",
        "description": "Returns certain clinic based on the given filters",
        "operationId": "getMuntraClinicsByIdOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "integer",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', caregivers', 'caregiver_locations', 'google_place_detail', 'patient_reviews', 'default_clinic_image', 'logotype', 'clinic_images', 'opening_hours', 'locale'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "include_administrative_roles",
            "in": "query",
            "description": "All staff/caregivers only.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "procedure_ids",
            "in": "query",
            "description": "List of procedures for filtering caregiver_at_locations records.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "new_patient",
            "in": "query",
            "description": "Parameter for new patient procedure duration.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_caregiver_locations_without_procedure_id_matches",
            "in": "query",
            "description": "Include caregiver_locations relations without requested procedures.",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "Current datetime with format Y-m-d H:i for defining free bookable slots.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "End of a day (current + 3 days with format Y-m-d H:i  for defining free bookable slots.)",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "Attribute name for sorting.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order direction, default is asc.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Number of records in response, default is 10",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                },
                "included": {
                  "description": "Retrieve a muntra-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraClinicResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-declaration-item-templates": {
      "get": {
        "tags": [
          "muntra-declaration-item-templates"
        ],
        "summary": "List muntra-declaration-item-templates",
        "description": "Returns list of muntra declaration item templates based on the given filters",
        "operationId": "getMuntraDeclarationItemTemplateDocs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "booking_attendee_external_binding_id",
            "in": "query",
            "description": "'booking_attendee_external_binding_id' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration_item_category'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-declaration-item-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraDeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-declaration-item-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-declarations": {
      "post": {
        "tags": [
          "muntra-declarations"
        ],
        "summary": "Create a muntra-declaration",
        "description": "Returns created Muntra declaration based on the given filters",
        "operationId": "postMuntraDeclarationDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-declaration",
                  "properties": {
                    "type": {
                      "description": "Create a muntra-declaration",
                      "type": "string",
                      "example": "muntra_declaration"
                    },
                    "attributes": {
                      "description": "Create a muntra-declaration",
                      "properties": {
                        "medications_free_text": {
                          "description": "Create a muntra-declaration",
                          "type": "string",
                          "example": ""
                        },
                        "patient_health_evaluation": {
                          "description": "Create a muntra-declaration",
                          "type": "string",
                          "example": "Good"
                        },
                        "special_notes": {
                          "description": "Create a muntra-declaration",
                          "type": "string",
                          "example": "Test special note"
                        }
                      },
                      "type": "object"
                    },
                    "relationships": {
                      "description": "Create a muntra-declaration",
                      "properties": {
                        "declaration_items": {
                          "description": "Create a muntra-declaration",
                          "properties": {
                            "data": {
                              "description": "Create a muntra-declaration",
                              "properties": {
                                "type": {
                                  "description": "Create a muntra-declaration",
                                  "type": "string",
                                  "example": "muntra_declaration_item"
                                },
                                "attributes": {
                                  "description": "Create a muntra-declaration",
                                  "properties": {
                                    "booking_attendee_external_binding_id": {
                                      "description": "Create a muntra-declaration",
                                      "type": "string",
                                      "example": "BA56knr7xrav"
                                    },
                                    "declaration_items": {
                                      "description": "Create a muntra-declaration",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "asthma": {
                                      "description": "Create a muntra-declaration",
                                      "type": "boolean",
                                      "example": true
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-declaration",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsMuntraResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-declaration",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-email-addresses/{hash}/verify": {
      "post": {
        "tags": [
          "email-addresses"
        ],
        "summary": "Verify a muntra-email-address",
        "description": "Returns verified muntra email address based on the given filters",
        "operationId": "postEmailAddressVerifyDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "'hash' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Verify a muntra-email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Verify a muntra-email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-google-place-autocompletes": {
      "get": {
        "tags": [
          "muntra-google-place-autocompletes"
        ],
        "summary": "List muntra-google-place-autocompletes",
        "description": "Returns a list of Google place autocomplete based on the given filters",
        "operationId": "getGooglePlaceAutocomplete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "components",
            "in": "query",
            "description": "'components' field (example: 'components: country:se')",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "input",
            "in": "query",
            "description": "Input field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "sensor",
            "in": "query",
            "description": "'sensor' field",
            "required": true,
            "type": "boolean",
            "default": ""
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language field (example: 'language:sv')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "types",
            "in": "query",
            "description": "Types field (example: 'types:(regions)')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-google-place-autocompletes",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GooglePlaceAutocompleteResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-google-place-autocompletes",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-google-place-detail-requests": {
      "get": {
        "tags": [
          "muntra-google-place-detail-requests"
        ],
        "summary": "List muntra-google-place-detail-requests",
        "description": "Returns a list of Google place detail requests based on the given filters",
        "operationId": "getGooglePlaceDetailRequests",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "place_id",
            "in": "query",
            "description": "'place_id' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "sensor",
            "in": "query",
            "description": "This field is not required if 'reference' provided.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "reference",
            "in": "query",
            "description": "This field is not required if 'place_id' provided.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "language",
            "in": "query",
            "description": "Language field (example: 'language:sv')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-google-place-detail-requests",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GooglePlaceDetailRequest"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-google-place-detail-requests",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-google-place-details": {
      "get": {
        "tags": [
          "muntra-google-place-details"
        ],
        "summary": "List muntra-google-place-details",
        "description": "Returns a list of Google place details based on the given filters",
        "operationId": "getListGooglePlaceDetailsDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "'order' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-google-place-details",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GooglePlaceDetailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-google-place-details",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-google-place-details/{id}": {
      "get": {
        "tags": [
          "muntra-google-place-details"
        ],
        "summary": "Retrieve a muntra-google-place-detail",
        "description": "Returns a certain Google place details based on the given filters",
        "operationId": "getGooglePlaceDetailById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field (example: '/api/muntra-google-place-details/ChIJbwV2YQbwWEYRVX7GsjrK-GM')",
            "required": true,
            "type": "number",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "List of additional included. Available: 'parent_place', 'child_places'.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "detail_id",
            "in": "query",
            "description": "Google Place Details Id.",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-google-place-detail",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GooglePlaceDetailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-google-place-detail",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-patient-clinic-curations": {
      "post": {
        "tags": [
          "muntra-patient-clinic-curations"
        ],
        "summary": "Create a muntra-patient-clinic-curation",
        "description": "Returns created Muntra patient clinic curation based on the given filters",
        "operationId": "postMuntraPatientClinicCuration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-patient-clinic-curation",
                  "properties": {
                    "attributes": {
                      "description": "Create a muntra-patient-clinic-curation",
                      "properties": {
                        "external_id": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "type": "string",
                          "example": "RRH2HHSb9aVcHZY20XQ17tE39QOOM12HbC"
                        },
                        "accepts_children": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "accessible_via_elevator": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "accessible_via_stairs": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "capable_of_handling_fear_of_medical_procedures": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "handicap_accessible": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_drinks": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_free_parking_directly_outside_of_clinic": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_free_parking_near_the_clinic": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_magazines": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_music": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "phas_paid_parking_directly_outside_of_clinic": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_paid_parking_near_the_clinic": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_restroom": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_toys": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_tv": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_waiting_room": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_wifi": {
                          "description": "Create a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-patient-clinic-curation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientClinicCurationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-patient-clinic-curation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-patient-clinic-curations/{id}": {
      "patch": {
        "tags": [
          "muntra-patient-clinic-curations"
        ],
        "summary": "Edit a muntra-patient-clinic-curation",
        "description": "Returns edited Muntra patient clinic curation based on the given filters",
        "operationId": "patchMuntraPatientClinicCuration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' of Muntra patient clinic curation",
            "required": true,
            "type": "number"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a muntra-patient-clinic-curation",
                  "properties": {
                    "attributes": {
                      "description": "Edit a muntra-patient-clinic-curation",
                      "properties": {
                        "external_id": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "type": "string",
                          "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
                        },
                        "accepts_children": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "accessible_via_elevator": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "accessible_via_stairs": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "capable_of_handling_fear_of_medical_procedures": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "handicap_accessible": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_drinks": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_free_parking_directly_outside_of_clinic": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_free_parking_near_the_clinic": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_magazines": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_music": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "phas_paid_parking_directly_outside_of_clinic": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": true
                        },
                        "has_paid_parking_near_the_clinic": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_restroom": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_toys": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_tv": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_waiting_room": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        },
                        "has_wifi": {
                          "description": "Edit a muntra-patient-clinic-curation",
                          "required": [
                            "false"
                          ],
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a muntra-patient-clinic-curation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientClinicCurationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a muntra-patient-clinic-curation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-patient-reviews": {
      "get": {
        "tags": [
          "muntra-patient-reviews"
        ],
        "summary": "List muntra-patient-reviews",
        "description": "Returns a list of patient reviews for a caregiver based on the given filters",
        "operationId": "getMuntraPatientReviewForCaregiver",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "caregiver_id",
            "in": "query",
            "description": "Parameter for certain caregiver id.",
            "required": true,
            "type": "integer"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-patient-reviews",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-patient-reviews",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "muntra-patient-reviews"
        ],
        "summary": "Create a muntra-patient-review",
        "description": "Create a patient review",
        "operationId": "postMuntraPatientReview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "external_id",
            "in": "formData",
            "description": "External id field",
            "required": true,
            "type": "number"
          },
          {
            "name": "overall_rating",
            "in": "formData",
            "description": "Overall rating field",
            "required": true,
            "type": "number"
          },
          {
            "name": "review_comment",
            "in": "formData",
            "description": "Review rating comment field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "comparison_to_expectations",
            "in": "formData",
            "description": "Comparison to expectations field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_amazing_amenities",
            "in": "formData",
            "description": "Extra special amazing amenities field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_excellent_quality",
            "in": "formData",
            "description": "Extra special excellent quality field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_fast_and_painless",
            "in": "formData",
            "description": "Extra special fast and painless field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_no_waiting_time",
            "in": "formData",
            "description": "Extra special no waiting time field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_outstanding_treatment",
            "in": "formData",
            "description": "Extra special outstanding treatment field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_phenomenal_information",
            "in": "formData",
            "description": "Extra special phenomenal information field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_useful_practical_tips",
            "in": "formData",
            "description": "Extra special useful practical tips field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_advice_and_tips",
            "in": "formData",
            "description": "Info rating advice and tips field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_follow_up",
            "in": "formData",
            "description": "Info rating follow up field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "Info rating how to find_place",
            "in": "formData",
            "description": "Info rating how to find place field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_patient_health",
            "in": "formData",
            "description": "Info rating patient health field field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_patient_treatment",
            "in": "formData",
            "description": "Info rating patient treatment field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_pre_meeting",
            "in": "formData",
            "description": "info rating pre meeting field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "private_comment_to_caregiver",
            "in": "formData",
            "description": "Private comment to caregiver field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_quality",
            "in": "formData",
            "description": "Rating quality field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_bedside_manner",
            "in": "formData",
            "description": "Rating bedside manner field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_hygiene",
            "in": "formData",
            "description": "Rating hygiene field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_reception_on_arrival",
            "in": "formData",
            "description": "Rating reception on arrival field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_thoroughness",
            "in": "formData",
            "description": "Rating thoroughness field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_wait_time",
            "in": "formData",
            "description": "Rating wait time field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-patient-review",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-patient-review",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-patient-reviews/{id}": {
      "patch": {
        "tags": [
          "muntra-patient-reviews"
        ],
        "summary": "Edit muntra-patient-review",
        "description": "Edit a patient review",
        "operationId": "patchMuntraPatientReview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Muntra Muntra Patient Review Id.",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "type": "integer",
            "default": ""
          },
          {
            "name": "external_id",
            "in": "formData",
            "description": "External id field",
            "required": true,
            "type": "number"
          },
          {
            "name": "overall_rating",
            "in": "formData",
            "description": "Overall rating field",
            "required": true,
            "type": "number"
          },
          {
            "name": "review_comment",
            "in": "formData",
            "description": "Review rating comment field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "comparison_to_expectations",
            "in": "formData",
            "description": "Comparison to expectations field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_amazing_amenities",
            "in": "formData",
            "description": "Extra special amazing amenities field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_excellent_quality",
            "in": "formData",
            "description": "Extra special excellent quality field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_fast_and_painless",
            "in": "formData",
            "description": "Extra special fast and painless field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_no_waiting_time",
            "in": "formData",
            "description": "Extra special no waiting time field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_outstanding_treatment",
            "in": "formData",
            "description": "Extra special outstanding treatment field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_phenomenal_information",
            "in": "formData",
            "description": "Extra special phenomenal information field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "extra_special_useful_practical_tips",
            "in": "formData",
            "description": "Extra special useful practical tips field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_advice_and_tips",
            "in": "formData",
            "description": "Info rating advice and tips field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_follow_up",
            "in": "formData",
            "description": "Info rating follow up field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "Info rating how to find_place",
            "in": "formData",
            "description": "Info rating how to find place field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_patient_health",
            "in": "formData",
            "description": "Info rating patient health field field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_patient_treatment",
            "in": "formData",
            "description": "Info rating patient treatment field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "info_rating_pre_meeting",
            "in": "formData",
            "description": "info rating pre meeting field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "private_comment_to_caregiver",
            "in": "formData",
            "description": "Private comment to caregiver field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_quality",
            "in": "formData",
            "description": "Rating quality field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_bedside_manner",
            "in": "formData",
            "description": "Rating bedside manner field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_hygiene",
            "in": "formData",
            "description": "Rating hygiene field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_reception_on_arrival",
            "in": "formData",
            "description": "Rating reception on arrival field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_thoroughness",
            "in": "formData",
            "description": "Rating thoroughness field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rating_wait_time",
            "in": "formData",
            "description": "Rating wait time field",
            "required": false,
            "type": "integer",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit muntra-patient-review",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraPatientReviewCaregiver"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit muntra-patient-review",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-phone-calls": {
      "post": {
        "tags": [
          "muntra-phone-calls"
        ],
        "summary": "Create a muntra-phone-call",
        "description": "Returns created muntra phone call based on the given filters",
        "operationId": "postMuntraPhoneCall",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-phone-call",
                  "properties": {
                    "attributes": {
                      "description": "Create a muntra-phone-call",
                      "properties": {
                        "from": {
                          "description": "Create a muntra-phone-call",
                          "type": "string",
                          "example": "+46734100411"
                        },
                        "to": {
                          "description": "Create a muntra-phone-call",
                          "type": "string",
                          "example": "+46840906343"
                        },
                        "tenant_database_id": {
                          "description": "Create a muntra-phone-call",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a muntra-phone-call",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraPhoneCallResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a muntra-phone-call",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-phone-calls/telavox": {
      "post": {
        "tags": [
          "muntra-phone-calls"
        ],
        "summary": "Create a Telavox muntra-phone-call",
        "description": "Returns created Televox muntra phone call based on the given filters",
        "operationId": "postMuntraPhoneCallTelevox",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "from": {
                  "description": "Create a Telavox muntra-phone-call",
                  "type": "string",
                  "example": "+46734100411"
                },
                "tenant_database_id": {
                  "description": "Create a Telavox muntra-phone-call",
                  "type": "string",
                  "example": "1"
                },
                "to": {
                  "description": "Create a Telavox muntra-phone-call",
                  "type": "string",
                  "example": "+46840906343"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a Telavox muntra-phone-call",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraPhoneCallResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a Telavox muntra-phone-call",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-procedures": {
      "get": {
        "tags": [
          "muntra-procedures"
        ],
        "summary": "List muntra-procedures",
        "description": "Returns a list of Muntra procedures based on the given filters",
        "operationId": "getMuntraProcedures",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filter.ids",
            "in": "query",
            "description": "'filter.ids' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-procedures",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraProceduresResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-procedures",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-procedures/{id}": {
      "get": {
        "tags": [
          "muntra-procedures"
        ],
        "summary": "Retrieve a muntra-procedure",
        "description": "Returns a certain Muntra procedure based on the given filters",
        "operationId": "getMuntraProcedure",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-procedure",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraProceduresResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-procedure",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-question-tags": {
      "get": {
        "tags": [
          "muntra-question-tags"
        ],
        "summary": "List muntra-question-tags",
        "description": "Returns a list of muntra question tags based on the given filters",
        "operationId": "getMuntraQuestionTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-question-tags",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraQuestionTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-question-tags",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-question-tags/{id}": {
      "get": {
        "tags": [
          "muntra-question-tags"
        ],
        "summary": "Retrieve a muntra-question-tag",
        "description": "Returns certain muntra question tag based on the given filters",
        "operationId": "getMuntraQuestionTagById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-question-tag",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraQuestionTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-question-tag",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-roles": {
      "get": {
        "tags": [
          "muntra-roles"
        ],
        "summary": "List muntra-roles",
        "description": "Returns a list of Muntra roles based on the given filters",
        "operationId": "getMuntraRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "is_caregiver_role",
            "in": "query",
            "description": "'is_caregiver_role' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "filter.ids",
            "in": "query",
            "description": "'filter.ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_procedure'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List muntra-roles",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraRolesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List muntra-roles",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-roles/{id}": {
      "get": {
        "tags": [
          "muntra-roles"
        ],
        "summary": "Retrieve a muntra-role",
        "description": "Returns certain Muntra role based on the given filters",
        "operationId": "getMuntraRole",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_procedure'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-role",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraRolesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-role",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-signing-password-resets/{hash}": {
      "get": {
        "tags": [
          "muntra-signing-password-resets"
        ],
        "summary": "Retrieve a muntra-signing-password-reset",
        "description": "Returns a certain muntra signing password reset based on the given filters",
        "operationId": "getSigningPasswordResetsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "hash",
            "in": "path",
            "description": "'hash' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a muntra-signing-password-reset",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PasswordResetDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a muntra-signing-password-reset",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/muntra-signing-password-resets/{hash}/reset": {
      "post": {
        "tags": [
          "muntra-signing-password-resets"
        ],
        "summary": "Reset a muntra-signing-password",
        "description": "Returns reset of muntra signing password based on the given filters",
        "operationId": "postSigningPasswordResetsByIdReset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hash",
            "in": "path",
            "description": "'hash' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Reset a muntra-signing-password",
                  "properties": {
                    "attributes": {
                      "description": "Reset a muntra-signing-password",
                      "properties": {
                        "email_address": {
                          "description": "Reset a muntra-signing-password",
                          "type": "string",
                          "example": "testmuntra@email.com"
                        },
                        "new_password": {
                          "description": "Reset a muntra-signing-password",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Reset a muntra-signing-password",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PasswordResetDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Reset a muntra-signing-password",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/new-patient-report-rows": {
      "get": {
        "tags": [
          "new-patient-report-rows"
        ],
        "summary": "List new-patient-report-rows",
        "description": "Returns a list of new patient report rows based on the given filters",
        "operationId": "getNewPatientReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List new-patient-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NewPatientReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List new-patient-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/nightly-dumps": {
      "get": {
        "tags": [
          "nightly-dumps"
        ],
        "summary": "List nightly-dumps",
        "description": "Returns list of nightly dumps based on the given filters",
        "operationId": "getNightlyDumps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List nightly-dumps",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NightyDumpResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List nightly-dumps",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "nightly-dumps"
        ],
        "summary": "Create a nightly-dump",
        "description": "Returns created nightly dump based on the given filters",
        "operationId": "postNightlyDump",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a nightly-dump",
                  "properties": {
                    "attributes": {
                      "description": "Create a nightly-dump",
                      "properties": {
                        "organization_id": {
                          "description": "Create a nightly-dump",
                          "type": "number",
                          "example": 123
                        },
                        "region": {
                          "description": "Create a nightly-dump",
                          "type": "string"
                        },
                        "bucket": {
                          "description": "Create a nightly-dump",
                          "type": "string"
                        },
                        "key": {
                          "description": "Create a nightly-dump",
                          "type": "string"
                        },
                        "secret": {
                          "description": "Create a nightly-dump",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a nightly-dump",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NightyDumpResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a nightly-dump",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/nightly-dumps/{id}": {
      "get": {
        "tags": [
          "nightly-dumps"
        ],
        "summary": "Retrieve a nightly-dump",
        "description": "Returns certain nightly dump based on the given filters",
        "operationId": "getNightlyDumpById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a nightly-dump",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NightyDumpResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a nightly-dump",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "nightly-dumps"
        ],
        "summary": "Edit a nightly-dump",
        "description": "Returns edited nightly dump based on the given filters",
        "operationId": "patchNightlyDumpById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a nightly-dump",
                  "properties": {
                    "attributes": {
                      "description": "Edit a nightly-dump",
                      "properties": {
                        "organization_id": {
                          "description": "Edit a nightly-dump",
                          "type": "number",
                          "example": 123
                        },
                        "region": {
                          "description": "Edit a nightly-dump",
                          "type": "string"
                        },
                        "bucket": {
                          "description": "Edit a nightly-dump",
                          "type": "string"
                        },
                        "key": {
                          "description": "Edit a nightly-dump",
                          "type": "string"
                        },
                        "secret": {
                          "description": "Edit a nightly-dump",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a nightly-dump",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NightyDumpResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a nightly-dump",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/notification-types": {
      "get": {
        "tags": [
          "notification-types"
        ],
        "summary": "List notification-types",
        "description": "Returns list of notification types based on the given filters",
        "operationId": "getNotificationType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List notification-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List notification-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/notification-types/{id}": {
      "get": {
        "tags": [
          "notification-types"
        ],
        "summary": "Retrieve a notification-type",
        "description": "Returns certain notification type based on the given filters",
        "operationId": "getNotificationTypeById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "notification_type_id",
            "in": "query",
            "description": "'notification_type_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a notification-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a notification-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "List notifications",
        "description": "Returns list of notifications based on the given filters",
        "operationId": "getNotifications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'notification_type'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List notifications",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List notifications",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/notifications/{id}": {
      "get": {
        "tags": [
          "notifications"
        ],
        "summary": "Retrieve a notification",
        "description": "Returns certain notification based on the given filters",
        "operationId": "getNotification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'notification_type'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a notification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a notification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "notifications"
        ],
        "summary": "Edit a notification",
        "description": "Returns edited notification based on the given filters",
        "operationId": "patchNotification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a notification",
                  "properties": {
                    "attributes": {
                      "description": "Edit a notification",
                      "properties": {
                        "is_read": {
                          "description": "Edit a notification",
                          "type": "boolean",
                          "example": true
                        },
                        "deleted": {
                          "description": "Edit a notification",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a notification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NotificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a notification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/number-of-patient-hours-report-rows": {
      "get": {
        "tags": [
          "number-of-patient-hours-report-rows"
        ],
        "summary": "List number-of-patient-hours-report-rows",
        "description": "Returns a list of number of patient hours report rows based on the given filters",
        "operationId": "getNumberOfPatientHoursReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "interval",
            "in": "query",
            "description": "'interval' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List number-of-patient-hours-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NumberOfPatientHoursReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List number-of-patient-hours-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/number-of-unread-message-rooms": {
      "get": {
        "tags": [
          "number-of-unread-message-rooms"
        ],
        "summary": "List number-of-unread-message-rooms",
        "description": "Returns a list of number of unread messag rooms based on the given filters",
        "operationId": "getNumberOfUnreadMessageRooms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "has_ticket",
            "in": "query",
            "description": "'has_ticket' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List number-of-unread-message-rooms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/NumberOfUnreadMessageRoomsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List number-of-unread-message-rooms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/oauth/token": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Authentication",
        "description": "Returns token after success authentication",
        "operationId": "postLoginAuth",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "personnummer",
            "in": "formData",
            "description": "'personnummer' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "password",
            "in": "formData",
            "description": "'password' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "one_time_password",
            "in": "formData",
            "description": "'one_time_password' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "grant_type",
            "in": "formData",
            "description": "'grant_type' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "guard",
            "in": "formData",
            "description": "'guard' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "formData",
            "description": "'version' field",
            "required": false,
            "type": "string"
          },
          {
            "name": "machine_id",
            "in": "formData",
            "description": "'machine_id' field",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AuthLoginResponse"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Authentication",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/opening-hours": {
      "get": {
        "tags": [
          "opening-hours"
        ],
        "summary": "List opening-hours",
        "description": "Returns list of opening hours based on the given filters",
        "operationId": "getOpeningHours",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'weekday'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List opening-hours",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OpeningHourResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List opening-hours",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "opening-hours"
        ],
        "summary": "Create an opening-hours",
        "description": "Returns created opening hours based on the given filters",
        "operationId": "postOpeningHours",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an opening-hours",
                  "properties": {
                    "attributes": {
                      "description": "Create an opening-hours",
                      "properties": {
                        "weekday_id": {
                          "description": "Create an opening-hours",
                          "type": "number",
                          "example": 1
                        },
                        "dtstart_in_minutes": {
                          "description": "Create an opening-hours",
                          "type": "number",
                          "example": 10
                        },
                        "dtend_in_minutes": {
                          "description": "Create an opening-hours",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an opening-hours",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OpeningHourResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an opening-hours",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/opening-hours/{id}": {
      "get": {
        "tags": [
          "opening-hours"
        ],
        "summary": "Retrieve an opening-hours",
        "description": "Returns certain opening hours based on the given filters",
        "operationId": "getOpeningHour",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'weekday'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an opening-hours",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OpeningHourResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an opening-hours",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "opening-hours"
        ],
        "summary": "Edit an opening-hours",
        "description": "Returns edited opening hours based on the given filters",
        "operationId": "patchOpeningHour",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an opening-hours",
                  "properties": {
                    "attributes": {
                      "description": "Edit an opening-hours",
                      "properties": {
                        "weekday_id": {
                          "description": "Edit an opening-hours",
                          "type": "number",
                          "example": 1
                        },
                        "dtstart_in_minutes": {
                          "description": "Edit an opening-hours",
                          "type": "number",
                          "example": 10
                        },
                        "dtend_in_minutes": {
                          "description": "Edit an opening-hours",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an opening-hours",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OpeningHourResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an opening-hours",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/order-lines": {
      "get": {
        "tags": [
          "order-lines"
        ],
        "summary": "List order-lines",
        "description": "Returns list of order lines based on the given filters",
        "operationId": "getOrderLines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'order', 'supplier_invoice_row', 'vat_code', 'supplier_article', 'customized_item'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "order_id",
            "in": "query",
            "description": "'order_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List order-lines",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List order-lines",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "order-lines"
        ],
        "summary": "Create an order-line",
        "description": "Returns created order line based on the given filters",
        "operationId": "postOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an order-line",
                  "properties": {
                    "attributes": {
                      "description": "Create an order-line",
                      "properties": {
                        "product_name": {
                          "description": "Create an order-line",
                          "type": "string",
                          "example": "Test name"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 1
                        },
                        "quantity": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 2
                        },
                        "vat_percentage": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 3
                        },
                        "deleted": {
                          "description": "Create an order-line",
                          "type": "boolean",
                          "example": true
                        },
                        "order_id": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 4
                        },
                        "supplier_article_id": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 5
                        },
                        "vat_code_id": {
                          "description": "Create an order-line",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/order-lines/{id}": {
      "get": {
        "tags": [
          "order-lines"
        ],
        "summary": "Retrieve an order-line",
        "description": "Returns certain order line based on the given filters",
        "operationId": "getOrderLineById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'order', 'supplier_invoice_row', 'vat_code', 'supplier_article', 'customized_item'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "order-lines"
        ],
        "summary": "Edit an order-line",
        "description": "Returns edited order line based on the given filters",
        "operationId": "patchOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an order-line",
                  "properties": {
                    "attributes": {
                      "description": "Edit an order-line",
                      "properties": {
                        "product_name": {
                          "description": "Edit an order-line",
                          "type": "string",
                          "example": "Test name"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 1
                        },
                        "quantity": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 2
                        },
                        "vat_percentage": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 3
                        },
                        "deleted": {
                          "description": "Edit an order-line",
                          "type": "boolean",
                          "example": true
                        },
                        "order_id": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 4
                        },
                        "supplier_article_id": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 5
                        },
                        "vat_code_id": {
                          "description": "Edit an order-line",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/orders": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "List orders",
        "description": "Returns list of orders based on the given filters",
        "operationId": "getOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'organization', 'clinic', 'order_lines', 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "'supplier_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List orders",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List orders",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "orders"
        ],
        "summary": "Create an order",
        "description": "Returns created order based on the given filters",
        "operationId": "postOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an order",
                  "properties": {
                    "attributes": {
                      "description": "Create an order",
                      "properties": {
                        "currency_id": {
                          "description": "Create an order",
                          "type": "number",
                          "example": 2
                        },
                        "organization_id": {
                          "description": "Create an order",
                          "type": "number",
                          "example": 3
                        },
                        "clinic_id": {
                          "description": "Create an order",
                          "type": "number",
                          "example": 4
                        },
                        "supplier_id": {
                          "description": "Create an order",
                          "type": "number",
                          "example": 5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "orders"
        ],
        "summary": "Retrieve an order",
        "description": "Returns certain order based on the given filters",
        "operationId": "getOrderById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'organization', 'clinic', 'order_lines', 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "orders"
        ],
        "summary": "Edit an order",
        "description": "Returns edited order based on the given filters",
        "operationId": "patchOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an order",
                  "properties": {
                    "attributes": {
                      "description": "Edit an order",
                      "properties": {
                        "currency_id": {
                          "description": "Edit an order",
                          "type": "number",
                          "example": 2
                        },
                        "organization_id": {
                          "description": "Edit an order",
                          "type": "number",
                          "example": 3
                        },
                        "clinic_id": {
                          "description": "Edit an order",
                          "type": "number",
                          "example": 4
                        },
                        "supplier_id": {
                          "description": "Edit an order",
                          "type": "number",
                          "example": 5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/organization-clinic-settings": {
      "get": {
        "tags": [
          "organization-clinic-settings"
        ],
        "summary": "List organization-clinic-settings",
        "description": "Returns list of organization clinic settings based on the given filters",
        "operationId": "getOrganizationClinicSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'clinic', 'cost_center', 'payment_terminals', 'cash_registers', 'third_party_organization_clinic_settings', 'third_party_ids'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List organization-clinic-settings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List organization-clinic-settings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "organization-clinic-settings"
        ],
        "summary": "Create an organization-clinic-setting",
        "description": "Returns created organization clinic setting based on the given filters",
        "operationId": "postOrganizationClinicSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an organization-clinic-setting",
                  "properties": {
                    "attributes": {
                      "description": "Create an organization-clinic-setting",
                      "properties": {
                        "organization_id": {
                          "description": "Create an organization-clinic-setting",
                          "type": "string",
                          "example": 810
                        },
                        "clinic_id": {
                          "description": "Create an organization-clinic-setting",
                          "type": "string",
                          "example": 221
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/organization-clinic-settings/{id}": {
      "get": {
        "tags": [
          "organization-clinic-settings"
        ],
        "summary": "Retrieve an organization-clinic-setting",
        "description": "Returns certain organization clinic setting based on the given filters",
        "operationId": "getOrganizationClinicSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'clinic', 'cost_center', 'payment_terminals', 'cash_registers', 'third_party_organization_clinic_settings', 'third_party_ids'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "organization-clinic-settings"
        ],
        "summary": "Edit an organization-clinic-setting",
        "description": "Returns edited organization clinic setting based on the given filters",
        "operationId": "patchOrganizationClinicSetting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an organization-clinic-setting",
                  "properties": {
                    "attributes": {
                      "description": "Edit an organization-clinic-setting",
                      "properties": {
                        "invoice_bankgiro": {
                          "description": "Edit an organization-clinic-setting",
                          "type": "string"
                        },
                        "disable_state_api_cron_fetch": {
                          "description": "Edit an organization-clinic-setting",
                          "type": "boolean",
                          "example": false
                        },
                        "auto_create_claim_payment_verifications": {
                          "description": "Edit an organization-clinic-setting",
                          "type": "boolean",
                          "example": false
                        },
                        "include_mobile_payment_info_on_invoice": {
                          "description": "Edit an organization-clinic-setting",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/OrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/organizations/current": {
      "get": {
        "tags": [
          "organizations"
        ],
        "summary": "Retrieve the current organization",
        "description": "Retrieves the organization currently selected in the user's session",
        "operationId": "getMuntraOrganizationCurrent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_procedure', 'user', 'contact_person', 'additional_owners', 'invoice_payment_standard_option', 'clinics', 'verification_series', 'payment_types', 'fiscal_years', 'orders', 'payment_gateway_accounts', 'supplier_settings_for_organizations', 'organization_supplier_settings', 'organization_clinic_settings', 'reference_types', 'certificate'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current organization",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/MuntraOrganizationsCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current organization",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/outstanding-report-rows": {
      "get": {
        "tags": [
          "outstanding-report-rows"
        ],
        "summary": "List outstanding-report-rows",
        "description": "Returns a list of outstanding report rows based on the given filters",
        "operationId": "getOutstandingReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "date",
            "in": "query",
            "description": "'date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List outstanding-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InvoicePaymentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List outstanding-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/page-views": {
      "post": {
        "tags": [
          "page-views"
        ],
        "summary": "Create a page-view",
        "description": "Returns created page view based on the given filters",
        "operationId": "postPageView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a page-view",
                  "properties": {
                    "attributes": {
                      "description": "Create a page-view",
                      "properties": {
                        "page": {
                          "description": "Create a page-view",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a page-view",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PageViewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a page-view",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/paid-per-date-report-rows": {
      "get": {
        "tags": [
          "paid-per-date-report-rows"
        ],
        "summary": "List paid-per-date-report-rows",
        "description": "Returns a list of paid per date report rows based on the given filters",
        "operationId": "getPaidPerDateReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List paid-per-date-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaidPerDateReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List paid-per-date-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/paid-per-user-report-rows": {
      "get": {
        "tags": [
          "paid-per-user-report-rows"
        ],
        "summary": "List paid-per-user-report-rows",
        "description": "Returns a list of paid per user report rows based on the given filters",
        "operationId": "getPaidPerUserReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List paid-per-user-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PaidPerUserReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List paid-per-user-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parod-entry-types": {
      "get": {
        "tags": [
          "parod-entry-types"
        ],
        "summary": "List parod-entry-types",
        "description": "Returns list of parod entry types based on the given filters",
        "operationId": "getParodEntryTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parod-entry-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parod-entry-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parod-entry-types/{id}": {
      "get": {
        "tags": [
          "parod-entry-types"
        ],
        "summary": "Retrieve a parod-entry-type",
        "description": "Returns certain parod entry type based on the given filters",
        "operationId": "getParodEntryType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a parod-entry-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a parod-entry-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parod-report-rows": {
      "get": {
        "tags": [
          "parod-report-rows"
        ],
        "summary": "List invoice-revenue-per-user-report-rows",
        "description": "Returns a list of parod report rows based on the given filters",
        "operationId": "getParodReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "pocket_depth_exceeds_in_mm",
            "in": "query",
            "description": "'pocket_depth_exceeds_in_mm' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "bleeding",
            "in": "query",
            "description": "'bleeding' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_plaque_index",
            "in": "query",
            "description": "'has_plaque_index' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "unit",
            "in": "query",
            "description": "'unit' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "summarize_as",
            "in": "query",
            "description": "'summarize_as' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parod-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parod-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parod-template-items": {
      "get": {
        "tags": [
          "parod-template-items"
        ],
        "summary": "List parod-template-items",
        "description": "Returns list of parod template items based on the given filters",
        "operationId": "getParodTemplateItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tooth', 'parod_entry_type', 'tooth_side'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "template",
            "in": "query",
            "description": "'template' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parod-template-items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodTemplateItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parod-template-items",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodont-entries": {
      "get": {
        "tags": [
          "parodont-entries"
        ],
        "summary": "List parodont-entries",
        "description": "Returns list of parodont entries based on the given filters",
        "operationId": "getParodontEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'journal_entry', 'tooth', 'group', 'side'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "jaw",
            "in": "query",
            "description": "'jaw' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parodont-entries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parodont-entries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "parodont-entries"
        ],
        "summary": "Create a parodont-entry",
        "description": "Returns created parodont entry based on the given filters",
        "operationId": "postParodontEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (Only 'journal_entry_id', 'tooth_id' and 'group_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a parodont-entry",
                  "properties": {
                    "attributes": {
                      "description": "Create a parodont-entry",
                      "properties": {
                        "journal_entry_id": {
                          "description": "Create a parodont-entry",
                          "type": "number",
                          "example": 1
                        },
                        "tooth_id": {
                          "description": "Create a parodont-entry",
                          "type": "number",
                          "example": 12
                        },
                        "group_id": {
                          "description": "Create a parodont-entry",
                          "type": "string"
                        },
                        "side_id": {
                          "description": "Create a parodont-entry",
                          "type": "string"
                        },
                        "value": {
                          "description": "Create a parodont-entry",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "jaw",
            "in": "query",
            "description": "'jaw' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a parodont-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a parodont-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodont-entries/{id}": {
      "get": {
        "tags": [
          "parodont-entries"
        ],
        "summary": "Retrieve a parodont-entry",
        "description": "Returns certain parodont entry based on the given filters",
        "operationId": "getParodontEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'journal_entry', 'tooth', 'group', 'side'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a parodont-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a parodont-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "parodont-entries"
        ],
        "summary": "Edit a parodont-entry",
        "description": "Returns edited parodont entry based on the given filters",
        "operationId": "patchParodontEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (Not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont-entry",
                  "properties": {
                    "attributes": {
                      "description": "Edit a parodont-entry",
                      "properties": {
                        "journal_entry_id": {
                          "description": "Edit a parodont-entry",
                          "type": "number",
                          "example": 1
                        },
                        "tooth_id": {
                          "description": "Edit a parodont-entry",
                          "type": "number",
                          "example": 12
                        },
                        "group_id": {
                          "description": "Edit a parodont-entry",
                          "type": "string"
                        },
                        "side_id": {
                          "description": "Edit a parodont-entry",
                          "type": "string"
                        },
                        "value": {
                          "description": "Edit a parodont-entry",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a parodont-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodont-journal-entries": {
      "get": {
        "tags": [
          "parodont-journal-entries"
        ],
        "summary": "List parodont-journal-entries",
        "description": "Returns list of parodont journal entries based on the given filters",
        "operationId": "getParodontJournalEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'parodont_entries', 'signer', 'user.role', 'signer.role'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parodont-journal-entries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parodont-journal-entries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "parodont-journal-entries"
        ],
        "summary": "Create a parodont-journal-entry",
        "description": "Returns created parodont journal entry based on the given filters",
        "operationId": "postParodontJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a parodont-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Create a parodont-journal-entry",
                      "properties": {
                        "entry_date": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "2024-06-21T08:21:16+02:00"
                        },
                        "text": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "Registrering av parodontal status"
                        },
                        "printed_text": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "Test printed text"
                        },
                        "referral": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": false
                        },
                        "quantity": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "fee": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "lab_fee": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "discount_excluding_vat": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "duration_in_minutes": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number",
                          "example": 10
                        },
                        "entry_type": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "parodont"
                        },
                        "included_in_insurance": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "draft": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "imported": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "editable": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "deleted": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "status": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string"
                        },
                        "signed_at": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "last_selected_sides": {
                          "description": "Create a parodont-journal-entry",
                          "type": "number"
                        },
                        "show_bleeding": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_furc": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_gr": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_mobility": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_plackindex": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_pocket_depth": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_pus": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_sub": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_supra": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_lower": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_upper": {
                          "description": "Create a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "history_id": {
                          "description": "Create a parodont-journal-entry",
                          "type": "string",
                          "example": "draft"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a parodont-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a parodont-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodont-journal-entries/{id}": {
      "get": {
        "tags": [
          "parodont-journal-entries"
        ],
        "summary": "Retrieve a parodont-journal-entry",
        "description": "Returns certain parodont journal entry based on the given filters",
        "operationId": "getParodontJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'parodont_entries', 'signer', 'user.role', 'signer.role'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a parodont-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a parodont-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "parodont-journal-entries"
        ],
        "summary": "Edit a parodont-journal-entry",
        "description": "Returns edited parodont journal entry based on the given filters",
        "operationId": "editParodontJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Edit a parodont-journal-entry",
                      "properties": {
                        "entry_date": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "2024-06-21T08:21:16+02:00"
                        },
                        "text": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "Registrering av parodontal status"
                        },
                        "printed_text": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "Test printed text"
                        },
                        "referral": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": false
                        },
                        "quantity": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "fee": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "lab_fee": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "discount_excluding_vat": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "duration_in_minutes": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number",
                          "example": 10
                        },
                        "entry_type": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "parodont"
                        },
                        "included_in_insurance": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "draft": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "imported": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "editable": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "deleted": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "status": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string"
                        },
                        "signed_at": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "last_selected_sides": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "number"
                        },
                        "show_bleeding": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_furc": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_gr": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_mobility": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_plackindex": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_pocket_depth": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_pus": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_sub": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_supra": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_lower": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "show_upper": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "boolean",
                          "example": true
                        },
                        "history_id": {
                          "description": "Edit a parodont-journal-entry",
                          "type": "string",
                          "example": "draft"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a parodont-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodont-journal-entry-versions": {
      "get": {
        "tags": [
          "parodont-journal-entry-versions"
        ],
        "summary": "List parodont-journal-entry-versions",
        "description": "Returns list of parodont journal entry versions based on the given filters",
        "operationId": "getParodontJournalEntryVersions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "parodont_journal_entry_id",
            "in": "query",
            "description": "'parodont_journal_entry_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parodont-journal-entry-versions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontJournalEntryVersionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parodont-journal-entry-versions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodonts": {
      "get": {
        "tags": [
          "parodonts"
        ],
        "summary": "List parodonts",
        "description": "Returns list of parodonts based on the given filters",
        "operationId": "getParodontsMapList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'updater', 'signer'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List parodonts",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontMapResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List parodonts",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/parodonts/{id}": {
      "patch": {
        "tags": [
          "parodonts"
        ],
        "summary": "Edit a parodont",
        "description": "Returns edited parodont based on the given filters",
        "operationId": "patchParodontsMapById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont",
                  "properties": {
                    "attributes": {
                      "description": "Edit a parodont",
                      "properties": {
                        "patient_id": {
                          "description": "Edit a parodont",
                          "type": "number",
                          "example": 123
                        },
                        "signing_password": {
                          "description": "Edit a parodont",
                          "type": "string"
                        },
                        "signer_id": {
                          "description": "Edit a parodont",
                          "type": "number"
                        },
                        "journal_entry_id": {
                          "description": "Edit a parodont",
                          "type": "number"
                        },
                        "prev_history_id": {
                          "description": "Edit a parodont",
                          "type": "number"
                        },
                        "next_history_id": {
                          "description": "Edit a parodont",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a parodont",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ParodontMapResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a parodont",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-count-per-birth-year-report-rows": {
      "get": {
        "tags": [
          "patient-count-per-birth-year-report-rows"
        ],
        "summary": "List patient-count-per-birth-year-report-rows",
        "description": "Returns a list of patient count per birth year report rows based on the given filters",
        "operationId": "getPatientCountPerBirthYearReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-count-per-birth-year-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientCountPerBirthYearReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-count-per-birth-year-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-count-per-date-report-rows": {
      "get": {
        "tags": [
          "patient-count-per-date-report-rows"
        ],
        "summary": "List patient-count-per-date-report-rows",
        "description": "Returns a list of patient count per date report rows based on the given filters",
        "operationId": "getPatientCountPerDateReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-count-per-date-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientCountPerDateReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-count-per-date-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-count-report-rows": {
      "get": {
        "tags": [
          "patient-count-report-rows"
        ],
        "summary": "List patient-count-report-rows",
        "description": "Returns a list of patient count report rows based on the given filters",
        "operationId": "getPatientCountReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-count-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientCountReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-count-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoice-rows": {
      "get": {
        "tags": [
          "patient-invoice-rows"
        ],
        "summary": "List patient-invoice-rows",
        "description": "Returns list of patient invoice rows based on the given filters",
        "operationId": "getPatientInvoiceRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient_invoices', 'user', 'price', 'patient_payment_method', 'journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-invoice-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-invoice-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient-invoice-rows"
        ],
        "summary": "Create a patient-invoice-row",
        "description": "Returns created patient invoice row based on the given filters",
        "operationId": "postPatientInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Create a patient-invoice-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Create a patient-invoice-row",
                          "type": "number",
                          "example": 1
                        },
                        "patient_invoices": {
                          "description": "Create a patient-invoice-row",
                          "properties": {
                            "patient_invoice_row_id": {
                              "description": "Create a patient-invoice-row",
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a patient-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoice-rows/{id}": {
      "get": {
        "tags": [
          "patient-invoice-rows"
        ],
        "summary": "Retrieve a patient-invoice-row",
        "description": "Returns certain patient invoice row based on the given filters",
        "operationId": "getPatientInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient_invoices', 'user', 'price', 'patient_payment_method', 'journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patient-invoice-rows"
        ],
        "summary": "Edit a patient-invoice-row",
        "description": "Returns edited patient invoice row based on the given filters",
        "operationId": "patchPatientInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit a patient-invoice-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Edit a patient-invoice-row",
                          "type": "number",
                          "example": 1
                        },
                        "patient_invoices": {
                          "description": "Edit a patient-invoice-row",
                          "properties": {
                            "patient_invoice_row_id": {
                              "description": "Edit a patient-invoice-row",
                              "type": "number",
                              "example": 1
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a patient-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices": {
      "get": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "List patient-invoices",
        "description": "Returns a list of patient invoices based on the given filters",
        "operationId": "getPatientInvoices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'third_party', 'location', 'county_council', 'daily_reconciliation', 'patient_invoice_rows', 'checkout_service', 'claims', 'invoice_payments', 'invoice_emails', 'receipt_registrations', 'deductions', 'third_party_requests', 'third_party_response_errors', 'references'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "invoice_type_ids",
            "in": "query",
            "description": "Invoice type id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "category",
            "in": "query",
            "description": "'category' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "only_third_party_tags",
            "in": "query",
            "description": "'only_third_party_tags' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "exclude_third_party_tags",
            "in": "query",
            "description": "'exclude_third_party_tags' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "has_debt_collection_service",
            "in": "query",
            "description": "'has_debt_collection_service' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "printed",
            "in": "query",
            "description": "'printed' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "only_include_unbooked_patients",
            "in": "query",
            "description": "'only_include_unbooked_patients' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_reminder",
            "in": "query",
            "description": "'has_reminder' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "receipt_from_date",
            "in": "query",
            "description": "'receipt_from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "caregiver_ids",
            "in": "query",
            "description": "'caregiver_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "location_ids",
            "in": "query",
            "description": "'location_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-invoices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-invoices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create a patient-invoice",
        "description": "Returns created patient invoice based on the given filters",
        "operationId": "postPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create a patient-invoice",
                      "properties": {
                        "journal_entry_ids": {
                          "description": "Create a patient-invoice",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "organization_id": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "123"
                        },
                        "user_id": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "11"
                        },
                        "fiscal_year_id": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "123"
                        },
                        "currency_id": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "invoice_type_id": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "patient_id": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 333
                        },
                        "product_name": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Test product name"
                        },
                        "organization_name": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Mike's Clinic"
                        },
                        "organization_country": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Sverige"
                        },
                        "organization_city": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "organization_street_address_1": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "White street"
                        },
                        "organization_street_address_2": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Stone street"
                        },
                        "organization_postal_code": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "111 22"
                        },
                        "organization_phone_nr": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "organization_email": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "test_organization_email@email.com"
                        },
                        "organization_number": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "123456-1234"
                        },
                        "ocr_number": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "010000000269256"
                        },
                        "invoice_reference": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "swish_number": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "due_date": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "rounding_amount": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_fee": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "clearing_number": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "bankgiro_number": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "plusgiro_number": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "comment": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a patient-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "category": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "regular"
                        },
                        "patient_name": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Over Lord"
                        },
                        "patient_street_address_1": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Yellow street"
                        },
                        "patient_street_address_2": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Blue street"
                        },
                        "patient_postal_code": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "111 24"
                        },
                        "patient_city": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "patient_country": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "patient_reference": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_city": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_name": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_postal_code": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_1": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_2": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_organization_id": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "third_party_status": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "generic_dental_subsidy": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "specific_dental_subsidy": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 2
                        },
                        "state_dental_subsidy": {
                          "description": "Create a patient-invoice",
                          "type": "number",
                          "example": 3
                        },
                        "read_by_recipient_at": {
                          "description": "Create a patient-invoice",
                          "type": "string"
                        },
                        "printed_at": {
                          "description": "Create a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T11:10:21+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/book-failed-to-appear": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create a no-show patient-invoice",
        "description": "Returns no-show patient invoice based on the given filters",
        "operationId": "postNoShowPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "'amount' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "product_name",
            "in": "query",
            "description": "'product_name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory fields is: 'organization_id', 'user_id', 'fiscal_year_id', 'invoice_date', 'due_date', 'currency_id', 'invoice_type_id', 'patient_id', 'amount'. Also, 'default_failed_to_appear_price' can be required)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a no-show patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create a no-show patient-invoice",
                      "properties": {
                        "organization_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "user_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "patient_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "currency_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "invoice_type_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 333
                        },
                        "product_name": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Test product name"
                        },
                        "organization_name": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Mike's Clinic"
                        },
                        "organization_country": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Sverige"
                        },
                        "organization_city": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "organization_street_address_1": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "White street"
                        },
                        "organization_street_address_2": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Stone street"
                        },
                        "organization_postal_code": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "111 22"
                        },
                        "organization_phone_nr": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "organization_email": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "test_organization_email@email.com"
                        },
                        "organization_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "123456-1234"
                        },
                        "ocr_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "010000000269256"
                        },
                        "invoice_reference": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "swish_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "due_date": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "rounding_amount": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_fee": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "clearing_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "bankgiro_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "plusgiro_number": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "comment": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a no-show patient-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "category": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "regular"
                        },
                        "patient_name": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Over Lord"
                        },
                        "patient_street_address_1": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Yellow street"
                        },
                        "patient_street_address_2": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Blue street"
                        },
                        "patient_postal_code": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "111 24"
                        },
                        "patient_city": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "patient_country": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "patient_reference": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_city": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_name": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_postal_code": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_1": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_2": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_organization_id": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "third_party_status": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "generic_dental_subsidy": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "specific_dental_subsidy": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 2
                        },
                        "state_dental_subsidy": {
                          "description": "Create a no-show patient-invoice",
                          "type": "number",
                          "example": 3
                        },
                        "read_by_recipient_at": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string"
                        },
                        "printed_at": {
                          "description": "Create a no-show patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T11:10:21+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a no-show patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a no-show patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/book-late-cancellation": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create a late-cancellation patient-invoice",
        "description": "Returns late-cancellation patient-invoice based on the given filters",
        "operationId": "postLateCancellationPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "'amount' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "product_name",
            "in": "query",
            "description": "'product_name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a late-cancellation patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create a late-cancellation patient-invoice",
                      "properties": {
                        "patient_id": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 333
                        },
                        "product_name": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Test product name"
                        },
                        "organization_name": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Mike's Clinic"
                        },
                        "organization_country": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Sverige"
                        },
                        "organization_city": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "organization_street_address_1": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "White street"
                        },
                        "organization_street_address_2": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Stone street"
                        },
                        "organization_postal_code": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "111 22"
                        },
                        "organization_phone_nr": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "organization_email": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "test_organization_email@email.com"
                        },
                        "organization_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "123456-1234"
                        },
                        "ocr_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "010000000269256"
                        },
                        "invoice_reference": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "swish_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "due_date": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "rounding_amount": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_fee": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "clearing_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "bankgiro_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "plusgiro_number": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "comment": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "category": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "regular"
                        },
                        "patient_name": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Over Lord"
                        },
                        "patient_street_address_1": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Yellow street"
                        },
                        "patient_street_address_2": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Blue street"
                        },
                        "patient_postal_code": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "111 24"
                        },
                        "patient_city": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "patient_country": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "patient_reference": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_city": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_name": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_postal_code": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_1": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_2": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_organization_id": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "third_party_status": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "generic_dental_subsidy": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "specific_dental_subsidy": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 2
                        },
                        "state_dental_subsidy": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "number",
                          "example": 3
                        },
                        "read_by_recipient_at": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string"
                        },
                        "printed_at": {
                          "description": "Create a late-cancellation patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T11:10:21+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a late-cancellation patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a late-cancellation patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/consolidate": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Consolidate a patient-invoice",
        "description": "Returns consolidated patient invoice based on the given filters",
        "operationId": "postConsolidatedPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "ids",
            "in": "query",
            "description": "'ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Consolidate a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Consolidate a patient-invoice",
                      "properties": {
                        "ids": {
                          "description": "Consolidate a patient-invoice",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "verification_date": {
                          "description": "Consolidate a patient-invoice",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Consolidate a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Consolidate a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/copy": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Copy a patient-invoice",
        "description": "Returns copied patient invoice based on the given filters",
        "operationId": "postCopyPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Copy a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Copy a patient-invoice",
                      "properties": {
                        "invoice_id": {
                          "description": "Copy a patient-invoice",
                          "type": "number",
                          "example": "123"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Copy a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Copy a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/credit": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Credit a patient-invoice",
        "description": "Returns credited patient invoice based on the given filters",
        "operationId": "postCreditPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Credit a patient-invoice",
                      "properties": {
                        "invoice_id": {
                          "description": "Credit a patient-invoice",
                          "type": "number",
                          "example": "123"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Credit a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}": {
      "get": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Retrieve a patient-invoice",
        "description": "Returns certain patient invoice based on the given filters",
        "operationId": "getPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'third_party', 'location', 'county_council', 'daily_reconciliation', 'patient_invoice_rows', 'checkout_service', 'claims', 'invoice_payments', 'invoice_emails', 'receipt_registrations', 'deductions', 'third_party_requests', 'third_party_response_errors', 'references'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Edit a patient-invoice",
        "description": "Returns edited patient invoice based on the given filters",
        "operationId": "patchPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Edit a patient-invoice",
                      "properties": {
                        "organization_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "123"
                        },
                        "user_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "11"
                        },
                        "fiscal_year_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "123"
                        },
                        "currency_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "invoice_type_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "patient_id": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 333
                        },
                        "product_name": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Test product name"
                        },
                        "organization_name": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Mike's Clinic"
                        },
                        "organization_country": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Sverige"
                        },
                        "organization_city": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "organization_street_address_1": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "White street"
                        },
                        "organization_street_address_2": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Stone street"
                        },
                        "organization_postal_code": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "111 22"
                        },
                        "organization_phone_nr": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "organization_email": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "test_organization_email@email.com"
                        },
                        "organization_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "123456-1234"
                        },
                        "ocr_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "010000000269256"
                        },
                        "invoice_reference": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "swish_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "due_date": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "rounding_amount": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_fee": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "clearing_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "account_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "bankgiro_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "plusgiro_number": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "comment": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a patient-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T12:14:26+02:00"
                        },
                        "category": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "regular"
                        },
                        "patient_name": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Over Lord"
                        },
                        "patient_street_address_1": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Yellow street"
                        },
                        "patient_street_address_2": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Blue street"
                        },
                        "patient_postal_code": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "111 24"
                        },
                        "patient_city": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "patient_country": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "patient_reference": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_city": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_name": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_postal_code": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_1": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_address_2": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_organization_id": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "third_party_status": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "generic_dental_subsidy": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "specific_dental_subsidy": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 2
                        },
                        "state_dental_subsidy": {
                          "description": "Edit a patient-invoice",
                          "type": "number",
                          "example": 3
                        },
                        "read_by_recipient_at": {
                          "description": "Edit a patient-invoice",
                          "type": "string"
                        },
                        "printed_at": {
                          "description": "Edit a patient-invoice",
                          "type": "string",
                          "example": "2024-06-28T11:10:21+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/book": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Book a patient-invoice",
        "description": "Returns booked patient invoice based on the given filters",
        "operationId": "postBookPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Book a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Book a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/create-and-schedule-reminder-snail-mail": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create and schedule reminder snail mail for patient-invoice",
        "description": "Returns created and scheduled reminder of snail mail for patient invoice based on the given filters",
        "operationId": "postCreateAndScheduleSnailMailReminderForPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule reminder snail mail for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule reminder snail mail for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/create-and-schedule-snail-mail": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create and schedule snail mail for patient-invoice",
        "description": "Returns created and scheduled snail mail for patient invoice based on the given filters",
        "operationId": "postCreateAndScheduleSnailMailForPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule snail mail for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule snail mail for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/create-debt-collection-service": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Create debt collection service for patient-invoice",
        "description": "Returns created debt collection service for patient invoice based on the given filters",
        "operationId": "postDebtCollectionServiceForPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplier_article_id",
            "in": "query",
            "description": "'supplier_article_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create debt collection service for patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create debt collection service for patient-invoice",
                      "properties": {
                        "supplier_article_id": {
                          "description": "Create debt collection service for patient-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "patient_id": {
                          "description": "Create debt collection service for patient-invoice",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create debt collection service for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create debt collection service for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/credit-copy-and-check-out-remainder": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Credit, copy and check out remainder for a patient-invoice",
        "description": "Returns created credit copy and checkout remainder for patient invoice based on the given filters",
        "operationId": "postCreditCopyAndCheckoutRemainderForPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplier_article_id",
            "in": "query",
            "description": "'supplier_article_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit, copy and check out remainder for a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Credit, copy and check out remainder for a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/credit-copy-and-debt-collect-remainder": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Credit, copy and debt-collect remainder for a patient-invoice",
        "description": "Returns credit copy and debt collect reminder based on the given filters",
        "operationId": "postCreditCopyAndDebtCollectRemainder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplier_article_id",
            "in": "query",
            "description": "'supplier_article_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (can be required)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                      "properties": {
                        "remainder_amount": {
                          "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                          "type": "number",
                          "example": 100
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Credit, copy and debt-collect remainder for a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/delete": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Delete a patient-invoice",
        "description": "Returns deleted patient invoice based on the given filters",
        "operationId": "postDeletePatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Delete a patient-invoice",
                      "properties": {
                        "verification_date": {
                          "description": "Delete a patient-invoice",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/delete-but-keep-payments": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Delete but keep payments for patient-invoice",
        "description": "Returns patient invoice based on the given filters",
        "operationId": "postDeleteButKeepPaymentsForPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete but keep payments for patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Delete but keep payments for patient-invoice",
                      "properties": {
                        "verification_date": {
                          "description": "Delete but keep payments for patient-invoice",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete but keep payments for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete but keep payments for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/force-delete": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Force delete but keep payments for patient-invoice",
        "description": "Returns deleted patient invoice based on the given filters",
        "operationId": "postForceDeleteButKeepPaymentsForPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Force delete but keep payments for patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Force delete but keep payments for patient-invoice",
                      "properties": {
                        "signing_password": {
                          "description": "Force delete but keep payments for patient-invoice",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Force delete but keep payments for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Force delete but keep payments for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/print": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Print a patient-invoice",
        "description": "Returns printed patient invoice based on the given filters",
        "operationId": "postPrintPatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Print a patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Print a patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/refund-receipt": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Refund receipt for patient-invoice",
        "description": "Returns refund receipt for patient-invoice based on the given filters",
        "operationId": "postRefundReceiptForPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Refund receipt for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Refund receipt for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/register-receipt": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Register receipt for patient-invoice",
        "description": "Returns registered receipt for patient-invoice based on the given filters",
        "operationId": "postRegisteredReceiptForPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Register receipt for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Register receipt for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/send-to-checkout-service": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Send patient-invoice to checkout service",
        "description": "Returns patient invoice based on the given filters",
        "operationId": "postSendToCheckoutServicePatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplier_article_id",
            "in": "query",
            "description": "'supplier_article_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Send patient-invoice to checkout service",
                  "properties": {
                    "attributes": {
                      "description": "Send patient-invoice to checkout service",
                      "properties": {
                        "supplier_article_id": {
                          "description": "Send patient-invoice to checkout service",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Send patient-invoice to checkout service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Send patient-invoice to checkout service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-invoices/{id}/send-to-invoice-service": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Send patient-invoice to invoice service",
        "description": "Returns patient invoice based on the given filters",
        "operationId": "postSendToInvoiceServicePatientInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Send patient-invoice to invoice service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Send patient-invoice to invoice service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-reviews": {
      "get": {
        "tags": [
          "patient-reviews"
        ],
        "summary": "List patient-reviews",
        "description": "Returns list of patient reviews based on the given filters",
        "operationId": "getPatientReviews",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-reviews",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientReviewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-reviews",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-reviews/{id}": {
      "get": {
        "tags": [
          "patient-reviews"
        ],
        "summary": "Retrieve a patient-review",
        "description": "Returns certain patient review based on the given filters",
        "operationId": "getPatientReview",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient-review",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientReviewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient-review",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-tags": {
      "get": {
        "tags": [
          "patient-tags"
        ],
        "summary": "List patient-tags",
        "description": "Returns list of patient tags based on the given filters",
        "operationId": "getPatientTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.ids",
            "in": "query",
            "description": "'filter.ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-tags",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-tags",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "patient-tags"
        ],
        "summary": "Create a patient-tag",
        "description": "Returns created patient tag based on the given filters",
        "operationId": "postPatientTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request ('name' and 'color' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-tag",
                  "properties": {
                    "attributes": {
                      "description": "Create a patient-tag",
                      "properties": {
                        "name": {
                          "description": "Create a patient-tag",
                          "type": "string",
                          "example": "Test name"
                        },
                        "color": {
                          "description": "Create a patient-tag",
                          "type": "string",
                          "example": "blue"
                        },
                        "text_color": {
                          "description": "Create a patient-tag",
                          "type": "string",
                          "example": "yellow"
                        },
                        "expose": {
                          "description": "Create a patient-tag",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-tag",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a patient-tag",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-tags/{id}": {
      "get": {
        "tags": [
          "patient-tags"
        ],
        "summary": "Retrieve a patient-tag",
        "description": "Returns certain patient tag based on the given filters",
        "operationId": "getPatientTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient-tag",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient-tag",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patient-tags"
        ],
        "summary": "Edit a patient-tag",
        "description": "Returns edited patient tag based on the given filters",
        "operationId": "patchPatientTag",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request ('name' and 'color' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-tag",
                  "properties": {
                    "attributes": {
                      "description": "Edit a patient-tag",
                      "properties": {
                        "name": {
                          "description": "Edit a patient-tag",
                          "type": "string",
                          "example": "Test name"
                        },
                        "color": {
                          "description": "Edit a patient-tag",
                          "type": "string",
                          "example": "blue"
                        },
                        "text_color": {
                          "description": "Edit a patient-tag",
                          "type": "string",
                          "example": "yellow"
                        },
                        "expose": {
                          "description": "Edit a patient-tag",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-tag",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a patient-tag",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-third-party-patient-categories": {
      "post": {
        "tags": [
          "patient-third-party-patient-categories"
        ],
        "summary": "Create a patient-third-party-patient-category",
        "description": "Returns created patient categories based on the given filters",
        "operationId": "postPatientThirdPartyPatientCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-third-party-patient-category",
                  "properties": {
                    "attributes": {
                      "description": "Create a patient-third-party-patient-category",
                      "properties": {
                        "patient_third_party_patient_category_id": {
                          "description": "Create a patient-third-party-patient-category",
                          "type": "number",
                          "example": 12
                        },
                        "patient_id": {
                          "description": "Create a patient-third-party-patient-category",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient-third-party-patient-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a patient-third-party-patient-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-third-party-patient-categories/": {
      "get": {
        "tags": [
          "patient-third-party-patient-categories"
        ],
        "summary": "List patient-third-party-patient-categories",
        "description": "Returns list of patient third party patient categories based on the given filters",
        "operationId": "getPatientThirdPartyPatientCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'third_party_patient_category'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-third-party-patient-categories",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-third-party-patient-categories",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-third-party-patient-categories/{id}": {
      "get": {
        "tags": [
          "patient-third-party-patient-categories"
        ],
        "summary": "Retrieve a patient-third-party-patient-category",
        "description": "Returns certain patient third party patient category based on the given filters",
        "operationId": "getPatientThirdPartyPatientCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'third_party_patient_category'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient-third-party-patient-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient-third-party-patient-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patient-third-party-patient-categories"
        ],
        "summary": "Edit a patient-third-party-patient-category",
        "description": "Returns edited patient third party patient category based on the given filters",
        "operationId": "patchPatientThirdPartyPatientCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-third-party-patient-category",
                  "properties": {
                    "attributes": {
                      "description": "Edit a patient-third-party-patient-category",
                      "properties": {
                        "patient_third_party_patient_category_id": {
                          "description": "Edit a patient-third-party-patient-category",
                          "type": "number",
                          "example": 12
                        },
                        "patient_id": {
                          "description": "Edit a patient-third-party-patient-category",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient-third-party-patient-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a patient-third-party-patient-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-total-receivables": {
      "get": {
        "tags": [
          "patient-total-receivables"
        ],
        "summary": "List patient-total-receivables",
        "description": "Returns a list of patient total receivables based on the given filters",
        "operationId": "getPatientTotalReceivables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-total-receivables",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTotalReceivableResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-total-receivables",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-transaction-report-rows": {
      "get": {
        "tags": [
          "patient-transaction-report-rows"
        ],
        "summary": "List patient-transaction-report-rows",
        "description": "Returns a list of patient transaction report rows based on the given filters",
        "operationId": "getPatientTransactionReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-transaction-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientTransactionReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-transaction-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patient-versions": {
      "get": {
        "tags": [
          "patient-versions"
        ],
        "summary": "List patient-versions",
        "description": "Returns list of patient versions based on the given filters",
        "operationId": "getPatientVersions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patient-versions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientVersionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patient-versions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "List patients",
        "description": "Returns list of patients based on the given filters",
        "operationId": "getPatients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'country', 'stb_disease', 'county_council', 'county_council_patient_category', 'default_reimbursement_type', 'patient_tags', 'booking_attendees.booking', 'booking_preferences.weekdays', 'county_council.used_county_council_price_list', 'last_credit_check.currency', 'last_credit_check.supplier', 'last_insurance_contract', 'last_tanden_check.currency', 'last_tanden_check.insurance_contract.journal_diagnoses', 'last_tanden_check.new_atb', 'last_tanden_check.old_atb,locale.language', 'location.third_party', 'rebooking_defaults.booking_type', 'rebooking_defaults.clinic', 'rebooking_defaults.user', 'rebookings.booking', 'signer.role', 'state_registration.country', 'state_registration.sender.role,stb_disease', 'patient_third_party_patient_categories.third_party_patient_category.third_party', 'proposal_responses.proposal'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "xray_id",
            "in": "query",
            "description": "'xray_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "has_email",
            "in": "query",
            "description": "'has_email' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_tag_ids",
            "in": "query",
            "description": "Patient tag id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "third_party_patient_category_ids",
            "in": "query",
            "description": "Third party patient category id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "rebooking_from_date",
            "in": "query",
            "description": "Rebooking from date field (format: '2024-08-01')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "rebooking_to_date",
            "in": "query",
            "description": "Rebooking from date field (format: '2024-08-08')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "first_name",
            "in": "query",
            "description": "'first_name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field (example: 'sort_by':'first_name')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_closest_unbooked_rebooking",
            "in": "query",
            "description": "'include_closest_unbooked_rebooking' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_first_future_booking",
            "in": "query",
            "description": "'include_first_future_booking' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include_latest_unbooked_rebooking",
            "in": "query",
            "description": "'include_latest_unbooked_rebooking' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "social_security_number",
            "in": "query",
            "description": "Social security number field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "booking_status",
            "in": "query",
            "description": "Booking status field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List patients",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List patients",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Create a patient",
        "description": "Returns created patient based on the given filters",
        "operationId": "postPatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient",
                  "properties": {
                    "attributes": {
                      "description": "Create a patient",
                      "properties": {
                        "social_security_number": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "199008266972"
                        },
                        "first_name": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "Smith"
                        },
                        "maiden_name": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "Lore"
                        },
                        "initials": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "J.S."
                        },
                        "gender": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "male"
                        },
                        "address_1": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "city": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "postal_code": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "municipality": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "date_of_birth": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2002-06-14T00:00:00+02:00"
                        },
                        "passport_number": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "phone_number_cell": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "phone_number_home": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "phone_number_work": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "fax_number": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "e_mail_address": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "muntra@email.com"
                        },
                        "deleted": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "updated_at": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "patient_number": {
                          "description": "Create a patient",
                          "type": "string",
                          "format": "number",
                          "example": "222"
                        },
                        "invoice_reference": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "status": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "active"
                        },
                        "wants_anestesia": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "start_date_free_card": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "end_date_free_card": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "free_card_number": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "county_council_certificate_number": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "county_council_certificate_end_date": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "euro_certificate_number": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "protected_identity": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "risk_level": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "1"
                        },
                        "warning": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "warning_text": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "xray_id": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "external_dentist": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "external_hygienist": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "auto_include_email_invitation": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "auto_include_sms_invitation": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "auto_include_sms_reminder": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "auto_include_snail_mail_invitation": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "prefers_not_to_be_contacted_by_clinic": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "recurring": {
                          "description": "Create a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "referral_source": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "teeth_count": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "untreated_teeth_count": {
                          "description": "Create a patient",
                          "type": "string"
                        },
                        "signed_at": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "nearest_booking_date": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-08-01T19:25:31+02:00"
                        },
                        "latest_unbooked_rebooking_date": {
                          "description": "Create a patient",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Retrieve a patient",
        "description": "Retrieve a specific patient",
        "operationId": "getPatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'country', 'stb_disease', 'county_council', 'county_council_patient_category', 'default_reimbursement_type', 'patient_tags', 'booking_attendees.booking', 'booking_preferences.weekdays', 'county_council.used_county_council_price_list', 'last_credit_check.currency', 'last_credit_check.supplier', 'last_insurance_contract', 'last_tanden_check.currency', 'last_tanden_check.insurance_contract.journal_diagnoses', 'last_tanden_check.new_atb', 'last_tanden_check.old_atb,locale.language', 'location.third_party', 'rebooking_defaults.booking_type', 'rebooking_defaults.clinic', 'rebooking_defaults.user', 'rebookings.booking', 'signer.role', 'state_registration.country', 'state_registration.sender.role,stb_disease', 'patient_third_party_patient_categories.third_party_patient_category.third_party', 'proposal_responses.proposal'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Organization id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "patients"
        ],
        "summary": "Edit a patient",
        "description": "Edit a specific patient",
        "operationId": "patchPatient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Patient id in query/url",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient",
                  "properties": {
                    "attributes": {
                      "description": "Edit a patient",
                      "properties": {
                        "social_security_number": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "199008266972"
                        },
                        "first_name": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "Smith"
                        },
                        "maiden_name": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "Lore"
                        },
                        "initials": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "J.S."
                        },
                        "gender": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "male"
                        },
                        "address_1": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "city": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "postal_code": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "municipality": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "date_of_birth": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2002-06-14T00:00:00+02:00"
                        },
                        "passport_number": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "phone_number_cell": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "phone_number_home": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "phone_number_work": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "fax_number": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "e_mail_address": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "muntra@email.com"
                        },
                        "deleted": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "updated_at": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "patient_number": {
                          "description": "Edit a patient",
                          "type": "string",
                          "format": "number",
                          "example": "222"
                        },
                        "invoice_reference": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "status": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "active"
                        },
                        "wants_anestesia": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "start_date_free_card": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "end_date_free_card": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "free_card_number": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "county_council_certificate_number": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "county_council_certificate_end_date": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "euro_certificate_number": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "protected_identity": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "risk_level": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "1"
                        },
                        "warning": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "warning_text": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "xray_id": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "external_dentist": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "external_hygienist": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "auto_include_email_invitation": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "auto_include_sms_invitation": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "auto_include_sms_reminder": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "auto_include_snail_mail_invitation": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "prefers_not_to_be_contacted_by_clinic": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": true
                        },
                        "recurring": {
                          "description": "Edit a patient",
                          "type": "boolean",
                          "example": false
                        },
                        "referral_source": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "teeth_count": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "untreated_teeth_count": {
                          "description": "Edit a patient",
                          "type": "string"
                        },
                        "signed_at": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "nearest_booking_date": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-08-01T19:25:31+02:00"
                        },
                        "latest_unbooked_rebooking_date": {
                          "description": "Edit a patient",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/add-child-bite": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Add child bite for patient",
        "description": "Returns added child bite for patient based on the given filters",
        "operationId": "postPatientAddChildBiteDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Add child bite for patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Add child bite for patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/delete-outstanding-rebookings": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Delete outstanding rebookings for patient",
        "description": "Returns deleted outstanding rebookings for patient based on the given filters",
        "operationId": "postPatientOutstandingRebookingsDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete outstanding rebookings for patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete outstanding rebookings for patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/lock": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Lock a patient",
        "description": "Returns locked patient based on the given filters",
        "operationId": "postPatientLockDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Lock a patient",
                  "properties": {
                    "attributes": {
                      "description": "Lock a patient",
                      "properties": {
                        "signing_password": {
                          "description": "Lock a patient",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Lock a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Lock a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/sign": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Sign a patient",
        "description": "Returns signed patient based on the given filters",
        "operationId": "postPatientSignDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a patient",
                  "properties": {
                    "attributes": {
                      "description": "Sign a patient",
                      "properties": {
                        "signer_id": {
                          "description": "Sign a patient",
                          "type": "number"
                        },
                        "signing_password": {
                          "description": "Sign a patient",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/sign-remaining-journal-entries": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Sign remaining journal entries for patient",
        "description": "Returns signed journal entries for patient based on the given filters",
        "operationId": "postPatientSignRemainingJournalEntriesDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign remaining journal entries for patient",
                  "properties": {
                    "attributes": {
                      "description": "Sign remaining journal entries for patient",
                      "properties": {
                        "signer_id": {
                          "description": "Sign remaining journal entries for patient",
                          "type": "number"
                        },
                        "signing_password": {
                          "description": "Sign remaining journal entries for patient",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign remaining journal entries for patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign remaining journal entries for patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/state-register": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Register a patient with the state",
        "description": "Returns patient with the state based on the given filters",
        "operationId": "postPatientWithState",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Register a patient with the state",
                  "properties": {
                    "attributes": {
                      "description": "Register a patient with the state",
                      "properties": {
                        "organization_id": {
                          "description": "Register a patient with the state",
                          "type": "number",
                          "example": 123
                        },
                        "country_code": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "social_security_number": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "199008266972"
                        },
                        "first_name": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "John"
                        },
                        "last_name": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "Smith"
                        },
                        "maiden_name": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "Lore"
                        },
                        "initials": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "J.S."
                        },
                        "gender": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "male"
                        },
                        "address_1": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "address_2": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "city": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "postal_code": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "municipality": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "date_of_birth": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2002-06-14T00:00:00+02:00"
                        },
                        "passport_number": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "phone_number_cell": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "phone_number_home": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "phone_number_work": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "fax_number": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "e_mail_address": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "muntra@email.com"
                        },
                        "deleted": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "updated_at": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "patient_number": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "format": "number",
                          "example": "222"
                        },
                        "invoice_reference": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "status": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "active"
                        },
                        "wants_anestesia": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": false
                        },
                        "start_date_free_card": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "end_date_free_card": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "free_card_number": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "county_council_certificate_number": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "county_council_certificate_end_date": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "euro_certificate_number": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "protected_identity": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": false
                        },
                        "risk_level": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "1"
                        },
                        "warning": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": true
                        },
                        "warning_text": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "xray_id": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "notes": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "external_dentist": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "external_hygienist": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "auto_include_email_invitation": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "auto_include_sms_invitation": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "auto_include_sms_reminder": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "auto_include_snail_mail_invitation": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "prefers_not_to_be_contacted_by_clinic": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": true
                        },
                        "recurring": {
                          "description": "Register a patient with the state",
                          "type": "boolean",
                          "example": false
                        },
                        "referral_source": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "teeth_count": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "untreated_teeth_count": {
                          "description": "Register a patient with the state",
                          "type": "string"
                        },
                        "signed_at": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-07-01T17:15:30+02:00"
                        },
                        "nearest_booking_date": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-08-01T19:25:31+02:00"
                        },
                        "latest_unbooked_rebooking_date": {
                          "description": "Register a patient with the state",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Register a patient with the state",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Register a patient with the state",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients/{id}/unlock": {
      "post": {
        "tags": [
          "patients"
        ],
        "summary": "Unlock a patient",
        "description": "Returns unlocked patient based on the given filters",
        "operationId": "postPatientUnLockedDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Unlock a patient",
                  "properties": {
                    "attributes": {
                      "description": "Unlock a patient",
                      "properties": {
                        "signing_password": {
                          "description": "Unlock a patient",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unlock a patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unlock a patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/patients?deleted=false&social_security_number=198108111496": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Retrieve a patient by social security number",
        "description": "Retrieve a certain patient by social security number",
        "operationId": "getPatientBySocialSecurityNumber",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'country', 'stb_disease', 'county_council', 'county_council_patient_category', 'default_reimbursement_type', 'patient_tags', 'booking_attendees.booking', 'booking_preferences.weekdays', 'county_council.used_county_council_price_list', 'last_credit_check.currency', 'last_credit_check.supplier', 'last_insurance_contract', 'last_tanden_check.currency', 'last_tanden_check.insurance_contract.journal_diagnoses', 'last_tanden_check.new_atb', 'last_tanden_check.old_atb,locale.language', 'location.third_party', 'rebooking_defaults.booking_type', 'rebooking_defaults.clinic', 'rebooking_defaults.user', 'rebookings.booking', 'signer.role', 'state_registration.country', 'state_registration.sender.role,stb_disease', 'patient_third_party_patient_categories.third_party_patient_category.third_party', 'proposal_responses.proposal'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "social_security_number",
            "in": "query",
            "description": "'social_security_number' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a patient by social security number",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a patient by social security number",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/payer-types": {
      "get": {
        "tags": [
          "payer-types"
        ],
        "summary": "List payer-types",
        "description": "Returns list of payer types based on the given filters",
        "operationId": "getPayerTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'reimbursement_type'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "reimbursement_type_id",
            "in": "query",
            "description": "'reimbursement_type_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List payer-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PayerTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List payer-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    }
  }
}