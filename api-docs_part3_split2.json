{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "Muntra Practice Management System API",
    "version": "3.5.234"
  },
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "definitions": {
    "AccountPlanTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Norge"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BAST 2022"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "number",
              "example": 1010
            },
            "account_name": {
              "type": "string",
              "example": "Utvecklingsutgifter"
            },
            "balance_type": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicAccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateCostRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template_cost_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ActionNeededPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "action_needed_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "entry_type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "fee": {
              "type": "number",
              "example": 10
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "signed_at": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number"
            },
            "quantity": {
              "type": "number"
            },
            "discount_excluding_vat": {
              "type": "number"
            },
            "vat_percentage": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_owner_name": {
              "type": "string",
              "example": "John"
            },
            "animal_owner_street_address_1": {
              "type": "string",
              "example": "Hold street"
            },
            "animal_owner_street_address_2": {
              "type": "string",
              "example": "Talk street"
            },
            "animal_owner_postal_code": {
              "type": "string"
            },
            "animal_owner_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "animal_owner_country_name": {
              "type": "string",
              "example": "Sweden"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 223
            },
            "vat_amount": {
              "type": "number",
              "example": 120
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": false
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string"
            },
            "animal_id_qualifier": {
              "type": "string"
            },
            "animal_species": {
              "type": "string"
            },
            "dosage_form": {
              "type": "string"
            },
            "indication_for_prescription": {
              "type": "string"
            },
            "license_id": {
              "type": "string"
            },
            "package_content": {
              "type": "string"
            },
            "pharmacy_id": {
              "type": "string"
            },
            "quantity": {
              "type": "number"
            },
            "quantity_unit": {
              "type": "string"
            },
            "strength": {
              "type": "string"
            },
            "supplementary_information": {
              "type": "string"
            },
            "delegated": {
              "type": "boolean"
            },
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowWaitingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row_waiting_time"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number_of_days": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "prescriber_cit": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "delivery_location_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "delivery_location_id": {
              "type": "string"
            },
            "delivery_location_postal_code": {
              "type": "string"
            },
            "delivery_location_street_name": {
              "type": "string"
            },
            "delivery_location_telecommunication": {
              "type": "string"
            },
            "include_prescription_fee": {
              "type": "boolean",
              "example": true
            },
            "prescription_fee_including_vat": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalSpeciesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_species"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "type": {
              "type": "string",
              "example": "pet"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string",
              "example": "Nytt test"
            },
            "animal_id_qualifier": {
              "type": "string",
              "example": "IND"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "FK_claim_id": {
              "type": "string"
            },
            "FK_claim_amount": {
              "type": "number"
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number"
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "eligible_from_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "atb_usage_atb_number": {
              "type": "string"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 123
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 12
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": false
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "validated": {
              "type": "boolean",
              "example": true
            },
            "validation_sent_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "submitted": {
              "type": "number"
            },
            "submitted_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "answered_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": false
            },
            "reversed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "reversal_error_code": {
              "type": "string"
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "deducted_from_invoice": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "number"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 1
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymouseInvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "string"
            },
            "paid_at": {
              "type": "string",
              "example": "2024-07-12T10:43:49+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-12T10:43:49+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-22T10:43:49+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPatientInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "third_party_name": {
              "type": "string",
              "example": "Boom"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "read_by_recipient_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-11T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousSalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "lab_fee": {
              "type": "number",
              "example": 12
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousTreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 2
            },
            "down_vote_count": {
              "type": "number",
              "example": 3
            },
            "creation_date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "SMS_REMINDER_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "SMS-påminnelse"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AtbCheckReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "atb_check_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": 123
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BalanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "balance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dqwd21qwd12q"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "opening_balance": {
              "type": "number",
              "example": 1000
            },
            "closing_balance": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookkeepingAllocationRulesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_allocation_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "BookKeepingFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "from_date": {
              "type": "string"
            },
            "to_date": {
              "type": "string"
            },
            "include_already_exported": {
              "type": "boolean",
              "example": false
            },
            "number_of_verifications": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookKeepingLockResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_lock"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "boolean",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": false
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingConversationReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_conversion_report_row"
        },
        "id": {
          "type": "string",
          "example": "2wq12rwqrwqw11"
        },
        "attributes": {
          "properties": {
            "pixel_id": {
              "type": "string"
            },
            "booking_count": {
              "type": "number"
            },
            "session_count": {
              "type": "number"
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExdateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_exdate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "rescheduling_lock_period_in_hours": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPreferenceDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 1
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 5
            },
            "fit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleByDayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule_by_day"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 123
            },
            "freq": {
              "type": "string"
            },
            "interval": {
              "type": "number",
              "example": 10
            },
            "until": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": "PUBLIC"
            },
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": false
            },
            "dtstart": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "location": {
              "type": "string"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "price": {
              "type": "number",
              "example": 111
            },
            "new_patient": {
              "type": "boolean",
              "example": false
            },
            "patient_wants_earlier_slot": {
              "type": "boolean",
              "example": false
            },
            "patient_made_late_cancellation": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear_handled": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "done": {
              "type": "boolean",
              "example": false
            },
            "archived_at": {
              "type": "string",
              "example": "2024-02-01T09:11:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string",
              "example": "#9FC6E7"
            },
            "text_color": {
              "type": "string",
              "example": "#000000"
            },
            "color_order": {
              "type": "number",
              "example": 0
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BoxResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "box"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number": {
              "type": "number",
              "example": 1
            },
            "last_treatment_date": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CalendarViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "calendar_view"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "days": {
              "type": "number",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED,TENTATIVE"
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": true
            },
            "from_minute": {
              "type": "number",
              "example": 10
            },
            "to_minute": {
              "type": "boolean",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraAcceptsReviewRequestsEmailSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_accepts_review_requests_email_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepts_review_request_emails": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookingAttendeesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-booking-attendee"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookings": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_booking"
        },
        "id": {
          "type": "string",
          "example": "BKel6a02b"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": 3
            },
            "summary": {
              "type": "string",
              "example": "Title"
            },
            "text": {
              "type": "string",
              "example": "Text"
            },
            "dtstart": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            },
            "dtend": {
              "type": "string",
              "format": "date",
              "example": "2023-02-11T18:19:43+01:00"
            },
            "description": {
              "type": "string",
              "example": "Description"
            },
            "location": {
              "type": "string",
              "example": "Address"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "booked_by_patient": {
              "type": "boolean",
              "example": true
            },
            "new_patient": {
              "type": "boolean",
              "example": true
            },
            "referral_source": {
              "type": "string",
              "example": "muntra.com"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "data": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "muntra_clinic"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 49.427062
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 32.081114
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": true
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": false
            },
            "calendar_activated": {
              "type": "boolean",
              "example": true
            },
            "distance": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "latest_review_comment": {
              "type": "string",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "caregiver": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver"
                    },
                    "id": {
                      "type": "integer",
                      "example": 2
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "free_bookable_slots": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_free_bookable_slot"
                      },
                      "id": {
                        "type": "string",
                        "example": "1-2-1"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "procedures": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_caregiver_procedure_at_location"
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "default_procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver_procedure_at_location"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "next_free_bookable_slot": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_free_bookable_slot"
                    },
                    "id": {
                      "type": "integer",
                      "example": "1-2-1"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverProcedureAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_procedure_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "gender": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 0
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicAdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic_ad"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "per_page": {
              "type": "number",
              "format": "float",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "clinic_address_1": {
              "type": "string"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "default_sms_reminder_text": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "google_places_description": {
              "type": "string"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": true
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_restroom": {
              "type": "boolean",
              "example": true
            },
            "has_toys": {
              "type": "boolean",
              "example": true
            },
            "has_tv": {
              "type": "boolean",
              "example": true
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": true
            },
            "has_wifi": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 10
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Testa, Sverige"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "reference": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientClinicCurationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_clinic_curation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string",
              "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": false
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": false
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "phas_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_restroom": {
              "type": "boolean",
              "example": false
            },
            "has_toys": {
              "type": "boolean",
              "example": false
            },
            "has_tv": {
              "type": "boolean",
              "example": false
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": false
            },
            "has_wifi": {
              "type": "boolean",
              "example": false
            },
            "created_date": {
              "type": "string",
              "example": "11-05-2024"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPatientReviewCaregiver": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_review"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 3
            },
            "patient_name": {
              "type": "string",
              "example": "Pontus G."
            },
            "review_comment": {
              "type": "boolean",
              "example": true
            },
            "created_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100411"
            },
            "to": {
              "type": "string",
              "example": "+46840906343"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AutostarttokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AuthLoginResponse": {
      "properties": {
        "token_type": {
          "type": "string",
          "example": "Bearer"
        },
        "expires_in": {
          "type": "number",
          "example": 7200
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "MuntraRolesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-role"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "slug"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CariesDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "caries"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 22.5
            },
            "image_height": {
              "type": "number",
              "example": 33
            },
            "image_width": {
              "type": "number",
              "example": 25
            },
            "xmax": {
              "type": "number",
              "example": 10
            },
            "xmin": {
              "type": "number",
              "example": 10
            },
            "ymax": {
              "type": "number",
              "example": 10
            },
            "ymin": {
              "type": "number",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CertificateUploadDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "certificate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "issuer": {
              "type": "string"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ChangeLogsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "change_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_date": {
              "type": "string",
              "example": "2024-06-20T17:03:59+02:00"
            },
            "record_id": {
              "type": "string",
              "example": "1"
            },
            "route_name": {
              "type": "string",
              "example": "patient"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CheckoutServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "checkout_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentSpecificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment_specification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_organization_id": {
              "type": "number",
              "example": 1
            },
            "issue_date": {
              "type": "string"
            },
            "payment_id": {
              "type": "number",
              "example": 2
            },
            "total_amount": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number",
              "example": 1
            },
            "care_provider_org_number": {
              "type": "number",
              "example": 1
            },
            "government_organization_id": {
              "type": "number",
              "example": 123
            },
            "user_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_fin": {
              "type": "number",
              "example": 1
            },
            "dentist_ssn": {
              "type": "number",
              "example": 1
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "atb_usage_atb_number": {
              "type": "number",
              "example": 1
            },
            "atb_usage_teeth_count": {
              "type": "number",
              "example": 1
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number",
              "example": 1
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "stb_amount_available": {
              "type": "number",
              "example": 1
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "FK_claim_id": {
              "type": "number",
              "example": true
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "19953"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-10-24T11:32:51+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test Sverige"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Testvägen 1"
            },
            "clinic_address_2": {
              "type": "string",
              "example": "Testvägen 2"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "12345"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_reference": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "workplace_code": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "show_user_in_invoice_clinic_reference": {
              "type": "boolean",
              "example": true
            },
            "timezone": {
              "type": "string",
              "example": "Europe/Stockholm"
            },
            "latitude": {
              "type": "integer",
              "format": "float"
            },
            "longitude": {
              "type": "integer",
              "format": "float"
            },
            "google_places_description": {
              "type": "string"
            },
            "journal_entry_autosign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "journal_entry_unsign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "default_sms_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Välkommen [booking_datetime] [clinic_address_1]. Bekräfta tiden via [booking_confirmation_link]. Mvh, [caregiver_title] [caregiver_first_name] [caregiver_last_name] (OBS! det går inte att svara på detta meddelande)"
            },
            "default_sms_reminder_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Här är en påminnelse om din tid på [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date]. Mvh, [caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_snail_mail_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]!\\r\\n\\r\\nNu är det dags att besöka oss.\\r\\n\\r\\nVälkommen till [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date].\\r\\n\\r\\nBekräfta gärna tiden genom att gå till följande länk: [booking_confirmation_link]\\r\\n\\r\\nMed vänlig hälsning,\\r\\n[caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_hours_until_sms_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_before_sms_reminder_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_until_snail_mail_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "allow_remittance_without_individual_recipient": {
              "type": "boolean",
              "example": true
            },
            "accepts_digital_remittance": {
              "type": "boolean",
              "example": true
            },
            "has_cbct": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:16:42+02:00"
            },
            "updated_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:17:48+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ComputersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "computer"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "mac_address": {
              "type": "string"
            },
            "backup_folder": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CorsProxyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "CostCentersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "cost-center"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "country"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Sverige"
            },
            "code": {
              "type": "string",
              "example": "SE"
            },
            "calling_code": {
              "type": "string",
              "example": "+46"
            },
            "personal_id_min_length": {
              "type": "number",
              "example": 10
            },
            "personal_id_placeholder": {
              "type": "string",
              "example": "ååååmmddxxxx"
            },
            "personal_id_regex": {
              "type": "string",
              "example": "/^(18|19|[2-9]\\\\d)\\\\d{2}(0[1-9]|1[0-2])[0-9]\\\\d{5}$/"
            },
            "legal_entity_id_regex": {
              "type": "string"
            },
            "postal_code_length": {
              "type": "number",
              "example": 5
            },
            "postal_code_regex": {
              "type": "string"
            },
            "general_information": {
              "type": "string",
              "example": "Planerat underhåll tisdagen den 21 januari 22:00-02:00 på servrar för läkemedelsartiklar och apotek\\r\\n\\r\\nGlöm inte att prenumera på vårt nyhetsbrev för produktnyheter, <a href=\\'https://hs.muntra.se/prenumerera\\'>anmäl dig här</a>"
            },
            "muntra_support_phone_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "S1"
            },
            "label": {
              "type": "string",
              "example": "Medfödd missbildning i käkområdet eller ansiktet, om inte missbildningen endast är av ringa omfattning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Stockholm 2018"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "string",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2017-10-23T12:05:37+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-30T15:54:10+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "lab_fee": {
              "type": "number",
              "example": 5
            },
            "included_material": {
              "type": "string"
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Hälso- och sjukvårdsförvaltningen"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Box 120 81"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "10223"
            },
            "organization_name": {
              "type": "string",
              "example": "Region Stockholm"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CourseItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course_item"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "video_link": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CoursesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Introduktion till Muntra Care"
            },
            "description": {
              "type": "string",
              "example": "Course, created by Groove Commerce"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CredentialsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credential"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CreditChecksResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credit_check"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "approved": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "valid_until": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CurrencyWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "currency"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "SEK"
            },
            "name": {
              "type": "string",
              "example": "Svenska kroner"
            },
            "suffix": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomPaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "custom_payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerCreditReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_credit_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "paid_amount": {
              "type": "number",
              "example": 111
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "payment_id": {
              "type": "string"
            },
            "remaining_credit": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerLossResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_loss"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": "1000.00"
            },
            "date": {
              "type": "string",
              "example": "2024-11-08"
            },
            "realized": {
              "type": "boolean",
              "example": "true"
            },
            "comment": {
              "type": "string",
              "example": "comment"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableRepRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "string",
              "example": "123"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 100
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DailyReconciliationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "daily_reconciliation"
        },
        "id": {
          "type": "string",
          "example": "106794"
        },
        "attributes": {
          "properties": {
            "card_rounding": {
              "type": "number"
            },
            "card_total": {
              "type": "number",
              "example": 1000
            },
            "mobile_total": {
              "type": "number"
            },
            "date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "incoming_cash_balance": {
              "type": "number"
            },
            "outgoing_cash_balance": {
              "type": "number"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "grand_total_sales": {
              "type": "number"
            },
            "grand_total_credits": {
              "type": "number"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DashboardReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dashboard_report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_name": {
              "type": "string",
              "example": "action-needed-patient-report-row"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DebtCollectionServicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "debt_collection_service"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_url": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-16T14:49:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-16T14:49:45+02:00"
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Allmän information"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraDeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": true
            },
            "deleted_at": {
              "type": "string",
              "example": "2025-01-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationSmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsMuntraResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeductionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deducted_from_invoice": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string",
              "example": "test name"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 2
            },
            "quantity": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabAnchoringResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_anchoring"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test lab"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabConstructionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "comment": {
              "type": "string",
              "example": "Test comment"
            },
            "pick_out_color_in_lab": {
              "type": "boolean",
              "example": true
            },
            "splint_soft_inside": {
              "type": "boolean",
              "example": false
            },
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "boolean",
              "example": "2024-08-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDesignDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "no_metal_margin"
            },
            "label": {
              "type": "string",
              "example": "Ingen metallmarginal"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabInterproximalContactResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_interproximal_contact"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabMaterialResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_material"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "e_max"
            },
            "label": {
              "type": "string",
              "example": "E-Max"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOcclusionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_occlusion"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabPonticDesignResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_pontic_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "sanitary"
            },
            "label": {
              "type": "string",
              "example": "Sanitary"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabProcessStepResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_process_step"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "immediate_prosthesis"
            },
            "label": {
              "type": "string",
              "example": "Immediatprotes"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabScaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_scale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Bioform"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "lab_name": {
              "type": "string",
              "example": "Arclai lab"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testemail@muntra.com"
            },
            "latitude": {
              "type": "number",
              "example": 59.932461
            },
            "longitude": {
              "type": "number",
              "example": 10.778304
            },
            "lab_orders_receiver_weight": {
              "type": "number",
              "example": 1
            },
            "number_of_lab_order_senders": {
              "type": "number",
              "example": 1
            },
            "number_of_received_lab_orders": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DepositionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "active_area_height_in_millimeters": {
              "type": "number",
              "example": 20
            },
            "active_area_width_in_millimeters": {
              "type": "number",
              "example": 30
            },
            "primary_device_identifier_number": {
              "type": "string",
              "example": "EKAV101038841"
            },
            "product_name": {
              "type": "string",
              "example": "Gendex GXS-700"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "extraoral-xray"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DigitalMailCheckStatusResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "digital_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sent_at": {
              "type": "string"
            },
            "patient_approved_at": {
              "type": "string"
            },
            "expired_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftEmailReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_email_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSmsReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_sms_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSnailMailReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_snail_mail_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EducationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "education"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "degree": {
              "type": "string"
            },
            "field_of_study": {
              "type": "string"
            },
            "school": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementAdapterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element_adapter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "49R"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_address"
        },
        "id": {
          "type": "string",
          "example": "1423"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "testemail@com.eu"
            },
            "verified_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailIcsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_ics"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string",
              "example": "testemail@com.is"
            },
            "to_name": {
              "type": "string",
              "example": "Gordon"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EquipmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ErrorNotificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "error_notification"
        },
        "id": {
          "type": "number",
          "example": 2034592
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "stack": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "version": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "ip_address": {
              "type": "string",
              "example": "79.112.148.244"
            },
            "user_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EventsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-07-02T21:31:00+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-07-02T23:26:00+02:00"
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "patient_id": {
              "type": "string"
            },
            "patient_fullname": {
              "type": "string"
            },
            "patient_partstat": {
              "type": "string"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "patient_email_status": {
              "type": "string"
            },
            "patient_sms_invitation_status": {
              "type": "string"
            },
            "patient_sms_reminder_status": {
              "type": "string"
            },
            "patient_snail_mail_status": {
              "type": "string"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "user_ids": {
              "type": "string"
            },
            "room_ids": {
              "type": "string"
            },
            "resource_ids": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string",
              "example": "done"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "expired_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Patienter med FK-data"
            },
            "requires_organization": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FilesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "intraoral-xray-bitewing"
            },
            "label": {
              "type": "string",
              "example": "Bitewing"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FirstBookableSlotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_bookable_slot"
        },
        "id": {
          "type": "string",
          "example": "8059ac202cad85fd18cf4c547c17715d"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2023-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2025-07-28T00:00:00+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": true
            },
            "book_outstanding_treatments": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card_check"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "has_free_card": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-11-02T09:16:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "place_id": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-google-place-detail-request"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "country_short_name": {
              "type": "string",
              "example": "sv"
            },
            "international_phone_number": {
              "type": "string"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "postal_code": {
              "type": "string"
            },
            "postal_town": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "route": {
              "type": "string"
            },
            "street_number": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_detail"
        },
        "id": {
          "type": "string",
          "example": "gpdr6772e7fe0af69"
        },
        "attributes": {
          "properties": {
            "include_in_sitemap": {
              "type": "boolean",
              "example": true
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "reference": {
              "type": "string"
            },
            "international_phone_number": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "formatted_address": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GovernmentAuditResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "government_audit"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_clinic_id": {
              "type": "number",
              "example": 1
            },
            "organization_number": {
              "type": "number",
              "example": 2
            },
            "transaction_id": {
              "type": "number",
              "example": 3
            },
            "date": {
              "type": "string",
              "example": "2024-11-12T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GrandTotalesponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "grand_total"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "credits": {
              "type": "number",
              "example": 100
            },
            "sales": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "mouth-selector"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistorySelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "history_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "history_code": {
              "type": "string",
              "example": "S"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-13T10:23:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "code": {
              "type": "string",
              "example": "TS"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": false
            },
            "surface_text": {
              "type": "string"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HolidayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+00:00"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            },
            "exchangable": {
              "type": "boolean",
              "example": true
            },
            "include_intro_pack": {
              "type": "boolean",
              "example": false
            },
            "reimbursed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription"
        },
        "id": {
          "type": "string",
          "example": "5"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "designated_message_receiver": {
              "type": "string"
            },
            "prescriber_city": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_street_name": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "healthcare_agent_id": {
              "type": "string"
            },
            "subject_of_care_sex": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdcCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "icd_code"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "A000"
            },
            "description": {
              "type": "string",
              "example": "Kolera som skyldes Vibrio cholerae 01, biovar cholerae"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "id_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "google-authenticator"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "personal_id_regex": {
              "type": "string"
            },
            "personal_id_placeholder": {
              "type": "string"
            },
            "personal_id_min_length": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageAnnotationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image_annotation"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 4.5
            },
            "image_height": {
              "type": "number",
              "example": 1000
            },
            "image_width": {
              "type": "number",
              "example": 500
            },
            "coordinates": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncidentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incident"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "corrective_action": {
              "type": "string"
            },
            "preventive_action": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncompleteReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incomplete_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InsuranceContractResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "insurance_contract"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "contract_id": {
              "type": "string"
            },
            "start_date": {
              "type": "string",
              "example": "2024-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-07-28T00:00:00+02:00"
            },
            "organization_id": {
              "type": "number",
              "example": 123
            },
            "price_excluding_vat": {
              "type": "string",
              "example": 10
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-10-14T22:28:33+02:00"
            },
            "cancellation_error_text": {
              "type": "string",
              "example": "Test text"
            },
            "cancellation_sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cancelled_at": {
              "type": "string",
              "example": "2024-09-14T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InventoryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "inventory_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 200
            },
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "delivery_id": {
              "type": "number",
              "example": 421
            },
            "signer_full_name": {
              "type": "string",
              "example": "John Otto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-22T10:04:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T10:04:25+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "qw112421dwqd"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "205"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 200
            },
            "vat_amount": {
              "type": "number",
              "example": 333
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-06T11:36:23+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-10-22T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_patient_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e333"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenueBreakdownPerUserReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_user_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xxr3756fe039e323"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_patient_report_row"
        },
        "id": {
          "type": "number",
          "example": "irpprr6781226528118"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1533
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1rwqw24rwq211"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "bankgiro_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_type"
        },
        "id": {
          "type": "string",
          "example": "3"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "debit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "IpAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ip_address"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "ip_address": {
              "type": "string",
              "example": "103.103.87.255"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1111"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "class": {
              "type": "string"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "mouth"
            },
            "tooth": {
              "type": "string",
              "example": "NA"
            },
            "element": {
              "type": "string",
              "example": "NA"
            },
            "class": {
              "type": "string",
              "example": "reimbursed"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionOptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section_option"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "dropdown"
            },
            "sort_order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 33
            },
            "lab_fee": {
              "type": "number",
              "example": 11
            },
            "price_code": {
              "type": "string"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoiced_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMissingBookingEpicrisisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_booking_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MissingEpicrisisReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnsignedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unsigned_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnclaimedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unclaimed_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalValidationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_validation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "required": {
              "type": "string"
            },
            "patient_history": {
              "type": "boolean",
              "example": false
            },
            "combination": {
              "type": "boolean",
              "example": false
            },
            "tooth": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceListDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-02T11:29:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabDeliveryResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string"
            },
            "received_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabUserDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LanguageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "iso_code_639_3": {
              "type": "string",
              "example": "aar"
            },
            "iso_code_639_2": {
              "type": "string",
              "example": "aar/aar"
            },
            "iso_code": {
              "type": "string",
              "example": "aa"
            },
            "name": {
              "type": "string",
              "example": "Afar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LastSelectedPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "last_selected_patient"
        },
        "id": {
          "type": "string",
          "example": "lsp6718dfd20707b"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "LegalEntityDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "legal_entity"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "1234123412241115"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "locale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string",
              "example": "sv-se"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "location"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "city": {
              "type": "string",
              "example": "Uppsala"
            },
            "postal_code": {
              "type": "string",
              "example": "75135"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LoginAttemptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "login_attempt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T12:02:27+00:00"
            },
            "version": {
              "type": "string",
              "example": "1.1.1456"
            },
            "machine_id": {
              "type": "string",
              "example": "Online"
            },
            "ip_address": {
              "type": "string",
              "example": "213.179.18.172"
            },
            "successful": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MacroSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "macro_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MaintenanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "maintenance"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MasterFindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "master_finding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "caries"
            },
            "name": {
              "type": "string",
              "example": "Karies"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRecipientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_recipient"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "is_read": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRoomDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_room"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "topic": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "unread": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-31T08:44:51+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-31T08:37:57+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageSenderDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_sender"
        },
        "id": {
          "type": "string",
          "example": "21118"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "resolved_ticket": {
              "type": "boolean",
              "example": true
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonitoredPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "monitored_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "height": {
              "type": "number",
              "example": 1
            },
            "rotate": {
              "type": "number",
              "example": 1
            },
            "sequence": {
              "type": "number",
              "example": 0
            },
            "width": {
              "type": "number",
              "example": 0
            },
            "x": {
              "type": "number",
              "example": 1
            },
            "y": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "boolean",
              "example": "Pan 20x30 cm"
            },
            "aspect_ratio": {
              "type": "number",
              "example": 1.842630779
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NewPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "new_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwwd1dqw21"
        },
        "attributes": {
          "properties": {
            "charged_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NightyDumpResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "nighty_dump"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "region": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_type": {
              "type": "string"
            },
            "model_id": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "is_read": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfPatientHoursReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_patient_hours_report_row"
        },
        "id": {
          "type": "string",
          "example": "nophrr674f1f5104976"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 1.9167
            },
            "end_date": {
              "type": "string",
              "example": "2024-06-26T23:59:59+02:00"
            },
            "start_date": {
              "type": "string",
              "example": "2024-06-26T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfUnreadMessageRoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_unread_message_room"
        },
        "id": {
          "type": "string",
          "example": "cfcd208495d565ef66e7dff9f98764da"
        },
        "attributes": {
          "properties": {
            "unread_message_rooms": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OpeningHourResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "opening_hours"
        },
        "id": {
          "type": "string",
          "example": "40098"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 10
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_name": {
              "type": "string",
              "example": "Test name"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 1
            },
            "quantity": {
              "type": "number",
              "example": 2
            },
            "vat_percentage": {
              "type": "number",
              "example": 3
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "supplier_order_id": {
              "type": "number",
              "example": 1
            },
            "confirmed_by_supplier": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization_clinic_setting"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_bankgiro": {
              "type": "string"
            },
            "government_clinic_id": {
              "type": "string"
            },
            "disable_state_api_cron_fetch": {
              "type": "boolean",
              "example": false
            },
            "auto_create_claim_payment_verifications": {
              "type": "boolean",
              "example": false
            },
            "include_mobile_payment_info_on_invoice": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraOrganizationsCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Katarinavägen 24"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "11645"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:59:38+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-02-16T08:01:01+01:00"
            },
            "invoice_reference": {
              "type": "string"
            },
            "invoice_country_code": {
              "type": "string",
              "example": "Tandblekning"
            },
            "name": {
              "type": "string",
              "example": "SE"
            },
            "invoice_plusgiro": {
              "type": "string",
              "example": "12831-8"
            },
            "invoice_bankgiro": {
              "type": "string",
              "example": "12831-9"
            },
            "invoice_account_number": {
              "type": "string"
            },
            "invoice_clearing_number": {
              "type": "string"
            },
            "invoice_swish_number": {
              "type": "string",
              "example": "1230955831"
            },
            "iban": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "company"
            },
            "cert_exists": {
              "type": "boolean",
              "example": false
            },
            "has_unpaid_invoices": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OutstandingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "outstanding_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "journal_entry_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "journal_entry_id": {
              "type": "string",
              "example": "123"
            },
            "outstanding_amount": {
              "type": "number",
              "example": 300
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Otto"
            },
            "patient_id": {
              "type": "string",
              "example": "233"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PageViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "page_view"
        },
        "id": {
          "type": "string",
          "example": "pv6772xc71d8327"
        },
        "attributes": {
          "properties": {
            "page": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1qwf12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "8a3f12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-11-11T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_entry_type"
        },
        "id": {
          "type": "string",
          "example": "pocket"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "pocket"
            },
            "detail_type": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_report_row"
        },
        "id": {
          "type": "string",
          "example": "parrr1425823c6b112"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 5
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodTemplateItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_template_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tabindex": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_selected_sides": {
              "type": "number"
            },
            "show_bleeding": {
              "type": "boolean",
              "example": true
            },
            "show_furc": {
              "type": "boolean",
              "example": true
            },
            "show_gr": {
              "type": "boolean",
              "example": true
            },
            "show_mobility": {
              "type": "boolean",
              "example": true
            },
            "show_plackindex": {
              "type": "boolean",
              "example": true
            },
            "show_pocket_depth": {
              "type": "boolean",
              "example": true
            },
            "show_pus": {
              "type": "boolean",
              "example": true
            },
            "show_sub": {
              "type": "boolean",
              "example": true
            },
            "show_supra": {
              "type": "boolean",
              "example": true
            },
            "show_lower": {
              "type": "boolean",
              "example": true
            },
            "show_upper": {
              "type": "boolean",
              "example": true
            },
            "history_id": {
              "type": "string",
              "example": "draft"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontMapResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "prev_history_id": {
              "type": "string",
              "example": "123"
            },
            "next_history_id": {
              "type": "string",
              "example": "123"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PasswordResetDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "password_reset"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "reset_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerBirthYearReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_birth_year_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpttrr775064256010a"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpdrr6750687d0302a"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T00:00:00+02:00"
            },
            "value": {
              "type": "string",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_name": {
              "type": "string",
              "example": "Mike's Clinic"
            },
            "organization_country": {
              "type": "string",
              "example": "Sverige"
            },
            "organization_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "organization_street_address_1": {
              "type": "string",
              "example": "White street"
            },
            "organization_street_address_2": {
              "type": "string",
              "example": "Stone street"
            },
            "organization_postal_code": {
              "type": "string",
              "example": "111 22"
            },
            "organization_phone_nr": {
              "type": "string"
            },
            "organization_email": {
              "type": "string",
              "example": "test_organization_email@email.com"
            },
            "organization_number": {
              "type": "string",
              "example": "123456-1234"
            },
            "ocr_number": {
              "type": "string",
              "example": "010000000269256"
            },
            "invoice_reference": {
              "type": "string"
            },
            "swish_number": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "rounding_amount": {
              "type": "number",
              "example": 1
            },
            "invoice_fee": {
              "type": "number",
              "example": 1
            },
            "clearing_number": {
              "type": "string"
            },
            "account_number": {
              "type": "string"
            },
            "bankgiro_number": {
              "type": "string"
            },
            "plusgiro_number": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "category": {
              "type": "string",
              "example": "regular"
            },
            "patient_name": {
              "type": "string",
              "example": "Over Lord"
            },
            "patient_street_address_1": {
              "type": "string",
              "example": "Yellow street"
            },
            "patient_street_address_2": {
              "type": "string",
              "example": "Blue street"
            },
            "patient_postal_code": {
              "type": "string",
              "example": "111 24"
            },
            "patient_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "patient_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string"
            },
            "third_party_name": {
              "type": "string"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "third_party_status": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 1
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 2
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 3
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T11:10:21+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientReviewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_review"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "2"
            },
            "comparison_to_expectations": {
              "type": "string"
            },
            "created_date": {
              "type": "string"
            },
            "extra_special_amazing_amenities": {
              "type": "boolean",
              "example": true
            },
            "extra_special_excellent_quality": {
              "type": "boolean",
              "example": false
            },
            "extra_special_fast_and_painless": {
              "type": "boolean",
              "example": false
            },
            "extra_special_no_waiting_time": {
              "type": "boolean",
              "example": true
            },
            "extra_special_outstanding_treatment": {
              "type": "boolean",
              "example": false
            },
            "extra_special_phenomenal_information": {
              "type": "boolean",
              "example": true
            },
            "extra_special_useful_practical_tips": {
              "type": "boolean",
              "example": false
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "example": 1
            },
            "info_rating_follow_up": {
              "type": "number",
              "example": 1
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_health": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "example": 5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "example": 5
            },
            "info_rating_pricing": {
              "type": "number",
              "example": 5
            },
            "overall_rating": {
              "type": "number",
              "example": 5
            },
            "private_comment_to_caregiver": {
              "type": "string"
            },
            "rating_quality": {
              "type": "number",
              "example": 5
            },
            "rating_bedside_manner": {
              "type": "number",
              "example": 5
            },
            "rating_hygiene": {
              "type": "string"
            },
            "rating_reception_on_arrival": {
              "type": "string"
            },
            "rating_thoroughness": {
              "type": "string",
              "example": 5
            },
            "rating_wait_time": {
              "type": "number",
              "example": 4
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_tag"
        },
        "id": {
          "type": "string",
          "example": "patient_tag"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "blue"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text_color": {
              "type": "string",
              "example": "yellow"
            },
            "expose": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "valid_from": {
              "type": "string",
              "example": "2024-07-01T19:25:31+02:00"
            },
            "valid_to": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-10-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTotalReceivableResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_total_receivable"
        },
        "id": {
          "type": "string",
          "example": "d3d9446802a44259755d38e6d163e811"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTransactionReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_transaction_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199008266972"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "maiden_name": {
              "type": "string",
              "example": "Lore"
            },
            "initials": {
              "type": "string",
              "example": "J.S."
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2002-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "muntra@email.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "patient_number": {
              "type": "string",
              "format": "number",
              "example": "222"
            },
            "invoice_reference": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "wants_anestesia": {
              "type": "boolean",
              "example": false
            },
            "start_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "end_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "free_card_number": {
              "type": "string"
            },
            "county_council_certificate_number": {
              "type": "string"
            },
            "county_council_certificate_end_date": {
              "type": "string"
            },
            "euro_certificate_number": {
              "type": "string"
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "risk_level": {
              "type": "string",
              "example": "1"
            },
            "warning": {
              "type": "boolean",
              "example": true
            },
            "warning_text": {
              "type": "string"
            },
            "xray_id": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "external_dentist": {
              "type": "string"
            },
            "external_hygienist": {
              "type": "string"
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": true
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "referral_source": {
              "type": "string"
            },
            "teeth_count": {
              "type": "string"
            },
            "untreated_teeth_count": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "nearest_booking_date": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "latest_unbooked_rebooking_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PayerTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payer_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "object_model": {
              "type": "string",
              "example": "patient"
            },
            "object_property": {
              "type": "string",
              "example": "id"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BGMax"
            },
            "value": {
              "type": "string",
              "example": "bgmax"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentPerInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_per_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            },
            "vat_amount": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTerminalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_terminal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "terminal_id": {
              "type": "string"
            },
            "async": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "bankgiro"
            },
            "label": {
              "type": "string",
              "example": "Bankgiro"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PdfResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pdf"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "201941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "customer_managed": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "action": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "person"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199002240038"
            },
            "first_name": {
              "type": "string",
              "example": "Test name"
            },
            "last_name": {
              "type": "string",
              "example": "Test last name"
            },
            "maiden_name": {
              "type": "string",
              "example": "Test maiden name"
            },
            "initials": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01001"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2000-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+380958957041"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testcq@mail.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalAccessTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_access_token"
        },
        "id": {
          "type": "string",
          "example": "19186557b98cd78214d8b1a52adbebfc8e1e943db77305ecef4ce2a103037a737517052e3scc5c6y"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            },
            "revoked": {
              "type": "boolean",
              "example": false
            },
            "access_token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalIdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PharmaceuticalArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmaceutical_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "010777"
            },
            "article_name": {
              "type": "string",
              "example": "Alvedon®"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            },
            "assortment_code": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string",
              "example": "Muntra"
            },
            "drug_form": {
              "type": "string"
            },
            "high_risk_pharmaceutical": {
              "type": "boolean",
              "example": false
            },
            "is_reimbursed": {
              "type": "boolean",
              "example": false
            },
            "non_approved": {
              "type": "boolean",
              "example": true
            },
            "npl_pack_id": {
              "type": "string",
              "example": "19780408400186"
            },
            "npl_id": {
              "type": "string",
              "example": "25780408400116"
            },
            "package_text": {
              "type": "string",
              "example": "Strip, 10 suppositorier"
            },
            "prescription_required": {
              "type": "boolean",
              "example": true
            },
            "preventive_action": {
              "type": "string"
            },
            "quantity_text": {
              "type": "string",
              "example": "10 styck"
            },
            "reference_price": {
              "type": "number",
              "example": "0.00"
            },
            "sales_stopped": {
              "type": "boolean",
              "example": true
            },
            "strength": {
              "type": "string",
              "example": "500 mg"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalPharmacyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmacy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "code": {
              "type": "string",
              "example": "7350045512239"
            },
            "label": {
              "type": "string",
              "example": "RECEPTBREVLÅDAN"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100421"
            },
            "to": {
              "type": "string",
              "example": "+46840906333"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PinnedCalendarItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimRow": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "fk_id": {
              "type": "number",
              "example": 1
            },
            "diagnosis": {
              "type": "string"
            },
            "treatment": {
              "type": "string"
            },
            "tooth": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "fk_claim_id": {
              "type": "number"
            },
            "fk_claim_status": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean"
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreSignedUrlResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "presigned_url"
        },
        "id": {
          "type": "string",
          "example": "https://media.muntra.com/patients/111111111/688f78532240feefb27113a80c3db84e8f8b09a7fe4f4.png?Expires=1737108561&Signature=qcalCAQYG8lUoFMoOsmNITQ4Pc1p-nhdD8hQ7LaeM5DJlLtgY8ier~LZrDVIEp3d-VCzH75YWX3zS0TXAu6cJav4qb3o7hdre6p2lmYRnUIs7GDCN6AO9IYfcLmnByru7YC8Q1DQL7sWkRVrBcSSLrpOuhDQjPGFj~6a335uGfEw1t1k660cVcRiRmjGjBTEQEFSjx7QRe-hdgDqJGFb9rD22RS17vSBsuQHuyBDROCu-~zMtv7dkVV55L0DLQQEaNkdFpZkSUY9o~3C22PpMotlTo0SnDRWSEzJl2Bv0phdqX03j9zTh~JEorOC9Yv5c8yZCNHWpRN2i0wVYWW2Eg__&Key-Pair-Id=K3KD4VOQOWIAAU"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreferenceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "counter": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PriceSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p123"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 2
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-19T13:31:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PricesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p701"
            },
            "price_type": {
              "type": "string",
              "example": ""
            },
            "description": {
              "type": "string",
              "example": "Fyllning av en yta på framtand eller hörntand"
            },
            "printed_text": {
              "type": "string",
              "example": ""
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "lab_fee": {
              "type": "number",
              "example": 0
            },
            "included_material": {
              "type": "string",
              "example": "Komposit"
            },
            "time_based": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "standard_duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "multi_tooth": {
              "type": "boolean",
              "example": false
            },
            "class": {
              "type": "string",
              "example": ""
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PrinterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "printer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "manufacturer_name": {
              "type": "string",
              "example": "Test manufacturer name"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "type": {
              "type": "string"
            },
            "hardware_id": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraProceduresResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandblekning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Botox-behandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PromoCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "promo_code"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "eq"
            },
            "code": {
              "type": "string",
              "example": "UZSUXF"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "gives_consent": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "New Project Proposal"
            },
            "description": {
              "type": "string",
              "example": "This is a detailed description of the proposal."
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PublicPersonDataResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "public_person_datum"
        },
        "id": {
          "type": "string",
          "example": "6776dcae07f91"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Sareksvägen 18 lgh 1002"
            },
            "address_2": {
              "type": "string"
            },
            "assembly": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "country": {
              "type": "string",
              "example": "Sweden"
            },
            "county": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "municipality": {
              "type": "string"
            },
            "postal_code": {
              "type": "number",
              "example": "16735"
            },
            "note": {
              "type": "string",
              "example": "Test note"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityActionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_action"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "type": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "frequency": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraQuestionTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "muntra"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionTagDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "calendar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "view_count": {
              "type": "number",
              "example": 2
            },
            "up_vote_count": {
              "type": "number",
              "example": 3
            },
            "down_vote_count": {
              "type": "number",
              "example": 4
            },
            "creation_date": {
              "type": "string",
              "example": "2021-11-04T12:12:54+00:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-11-04T12:12:54+00:00"
            },
            "closed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking_default"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "status": {
              "type": "string"
            },
            "booking_duration": {
              "type": "number",
              "example": 30
            },
            "months_to_booking": {
              "type": "number",
              "example": 12
            },
            "auto_rebook": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-31T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "rebooked": {
              "type": "boolean",
              "example": true
            },
            "last_treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "next_treatment_date": {
              "type": "string",
              "example": "2024-09-08T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceiptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "receipt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "receipt_number": {
              "type": "string"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "control_code": {
              "type": "string"
            },
            "control_unit_id": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-04T19:25:31+02:00"
            },
            "copy_printed_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementRuleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "share": {
              "type": "number",
              "example": 50
            },
            "from": {
              "type": "number",
              "example": 3000
            },
            "to": {
              "type": "number",
              "example": 10000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "FK & patient name"
            },
            "active": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string",
              "example": "Test text"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-30T15:00:00+01:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-30T15:00:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponseResp": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_response"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "external": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "receiver_signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceivedRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "received_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SentRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sent_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RepaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "repayment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ResourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "resource"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskEvaluationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "risk_evaluation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-27T13:41:22+02:00"
            },
            "caries_diet": {
              "type": "number",
              "example": 0
            },
            "caries_fluor_exposure": {
              "type": "number",
              "example": 0
            },
            "caries_history": {
              "type": "number",
              "example": 0
            },
            "caries_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "caries_other": {
              "type": "number",
              "example": 0
            },
            "caries_progression": {
              "type": "number",
              "example": 0
            },
            "caries_saliva": {
              "type": "number",
              "example": 0
            },
            "generic_age": {
              "type": "number",
              "example": 0
            },
            "generic_cooperation_willingness": {
              "type": "number",
              "example": 0
            },
            "generic_dental_fear": {
              "type": "number",
              "example": 0
            },
            "generic_diseases": {
              "type": "number",
              "example": 0
            },
            "generic_medications": {
              "type": "number",
              "example": 0
            },
            "parodontal_activity": {
              "type": "number",
              "example": 0
            },
            "parodontal_bleeding": {
              "type": "number",
              "example": 0
            },
            "parodontal_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "parodontal_plaque": {
              "type": "number",
              "example": 0
            },
            "parodontal_tobacco_use": {
              "type": "number",
              "example": 0
            },
            "technical_bite_physiology": {
              "type": "number",
              "example": 0
            },
            "technical_erosion": {
              "type": "number",
              "example": 0
            },
            "technical_fillings_and_crowns": {
              "type": "number",
              "example": 0
            },
            "technical_other": {
              "type": "number",
              "example": 0
            },
            "technical_prosthetics": {
              "type": "number",
              "example": 0
            },
            "technical_root_fillings": {
              "type": "number",
              "example": 0
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-27T12:41:22+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-05-27T12:41:22+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "role"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "dentist"
            },
            "occupational_code": {
              "type": "string",
              "example": "TAN"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "room"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "floor": {
              "type": "string",
              "example": "5"
            },
            "order": {
              "type": "number",
              "example": 10
            },
            "replace_with_default_users": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SafeModeConfigResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "safe_mode_config"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceSalesPerArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_sales_per_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1wdqgqw21g3f44"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "clinic_id": {
              "type": "string",
              "example": "134"
            },
            "year": {
              "type": "string",
              "example": "2024"
            },
            "month": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_description": {
              "type": "string",
              "example": "Test description"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "amount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerDateReporRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2018-01-05T00:00:00+01:00"
            },
            "value": {
              "type": "number",
              "example": 1500
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            },
            "vat_amount": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesVerificationPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_verifications_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "total_sales_amount": {
              "type": "number",
              "example": 100
            },
            "user_share": {
              "type": "number"
            },
            "verification_id": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchAnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "id_number": {
              "type": "string",
              "example": "1234123415"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "organization"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchOrganizationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Gatuadress #11"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Ort #11"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "01001"
            },
            "organization_name": {
              "type": "string",
              "example": "Företagsnamn #11"
            },
            "organization_number": {
              "type": "string",
              "example": "010011-7890"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_number": {
              "type": "string",
              "example": "256"
            },
            "social_security_number": {
              "type": "string",
              "example": "199003242402"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2005-06-14T00:00:00+02:00"
            },
            "phone_number_work": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "380951957739"
            },
            "e_mail_address": {
              "type": "string",
              "example": "triq@testmain.com"
            },
            "clinic_name": {
              "type": "string",
              "example": "Healthful #2"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchUserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "role_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShrinkageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "shrinkage"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 3
            },
            "quantity": {
              "type": "number",
              "example": 5
            },
            "signed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SickReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sick-report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string"
            },
            "caregiver_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            },
            "organization_id": {
              "type": "string"
            },
            "main_icd_code_id": {
              "type": "string"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "caregiver_first_name": {
              "type": "string",
              "example": "Mike"
            },
            "caregiver_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "caregiver_social_security_number": {
              "type": "string"
            },
            "professional_designation": {
              "type": "string"
            },
            "caregiver_third_party_id": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_street_address_1": {
              "type": "string"
            },
            "organization_name": {
              "type": "string"
            },
            "organization_number": {
              "type": "string"
            },
            "organization_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "organization_postal_code": {
              "type": "string"
            },
            "organization_street_address_1": {
              "type": "string"
            },
            "organization_clinic_third_party_id": {
              "type": "string"
            },
            "employer_name": {
              "type": "string",
              "example": "Bob Dob"
            },
            "employment_percentage": {
              "type": "number",
              "example": 12
            },
            "number_of_employers": {
              "type": "number",
              "example": 100
            },
            "from_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-09-09T19:25:31+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-24T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SigningTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "signing_token"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsInvitationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_invitation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "example": "Test message"
            },
            "segments": {
              "type": "number",
              "example": 3
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-17T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T10:26:13+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 1
            },
            "only_send_if_booking_unconfirmed": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "number"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-18T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T17:06:51+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "sender_id": {
              "type": "string"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Gorro"
            },
            "last_name": {
              "type": "string",
              "example": "Gordon"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Kyiv"
            },
            "postal_code": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 12
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "only_send_if_booking_unconfirmed": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_invoice_unread": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_remittance_unread": {
              "type": "boolean",
              "example": true
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpecialityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "speciality"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Bettfysiologi"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StandardOperatingProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "standard_operating_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_insurance_agency_id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "reference_price_general_dentistry": {
              "type": "number",
              "example": 25.3
            },
            "reference_price_specialist_dentistry": {
              "type": "number",
              "example": 33.3
            },
            "reimbursement_amount": {
              "type": "number",
              "example": 77.2
            },
            "included_material": {
              "type": "string"
            },
            "allowed_for_stb": {
              "type": "boolean",
              "example": true
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StbDiseaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "stb_disease"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1100"
            },
            "description": {
              "type": "string",
              "example": "Muntorrhet pga. läkemedelsbehandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "supplier_product_code": {
              "type": "string",
              "example": "SMS_INVITATION_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "Kallelse via SMS"
            },
            "price_is_percent_of_transaction_amount": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "customer_invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "customer_invoice_country_name": {
              "type": "string",
              "example": "Sweden"
            },
            "customer_invoice_email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "customer_invoice_postal_code": {
              "type": "string"
            },
            "customer_invoice_street_address1": {
              "type": "string"
            },
            "customer_invoice_street_address2": {
              "type": "string"
            },
            "customer_name": {
              "type": "string"
            },
            "supplier_bankgiro_number": {
              "type": "string"
            },
            "supplier_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "supplier_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "supplier_email": {
              "type": "string",
              "example": "test@testsupplieremail.com"
            },
            "supplier_name": {
              "type": "string",
              "example": "John"
            },
            "supplier_number": {
              "type": "string"
            },
            "supplier_phone_nr": {
              "type": "string"
            },
            "supplier_postal_code": {
              "type": "string"
            },
            "supplier_street_address_1": {
              "type": "string"
            },
            "supplier_street_address_2": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-08-01T00:00:00+01:00"
            },
            "ocr_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentMethodResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment_method"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            },
            "vat_amount": {
              "type": "number",
              "example": 100
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSettingsForOrganizationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_settings_for_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "api_username_at_supplier": {
              "type": "string"
            },
            "api_password_at_supplier": {
              "type": "string"
            },
            "organization_id_at_supplier": {
              "type": "string"
            },
            "preferred_supplier": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportAgentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_agent"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Ked"
            },
            "initials": {
              "type": "string",
              "example": "JO"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportEmailAdressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_email_adress"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@mail.com"
            },
            "default": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-29T10:11:17+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SurfacesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "surface"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            },
            "points": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "green"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TandenCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tanden_check"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "eligble": {
              "type": "boolean",
              "example": "Tandblekning"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "stb_amount_available": {
              "type": "number",
              "example": 10
            },
            "hcd_amount": {
              "type": "number",
              "example": 10
            },
            "hcd_start_date": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "last_treatment_date": {
              "type": "string"
            },
            "faultcode": {
              "type": "number"
            },
            "faultstring": {
              "type": "string"
            },
            "error_code": {
              "type": "number"
            },
            "error_text": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-01T11:35:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "channel": {
              "type": "string",
              "example": "web"
            },
            "public": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T10:58:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "2"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TenantDatabaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tenant_database"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "database": {
              "type": "string",
              "example": "prodentor_823"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryTextTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_text_template"
        },
        "id": {
          "type": "string",
          "example": "220731"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyIdResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyOrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_organization_clinic_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "third_party_clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "75% Horisontalt overbitt, 9 mm eller mer"
            },
            "code": {
              "type": "string",
              "example": "887"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "232100-0024"
            },
            "organization_name": {
              "type": "string",
              "example": "Folktandvården Uppsala"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "75135"
            },
            "invoice_city": {
              "type": "string",
              "example": "Uppsala"
            },
            "invoice_email_address": {
              "type": "string",
              "example": "niels@muntra.se"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "ean_number": {
              "type": "string",
              "example": "0121456784012"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "category": {
              "type": "string",
              "example": "regular"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThreeDImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "three-d-image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "application/octet-stream"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TicketResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ticket"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "subject": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-10-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSideResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "buccal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "buccal"
            },
            "two_side": {
              "type": "boolean",
              "example": false
            },
            "four_side": {
              "type": "boolean",
              "example": false
            },
            "six_side": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": false
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSurfaceSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_surface_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": true
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothTeethResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth"
        },
        "id": {
          "type": "number",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tooth": {
              "type": "string",
              "example": "19"
            },
            "jaw": {
              "type": "string",
              "example": "upper"
            },
            "side": {
              "type": "string",
              "example": "right"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string",
              "example": "1040"
            },
            "account_name": {
              "type": "string",
              "example": "Licenser"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TranslationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "translation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "count": {
              "type": "number",
              "example": 123
            },
            "lab_fee": {
              "type": "number",
              "example": 10
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dwq1d21dddqwq1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AllTreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "all_treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr673c8acec87be"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p831"
            },
            "count": {
              "type": "number",
              "example": 5
            },
            "lab_fee": {
              "type": "number",
              "example": 3
            },
            "value": {
              "type": "number",
              "example": 1000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr67475f68f09ed"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p835"
            },
            "count": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "value": {
              "type": "number",
              "example": 3000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwfqqw12f2121"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 10
            },
            "vat_amount": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "spurr6756fb2d82b87"
        },
        "attributes": {
          "properties": {
            "user_id": {
              "type": "number",
              "example": 2
            },
            "label": {
              "type": "string",
              "example": "Niels Rask"
            },
            "value": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountOfTreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "count_of_treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "tpn618df83f46a9a"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 277
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item"
        },
        "id": {
          "type": "string",
          "example": "4"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 11
            },
            "lab_fee": {
              "type": "number",
              "example": 22
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "vat_percentage": {
              "type": "number",
              "example": 11.4
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "order": {
              "type": "string"
            },
            "done": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Terapiplan"
            },
            "terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "reference": {
              "type": "string",
              "example": "Test reference"
            },
            "atb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": false
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "validated_reimbursement_amount": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "treatment_plan_free_text": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test_file.xml"
            },
            "type": {
              "type": "string",
              "example": "text/plain"
            },
            "size_in_bytes": {
              "type": "number"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "from_date": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "report_type": {
              "type": "string",
              "example": "libretto"
            },
            "only_include_reimbursed_examinations": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string",
              "example": "libretto"
            },
            "name": {
              "type": "string",
              "example": "Vårdrapportering till Libretto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e323"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Protes"
            },
            "value": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_code": {
              "type": "string",
              "example": "US"
            },
            "price_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 3
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T13:56:36+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Amalgam"
            },
            "code": {
              "type": "string",
              "example": "AM"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": true
            },
            "surface_text": {
              "type": "string",
              "example": "Test text"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwainDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "twain_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "data_source_manager_id": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string"
            },
            "product_family": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "version_info": {
              "type": "string"
            },
            "version_major": {
              "type": "string"
            },
            "version_minor": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "noise_reduction_level": {
              "type": "number"
            },
            "path_to_files": {
              "type": "string"
            },
            "monitor_folder_path": {
              "type": "string"
            },
            "monitor_folder_extension": {
              "type": "string"
            },
            "keepalive": {
              "type": "boolean",
              "example": true
            },
            "show_in_menu": {
              "type": "boolean",
              "example": true
            },
            "show_sensor_ui": {
              "type": "boolean",
              "example": true
            },
            "pass_parent_window_to_source": {
              "type": "boolean",
              "example": true
            },
            "use_modal_mode": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwoFactorAuthenticationSetupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "two_factor_authentication_setup"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "activated_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnassignedReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unassigned_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptInvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "af12f2154gewgw1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 100
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptPatientInvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_patient_invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UninvoicableLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoicable_lab_fee_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "asf12ff11212aqa"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadDentalLabOrderReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_dental_lab_order_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadSentRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_sent_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "enable_shortcuts": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": true
            },
            "enable_done": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": true
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": true
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": true
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": true
            },
            "default_treatment_plan_terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": true
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": true
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicSeedResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic_seed"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "property": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "change_user_allowed": {
              "type": "boolean",
              "example": true
            },
            "allowed_to_do_treatment": {
              "type": "boolean",
              "example": true
            },
            "use_specialist_reference_prices": {
              "type": "boolean",
              "example": true
            },
            "use_patient_properties_for_teeth_statistics": {
              "type": "boolean",
              "example": true
            },
            "save_delay_in_milliseconds": {
              "type": "boolean",
              "example": 3000
            },
            "remittance_user": {
              "type": "boolean",
              "example": false
            },
            "enable_shortcuts": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": false
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_declaration_email": {
              "type": "boolean",
              "example": true
            },
            "auto_include_declaration_sms": {
              "type": "boolean",
              "example": true
            },
            "include_ics_in_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_check_public_records_on_snail_mail_creation": {
              "type": "boolean",
              "example": true
            },
            "only_add_snail_mail_when_others_missing": {
              "type": "boolean",
              "example": true
            },
            "default_booking_title": {
              "type": "string"
            },
            "default_booking_disclaimer": {
              "type": "string"
            },
            "default_booking_cancelling_text": {
              "type": "boolean",
              "example": "Patienten ringde och lämnade"
            },
            "default_booking_duration": {
              "type": "number",
              "example": 10
            },
            "max_nr_of_days_before_first_sendout": {
              "type": "number",
              "example": 20
            },
            "default_months_to_rebooking": {
              "type": "number",
              "example": 20
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "default_days_in_calendar": {
              "type": "string"
            },
            "calendar_time_label_interval_minutes": {
              "type": "number",
              "example": 20
            },
            "calendar_minute_increment": {
              "type": "number",
              "example": 20
            },
            "calendar_zoom_value": {
              "type": "number",
              "example": 20
            },
            "calendar_from_minute": {
              "type": "string"
            },
            "calendar_to_minute": {
              "type": "string"
            },
            "calendar_color": {
              "type": "string"
            },
            "base_booking_color_on_calendar_color": {
              "type": "boolean",
              "example": false
            },
            "default_patient_booking_text": {
              "type": "string",
              "example": "Test text"
            },
            "default_patient_partstat": {
              "type": "string",
              "example": "NEEDS-ACTION"
            },
            "display_pride_config": {
              "type": "boolean",
              "example": false
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_booking_times": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": false
            },
            "search_events_by_or": {
              "type": "boolean",
              "example": false
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": false
            },
            "enable_done": {
              "type": "boolean",
              "example": false
            },
            "public_calendar_activated": {
              "type": "boolean",
              "example": false
            },
            "booking_requests_activated": {
              "type": "boolean",
              "example": false
            },
            "order_in_public_clinic_page": {
              "type": "string"
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": false
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": false
            },
            "default_invoice_credit_days": {
              "type": "number"
            },
            "default_invoice_fee": {
              "type": "number"
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_on_invoice_handling": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_receipt_on_payment": {
              "type": "boolean",
              "example": false
            },
            "default_to_no_atb": {
              "type": "boolean",
              "example": false
            },
            "use_default_journal_entry_filters": {
              "type": "boolean",
              "example": false
            },
            "default_journal_entry_status_filter": {
              "type": "string"
            },
            "default_journal_entry_type_filter": {
              "type": "string"
            },
            "default_treatment_plan_terms": {
              "type": "string"
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": false
            },
            "include_admin_journal_entries": {
              "type": "boolean",
              "example": false
            },
            "display_journal_entry_rows": {
              "type": "boolean",
              "example": false
            },
            "enable_deepest_pocket": {
              "type": "boolean",
              "example": false
            },
            "display_red_pocket_depth_text_in_perio": {
              "type": "boolean",
              "example": false
            },
            "display_roots_in_perio": {
              "type": "boolean",
              "example": false
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_fee": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_any_pharmacy": {
              "type": "boolean",
              "example": false
            },
            "accepts_referrals": {
              "type": "boolean",
              "example": false
            },
            "telemedicine_activated": {
              "type": "boolean",
              "example": false
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserProcedureAtClinicDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_procedure_at_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Forester"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string",
              "example": "Testgatan"
            },
            "address_2": {
              "type": "string",
              "example": "Testgatan 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01003"
            },
            "municipality": {
              "type": "string",
              "example": "1995-11-10T00:00:00+01:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_home": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_work": {
              "type": "string",
              "example": "+46734100450"
            },
            "fax_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:51:52+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-10T09:32:14+02:00"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "prescriber_code": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string",
              "example": "Supportmedarbetare, Muntra"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "hide_reviews_discreetly": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "example": 4.5
            },
            "overall_rating": {
              "type": "number",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ValidateClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "validate_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VatCodeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "vat_percentage": {
              "type": "number",
              "example": 33.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "CASH INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test text"
            },
            "verification_number": {
              "type": "string",
              "example": "Test text"
            },
            "created_at": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_text": {
              "type": "string",
              "example": "Patientfaktura"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VersionLogResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "version_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2020-03-22T00:00:00+00:00"
            },
            "description_of_change": {
              "type": "string",
              "example": "Introduction of version logs, bugfixes."
            },
            "software_unit_name": {
              "type": "string",
              "example": "MPMS Clinical Frontend"
            },
            "version_number": {
              "type": "string",
              "example": "1.1.432"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookQuetryParameterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_query_parameter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookRequestOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_request_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "webhook_model_id": {
              "type": "string"
            },
            "webhook_model": {
              "type": "string"
            },
            "done_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "request_method": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "request_trigger": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "partstat": {
              "type": "string"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            },
            "first_sendout_on": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "status": {
              "type": "string"
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_submitted": {
              "type": "boolean",
              "example": true
            },
            "payment_prepared": {
              "type": "boolean",
              "example": false
            },
            "price": {
              "type": "number",
              "example": 132
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_attendees": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_attendee"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_type": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_type"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "procedure"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string"
            },
            "text_color": {
              "type": "string"
            },
            "color_order": {
              "type": "string"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 123
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Dental Clinic"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Central Street 12"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string",
              "example": "dental.clinic@dental.com"
            },
            "clinic_phone_number": {
              "type": "string",
              "example": "0465636985"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "07586"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "referral": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "fee": {
              "type": "number",
              "example": 333
            },
            "lab_fee": {
              "type": "number",
              "example": 111
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 8.5
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 16
            },
            "entry_type": {
              "type": "string"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": false
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vat_code": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "vat_code"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "invoice_postal_code": {
          "type": "string"
        },
        "invoice_city": {
          "type": "string"
        },
        "invoice_email_address": {
          "type": "string"
        },
        "invoice_phone_number": {
          "type": "string"
        },
        "invoice_phone_number_2": {
          "type": "string"
        },
        "invoice_phone_mobile": {
          "type": "string"
        },
        "invoice_fax": {
          "type": "string"
        },
        "invoice_reference": {
          "type": "string"
        },
        "invoice_country_code": {
          "type": "string"
        },
        "invoice_plusgiro": {
          "type": "string"
        },
        "invoice_bankgiro": {
          "type": "string"
        },
        "invoice_account_number": {
          "type": "string"
        },
        "invoice_clearing_number": {
          "type": "string"
        },
        "invoice_swish_number": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2024-09-01T19:25:31+02:00"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-09-02T22:25:31+02:00"
        }
      },
      "type": "object"
    },
    "PatientWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "date_of_birth": {
              "type": "string",
              "example": "1956-01-01"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "e_mail_address": {
              "type": "string",
              "example": "test@email.com"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "patient_number": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": false
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "social_security_number": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string"
            },
            "view_count": {
              "type": "number",
              "example": 10
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "embedded_text": {
              "type": "string",
              "example": "Test embeded text"
            },
            "embedding": {
              "type": "string"
            },
            "relevant_for_clinic_support": {
              "type": "boolean",
              "example": true
            },
            "internal": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "public": {
              "type": "boolean",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "responsible": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "responsible"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "creator": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "creator"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "comments": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "comment"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string"
            },
            "account_name": {
              "type": "string"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Jerald"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "social_security_number": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test verification text"
            },
            "verification_number": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fiscal_year": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "fiscal_year"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "verification_serie": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "verification_serie"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "transactions": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "transactions"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WeekdayDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "weekday"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WiaDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "wia_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "wia_device_id": {
              "type": "string"
            },
            "wia_device_manufacturer": {
              "type": "string"
            },
            "wia_device_name": {
              "type": "string"
            },
            "added_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number"
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "column_name": {
              "type": "string"
            },
            "regular_expression": {
              "type": "string"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            },
            "path_to_executable": {
              "type": "string"
            },
            "path_to_files": {
              "type": "string"
            },
            "path_to_write_file": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 3
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string",
              "example": "patient"
            },
            "column_name": {
              "type": "string",
              "example": "first_name"
            },
            "regular_expression": {
              "type": "string",
              "example": "'[^0-9]'"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "422": {
      "description": "Validation error",
      "schema": {
        "properties": {
          "message": {
            "description": "List muntra-clinics",
            "type": "string",
            "example": "Please make sure that request parameters is correct"
          }
        },
        "type": "object"
      }
    }
  },
  "paths": {
    "/api/supplier-articles/{id}": {
      "get": {
        "tags": [
          "supplier-articles"
        ],
        "summary": "Retrieve a supplier-article",
        "description": "Returns certain supplier article based on the given filters",
        "operationId": "getSupplierArticleById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'article', 'currency', 'vat_code'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier-article",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierArticleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier-article",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoice-rows": {
      "get": {
        "tags": [
          "supplier-invoice-rows"
        ],
        "summary": "List supplier-invoice-rows",
        "description": "Returns list of supplier invoice rows based on the given filters",
        "operationId": "getSupplierInvoiceRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_invoice', 'order_line'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "supplier_invoice_id",
            "in": "query",
            "description": "'supplier_invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List supplier-invoice-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List supplier-invoice-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "supplier-invoice-rows"
        ],
        "summary": "Create a supplier-invoice-row",
        "description": "Returns created supplier invoice row based on the given filters",
        "operationId": "postSupplierInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'supplier_invoice_id' and 'vat_code_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Create a supplier-invoice-row",
                      "properties": {
                        "supplier_invoice_id": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        },
                        "vat_code_id": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        },
                        "product_code": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Create a supplier-invoice-row",
                          "type": "number",
                          "example": 33
                        },
                        "quantity": {
                          "description": "Create a supplier-invoice-row",
                          "type": "number",
                          "example": 15
                        },
                        "discount_excluding_vat": {
                          "description": "Create a supplier-invoice-row",
                          "type": "number",
                          "example": 11
                        },
                        "vat_percentage": {
                          "description": "Create a supplier-invoice-row",
                          "type": "number",
                          "example": 30
                        },
                        "supplier_invoice": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        },
                        "order_line": {
                          "description": "Create a supplier-invoice-row",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a supplier-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoice-rows/{id}": {
      "get": {
        "tags": [
          "supplier-invoice-rows"
        ],
        "summary": "Retrieve a supplier-invoice-row",
        "description": "Returns certain supplier invoice row based on the given filters",
        "operationId": "getSupplierInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_invoice', 'order_line'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "supplier-invoice-rows"
        ],
        "summary": "Edit a supplier-invoice-row",
        "description": "Returns edited supplier invoice row based on the given filters",
        "operationId": "patchSupplierInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'supplier_invoice_id' and 'vat_code_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit a supplier-invoice-row",
                      "properties": {
                        "supplier_invoice_id": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        },
                        "vat_code_id": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        },
                        "product_code": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "number",
                          "example": 33
                        },
                        "quantity": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "number",
                          "example": 15
                        },
                        "discount_excluding_vat": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "number",
                          "example": 11
                        },
                        "vat_percentage": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "number",
                          "example": 30
                        },
                        "supplier_invoice": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        },
                        "order_line": {
                          "description": "Edit a supplier-invoice-row",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a supplier-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoices": {
      "get": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "List supplier-invoices",
        "description": "Returns a list of supplier invoices based on the given filters",
        "operationId": "getSupplierInvoices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'customer', 'fiscal_year', 'verification', 'currency', 'clinic', 'supplier_invoice_rows', 'supplier_payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "'supplier_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List supplier-invoices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List supplier-invoices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "Create a supplier-invoice",
        "description": "Returns created supplier invoice based on the given filters",
        "operationId": "postSupplierInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create a supplier-invoice",
                      "properties": {
                        "customer_invoice_city": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "customer_invoice_country_name": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "Sweden"
                        },
                        "customer_invoice_email": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "test@testemail.com"
                        },
                        "customer_invoice_postal_code": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "customer_invoice_street_address1": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "customer_invoice_street_address2": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "customer_name": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_bankgiro_number": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_city": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "supplier_country": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "supplier_email": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "test@testsupplieremail.com"
                        },
                        "supplier_name": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "John"
                        },
                        "supplier_number": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_phone_nr": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_postal_code": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_street_address_1": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_street_address_2": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "2024-01-01T00:00:00+01:00"
                        },
                        "due_date": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "2024-08-01T00:00:00+01:00"
                        },
                        "ocr_number": {
                          "description": "Create a supplier-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a supplier-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "deleted_at": {
                          "description": "Create a supplier-invoice",
                          "type": "string",
                          "example": "2024-11-01T08:00:00+01:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoices/{id}": {
      "get": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "Retrieve a supplier-invoice",
        "description": "Returns certain supplier invoices based on the given filters",
        "operationId": "getSupplierInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'customer', 'fiscal_year', 'verification', 'currency', 'clinic', 'supplier_invoice_rows', 'supplier_payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "Edit a supplier-invoice",
        "description": "Returns edited supplier invoices based on the given filters",
        "operationId": "patchSupplierInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Edit a supplier-invoice",
                      "properties": {
                        "customer_invoice_city": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "customer_invoice_country_name": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "Sweden"
                        },
                        "customer_invoice_email": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "test@testemail.com"
                        },
                        "customer_invoice_postal_code": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "customer_invoice_street_address1": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "customer_invoice_street_address2": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "customer_name": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_bankgiro_number": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_city": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "Kyiv"
                        },
                        "supplier_country": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "Ukraine"
                        },
                        "supplier_email": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "test@testsupplieremail.com"
                        },
                        "supplier_name": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "John"
                        },
                        "supplier_number": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_phone_nr": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_postal_code": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_street_address_1": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "supplier_street_address_2": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "invoice_date": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "2024-01-01T00:00:00+01:00"
                        },
                        "due_date": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "2024-08-01T00:00:00+01:00"
                        },
                        "ocr_number": {
                          "description": "Edit a supplier-invoice",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a supplier-invoice",
                          "type": "boolean",
                          "example": false
                        },
                        "deleted_at": {
                          "description": "Edit a supplier-invoice",
                          "type": "string",
                          "example": "2024-11-01T08:00:00+01:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoices/{id}/delete": {
      "post": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "Delete a supplier-invoice",
        "description": "Returns deleted supplier invoice based on the given filters",
        "operationId": "postSupplierInvoiceDeleted",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-invoices/{id}/pay": {
      "post": {
        "tags": [
          "supplier-invoices"
        ],
        "summary": "Pay a supplier-invoice",
        "description": "Returns paid supplier invoice based on the given filters",
        "operationId": "postSupplierInvoicePaid",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "card_amount",
            "in": "query",
            "description": "'card_amount' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Pay a supplier-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Pay a supplier-invoice",
                      "properties": {
                        "card_amount": {
                          "description": "Pay a supplier-invoice",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Pay a supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Pay a supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-payment-methods": {
      "get": {
        "tags": [
          "supplier-payment-methods"
        ],
        "summary": "List supplier-payment-methods",
        "description": "Returns a list of supplier payment methods based on the given filters",
        "operationId": "getSupplierPaymentMethods",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "description": "'amount' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List supplier-payment-methods",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierPaymentMethodResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List supplier-payment-methods",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-payments": {
      "get": {
        "tags": [
          "supplier-payments"
        ],
        "summary": "List supplier-payments",
        "description": "Returns list of supplier payments based on the given filters",
        "operationId": "getSupplierPayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'verification', 'currency', 'payment_type', 'clinic', 'daily_reconciliation', 'supplier_payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "payment_type_names",
            "in": "query",
            "description": "'payment_type_names' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List supplier-payments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List supplier-payments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "supplier-payments"
        ],
        "summary": "Create a supplier-payment",
        "description": "Returns created supplier payment based on the given filters",
        "operationId": "postSupplierPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-payment",
                  "properties": {
                    "attributes": {
                      "description": "Create a supplier-payment",
                      "properties": {
                        "verification_id": {
                          "description": "Create a supplier-payment",
                          "type": "number"
                        },
                        "currency_id": {
                          "description": "Create a supplier-payment",
                          "type": "number"
                        },
                        "payment_type_id": {
                          "description": "Create a supplier-payment",
                          "type": "number"
                        },
                        "paid_at": {
                          "description": "Create a supplier-payment",
                          "type": "string",
                          "example": "2024-01-01T00:00:00+01:00"
                        },
                        "fiscal_year_id": {
                          "description": "Create a supplier-payment",
                          "type": "number"
                        },
                        "invoice_id": {
                          "description": "Create a supplier-payment",
                          "type": "number"
                        },
                        "used": {
                          "description": "Create a supplier-payment",
                          "type": "boolean",
                          "example": false
                        },
                        "amount": {
                          "description": "Create a supplier-payment",
                          "type": "number",
                          "example": 100
                        },
                        "vat_amount": {
                          "description": "Create a supplier-payment",
                          "type": "number",
                          "example": 100
                        },
                        "description": {
                          "description": "Create a supplier-payment",
                          "type": "string",
                          "example": "Test description"
                        },
                        "succeeded": {
                          "description": "Create a supplier-payment",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a supplier-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-payments/{id}": {
      "get": {
        "tags": [
          "supplier-payments"
        ],
        "summary": "Retrieve a supplier-payment",
        "description": "Returns certain supplier payment based on the given filters",
        "operationId": "getSupplierPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'verification', 'currency', 'payment_type', 'clinic', 'daily_reconciliation', 'supplier_payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-selects": {
      "post": {
        "tags": [
          "supplier-selects"
        ],
        "summary": "Create a supplier-select",
        "description": "Returns created supplier select based on the given filters",
        "operationId": "postSupplierSelect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'supplier'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (Obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-select",
                  "properties": {
                    "attributes": {
                      "description": "Create a supplier-select",
                      "properties": {
                        "tag": {
                          "description": "Create a supplier-select",
                          "type": "string"
                        },
                        "supplier_id": {
                          "description": "Create a supplier-select",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-select",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a supplier-select",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-settings-for-organizations": {
      "get": {
        "tags": [
          "supplier-settings-for-organizations"
        ],
        "summary": "List supplier-settings-for-organizations",
        "description": "Returns a list of supplier settings for organizations based on the given filters",
        "operationId": "getSupplierSettingsForOrganizations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'organization', 'tag', 'clinics'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "supplier_settings_for_organization_id",
            "in": "query",
            "description": "'supplier_settings_for_organization_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "'supplier_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List supplier-settings-for-organizations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierSettingsForOrganizationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List supplier-settings-for-organizations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "supplier-settings-for-organizations"
        ],
        "summary": "Create a supplier-settings-for-organization",
        "description": "Returns created supplier settings for organization based on the given filters",
        "operationId": "postSupplierSettingsForOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'supplier_id' and 'organization_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-settings-for-organization",
                  "properties": {
                    "attributes": {
                      "description": "Create a supplier-settings-for-organization",
                      "properties": {
                        "supplier_id": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "number"
                        },
                        "organization_id": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "number"
                        },
                        "api_username_at_supplier": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "api_password_at_supplier": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "organization_id_at_supplier": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "preferred_supplier": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "clinics": {
                          "description": "Create a supplier-settings-for-organization",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a supplier-settings-for-organization",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierSettingsForOrganizationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a supplier-settings-for-organization",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/supplier-settings-for-organizations/{id}": {
      "get": {
        "tags": [
          "supplier-settings-for-organizations"
        ],
        "summary": "Retrieve a supplier-settings-for-organization",
        "description": "Returns certain supplier settings for organization based on the given filters",
        "operationId": "getSupplierSettingsForOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'organization', 'tag', 'clinics'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier-settings-for-organization",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierSettingsForOrganizationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier-settings-for-organization",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "supplier-settings-for-organizations"
        ],
        "summary": "Edit a supplier-settings-for-organization",
        "description": "Returns edited supplier settings for organization based on the given filters",
        "operationId": "patchSupplierSettingsForOrganization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'supplier_id' and 'organization_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-settings-for-organization",
                  "properties": {
                    "attributes": {
                      "description": "Edit a supplier-settings-for-organization",
                      "properties": {
                        "supplier_id": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "number"
                        },
                        "organization_id": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "number"
                        },
                        "api_username_at_supplier": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "api_password_at_supplier": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "organization_id_at_supplier": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "preferred_supplier": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "string"
                        },
                        "clinics": {
                          "description": "Edit a supplier-settings-for-organization",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a supplier-settings-for-organization",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierSettingsForOrganizationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a supplier-settings-for-organization",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/suppliers": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "List suppliers",
        "description": "Returns a list of suppliers based on the given filters",
        "operationId": "getSuppliers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_articles', 'supplier_settings_for_organizations', 'tags'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "tag",
            "in": "query",
            "description": "'tag' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List suppliers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List suppliers",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/suppliers/{id}": {
      "get": {
        "tags": [
          "suppliers"
        ],
        "summary": "Retrieve a supplier",
        "description": "Returns a certain supplier based on the given filters",
        "operationId": "getSupplier",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_articles', 'supplier_settings_for_organizations', 'tags'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a supplier",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupplierResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a supplier",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/support-agents": {
      "get": {
        "tags": [
          "support-agents"
        ],
        "summary": "List support-agents",
        "description": "Returns list of support agents based on the given filters",
        "operationId": "getSupportAgents",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'message_rooms', 'message_sender'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List support-agents",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupportAgentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List support-agents",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/support-agents/{id}": {
      "get": {
        "tags": [
          "support-agents"
        ],
        "summary": "Retrieve a support-agent",
        "description": "Returns certain support agent based on the given filters",
        "operationId": "getSupportAgent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'message_rooms', 'message_sender'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a support-agent",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupportAgentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a support-agent",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/support-email-addresses": {
      "post": {
        "tags": [
          "support-email-addresses"
        ],
        "summary": "Create a support-email-address",
        "description": "Returns created support email address based on the given filters",
        "operationId": "postSupportEmailAdress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a support-email-address",
                  "properties": {
                    "attributes": {
                      "description": "Create a support-email-address",
                      "properties": {
                        "email": {
                          "description": "Create a support-email-address",
                          "type": "string",
                          "example": "test@mail.com"
                        },
                        "default": {
                          "description": "Create a support-email-address",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a support-email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupportEmailAdressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a support-email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/support-email-addresses/{id}": {
      "get": {
        "tags": [
          "support-email-addresses"
        ],
        "summary": "Retrieve a support-email-address",
        "description": "Returns certain support email address based on the given filters",
        "operationId": "getSupportEmailAdressById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a support-email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupportEmailAdressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a support-email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/surfaces": {
      "get": {
        "tags": [
          "surfaces"
        ],
        "summary": "List surfaces",
        "description": "Returns a list of surfaces based on the given filters",
        "operationId": "getListSurfaces",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List surfaces",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SurfacesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List surfaces",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/surfaces/{id}": {
      "get": {
        "tags": [
          "surfaces"
        ],
        "summary": "Retrieve a surface",
        "description": "Returns certain surface based on the given filters",
        "operationId": "getSurface",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a surface",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SurfacesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a surface",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tags": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "List tags",
        "description": "Returns list of tags based on the given filters",
        "operationId": "getTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter.ids",
            "in": "query",
            "description": "Filter id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tags",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tags",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tags/{id}": {
      "get": {
        "tags": [
          "tags"
        ],
        "summary": "Retrieve a tag",
        "description": "Returns certain tag based on the given filters",
        "operationId": "getTagById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a tag",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TagResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a tag",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tanden-checks": {
      "get": {
        "tags": [
          "tanden-checks"
        ],
        "summary": "List tanden-checks",
        "description": "Returns a list of tanden checks based on the given filters",
        "operationId": "getTandenChecks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'insurance_contract', 'tanden_check_commentaries', 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tanden-checks",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TandenCheckResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tanden-checks",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task-comments": {
      "get": {
        "tags": [
          "task-comments"
        ],
        "summary": "List task-comments",
        "description": "Returns a list of task comments based on the given filters",
        "operationId": "getTaskComments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'task', 'user', 'patient', 'source', 'task_comment_email'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List task-comments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCommentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List task-comments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "task-comments"
        ],
        "summary": "Create a task-comment",
        "description": "Returns created task comment based on the given filters",
        "operationId": "postTaskComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'task_id' and 'body' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a task-comment",
                  "properties": {
                    "attributes": {
                      "description": "Create a task-comment",
                      "properties": {
                        "task_id": {
                          "description": "Create a task-comment",
                          "type": "string"
                        },
                        "body": {
                          "description": "Create a task-comment",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Create a task-comment",
                          "type": "string",
                          "example": "2024-05-27T12:41:22+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a task-comment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCommentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a task-comment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/task-comments/{id}": {
      "get": {
        "tags": [
          "task-comments"
        ],
        "summary": "Retrieve a task-comment",
        "description": "Returns certain task comment based on the given filters",
        "operationId": "getTaskComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'task', 'user', 'patient', 'source', 'task_comment_email'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a task-comment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCommentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a task-comment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "task-comments"
        ],
        "summary": "Edit a task-comment",
        "description": "Returns edited task comment based on the given filters",
        "operationId": "patchTaskComment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'task_id' and 'body' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a task-comment",
                  "properties": {
                    "attributes": {
                      "description": "Edit a task-comment",
                      "properties": {
                        "task_id": {
                          "description": "Edit a task-comment",
                          "type": "string"
                        },
                        "body": {
                          "description": "Edit a task-comment",
                          "type": "string"
                        },
                        "created_at": {
                          "description": "Edit a task-comment",
                          "type": "string",
                          "example": "2024-05-27T12:41:22+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a task-comment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskCommentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a task-comment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "List tasks",
        "description": "Returns a list of tasks based on the given filters",
        "operationId": "getTasks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'responsible', creator', 'incident', 'patient', 'booking', 'comments', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "incident_id",
            "in": "query",
            "description": "'incident_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "completed",
            "in": "query",
            "description": "'completed' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "completed_at",
            "in": "query",
            "description": "'completed_at' field",
            "required": false,
            "type": "string",
            "format": "date",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tasks",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tasks",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Create a task",
        "description": "Returns created task based on the given filters",
        "operationId": "postTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a task",
                  "properties": {
                    "attributes": {
                      "description": "Create a task",
                      "properties": {
                        "title": {
                          "description": "Create a task",
                          "type": "string",
                          "example": "Test title"
                        },
                        "details": {
                          "description": "Create a task",
                          "type": "string",
                          "example": "Test description"
                        },
                        "date": {
                          "description": "Create a task",
                          "type": "string",
                          "example": "2024-09-06"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a task",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a task",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Retrieve a task",
        "description": "Returns a certain task based on the given filters",
        "operationId": "getTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'responsible', creator', 'incident', 'patient', 'booking', 'comments', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a task",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a task",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tasks"
        ],
        "summary": "Edit a task",
        "description": "Returns edited task based on the given filters",
        "operationId": "patchTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a task",
                  "properties": {
                    "attributes": {
                      "description": "Edit a task",
                      "properties": {
                        "title": {
                          "description": "Edit a task",
                          "type": "string",
                          "example": "Test title"
                        },
                        "details": {
                          "description": "Edit a task",
                          "type": "string",
                          "example": "Test description"
                        },
                        "date": {
                          "description": "Edit a task",
                          "type": "string",
                          "example": "2024-09-06"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a task",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TaskResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a task",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/teeth": {
      "get": {
        "tags": [
          "teeth"
        ],
        "summary": "List teeth",
        "description": "Returns list of teeth based on the given filters",
        "operationId": "getTeeth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tooth_crown_graphic', 'tooth_facial_graphic', 'tooth_lingual_graphic', 'parod_entry_types', 'tooth_sides', 'surfaces'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List teeth",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothTeethResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List teeth",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/teeth/{id}": {
      "get": {
        "tags": [
          "teeth"
        ],
        "summary": "Retrieve a tooth",
        "description": "Returns certain tooth based on the given filters",
        "operationId": "getTooth",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tooth_crown_graphic', 'tooth_facial_graphic', 'tooth_lingual_graphic', 'parod_entry_types', 'tooth_sides', 'surfaces'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a tooth",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothTeethResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a tooth",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/teeth/{id}/set-as-implant": {
      "post": {
        "tags": [
          "teeth"
        ],
        "summary": "Set a tooth as implant",
        "description": "Returns certain tooth marked as implant based on the given filters",
        "operationId": "getToothMarkedAsImplant",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Set a tooth as implant",
                  "properties": {
                    "attributes": {
                      "description": "Set a tooth as implant",
                      "properties": {
                        "patient_id": {
                          "description": "Set a tooth as implant",
                          "type": "number",
                          "example": "test@mail.com"
                        },
                        "journal_entry_date": {
                          "description": "Set a tooth as implant",
                          "type": "number",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set a tooth as implant",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothTeethResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set a tooth as implant",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/teeth/{id}/set-as-missing": {
      "post": {
        "tags": [
          "teeth"
        ],
        "summary": "Set a tooth as missing",
        "description": "Returns certain tooth marked as missing based on the given filters",
        "operationId": "getToothMarkedAsMissing",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "journal_entry_date",
            "in": "query",
            "description": "'journal_entry_date' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Set a tooth as missing",
                  "properties": {
                    "attributes": {
                      "description": "Set a tooth as missing",
                      "properties": {
                        "patient_id": {
                          "description": "Set a tooth as missing",
                          "type": "number",
                          "example": "test@mail.com"
                        },
                        "journal_entry_date": {
                          "description": "Set a tooth as missing",
                          "type": "number",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set a tooth as missing",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothTeethResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set a tooth as missing",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tenant-databases/current": {
      "get": {
        "tags": [
          "tenant-databases"
        ],
        "summary": "Retrieve the current tenant database",
        "description": "Returns current tenant database based on the given filters",
        "operationId": "getCurrentTenantDatabase",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'clinics', 'allowed_ip_addresses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current tenant database",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TenantDatabaseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current tenant database",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-parties": {
      "get": {
        "tags": [
          "third-parties"
        ],
        "summary": "List third-parties",
        "description": "Returns a list of third parties based on the given filters",
        "operationId": "getThirdParties",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'locations', 'third_party_patient_categories'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "filter",
            "in": "query",
            "description": "'filter' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "tag",
            "in": "query",
            "description": "'tag' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List third-parties",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List third-parties",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-parties/{id}": {
      "get": {
        "tags": [
          "third-parties"
        ],
        "summary": "Retrieve a third-party",
        "description": "Returns certain third-party based on the given filters",
        "operationId": "getThirdParty",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'locations', 'third_party_patient_categories'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a third-party",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a third-party",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-ids": {
      "get": {
        "tags": [
          "third-party-ids"
        ],
        "summary": "List third-party-ids",
        "description": "Returns a list of third party ids based on the given filters",
        "operationId": "getThirdPartyIds",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization_clinic_setting', 'user', 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_clinic_setting_id",
            "in": "query",
            "description": "The organization clinic setting id field is required when user id is empty.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "The user id field is required when organization clinic setting id is empty.",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List third-party-ids",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyIdResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List third-party-ids",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "third-party-ids"
        ],
        "summary": "Create a third-party-id",
        "description": "Returns created third party id based on the given filters",
        "operationId": "postThirdPartyId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a third-party-id",
                  "properties": {
                    "attributes": {
                      "description": "Create a third-party-id",
                      "properties": {
                        "organization_clinic_setting_id": {
                          "description": "Create a third-party-id",
                          "type": "number"
                        },
                        "user_id": {
                          "description": "Create a third-party-id",
                          "type": "number"
                        },
                        "third_party_id": {
                          "description": "Create a third-party-id",
                          "type": "number"
                        },
                        "value": {
                          "description": "Create a third-party-id",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a third-party-id",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyIdResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a third-party-id",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-ids/{id}": {
      "get": {
        "tags": [
          "third-party-ids"
        ],
        "summary": "Retrieve a third-party-id",
        "description": "Returns certain third party id based on the given filters",
        "operationId": "getThirdPartyId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization_clinic_setting', 'user', 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a third-party-id",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyIdResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a third-party-id",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "third-party-ids"
        ],
        "summary": "Edit a third-party-id",
        "description": "Returns edited third party id based on the given filters",
        "operationId": "patchThirdPartyId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a third-party-id",
                  "properties": {
                    "attributes": {
                      "description": "Edit a third-party-id",
                      "properties": {
                        "organization_clinic_setting_id": {
                          "description": "Edit a third-party-id",
                          "type": "number"
                        },
                        "user_id": {
                          "description": "Edit a third-party-id",
                          "type": "number"
                        },
                        "third_party_id": {
                          "description": "Edit a third-party-id",
                          "type": "number"
                        },
                        "value": {
                          "description": "Edit a third-party-id",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a third-party-id",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyIdResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a third-party-id",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-organization-clinic-settings": {
      "get": {
        "tags": [
          "third-party-organization-clinic-settings"
        ],
        "summary": "List third-party-organization-clinic-settings",
        "description": "Returns list of third party organization clinic settings based on the given filters",
        "operationId": "getThirdPartyOrganizationClinicSettingsList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization_clinic_setting', 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_clinic_setting_id",
            "in": "query",
            "description": "'organization_clinic_setting_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List third-party-organization-clinic-settings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyOrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List third-party-organization-clinic-settings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "third-party-organization-clinic-settings"
        ],
        "summary": "Create a third-party-organization-clinic-setting",
        "description": "Returns created third party organization clinic settings based on the given filters",
        "operationId": "postThirdPartyOrganizationClinicSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a third-party-organization-clinic-setting",
                  "properties": {
                    "attributes": {
                      "description": "Create a third-party-organization-clinic-setting",
                      "properties": {
                        "organization_clinic_setting_id": {
                          "description": "Create a third-party-organization-clinic-setting",
                          "type": "number",
                          "example": 123
                        },
                        "third_party_id": {
                          "description": "Create a third-party-organization-clinic-setting",
                          "type": "number",
                          "example": 123
                        },
                        "third_party_clinic_id": {
                          "description": "Create a third-party-organization-clinic-setting",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a third-party-organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyOrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a third-party-organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-organization-clinic-settings/{id}": {
      "get": {
        "tags": [
          "third-party-organization-clinic-settings"
        ],
        "summary": "Retrieve a third-party-organization-clinic-setting",
        "description": "Returns certain third party organization clinic setting based on the given filters",
        "operationId": "getThirdPartyOrganizationClinicSettingsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization_clinic_setting', 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a third-party-organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyOrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a third-party-organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "third-party-organization-clinic-settings"
        ],
        "summary": "Edit a third-party-organization-clinic-setting",
        "description": "Returns edited third party organization clinic setting based on the given filters",
        "operationId": "patchThirdPartyOrganizationClinicSettingsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization_clinic_setting', 'third_party'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a third-party-organization-clinic-setting",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyOrganizationClinicSettingsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a third-party-organization-clinic-setting",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-patient-categories": {
      "get": {
        "tags": [
          "third-party-patient-categories"
        ],
        "summary": "List third-party-patient-categories",
        "description": "Returns a list of third party patient categories based on the given filters",
        "operationId": "getThirdPartyPatientCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'third_party', 'third_party_reimbursement_rules'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "third_party_id",
            "in": "query",
            "description": "'third_party_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List third-party-patient-categories",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List third-party-patient-categories",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/third-party-patient-categories/{id}": {
      "get": {
        "tags": [
          "third-party-patient-categories"
        ],
        "summary": "Retrieve a third-party-patient-category",
        "description": "Returns certain third party patient category based on the given filters",
        "operationId": "getThirdPartyPatientCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'third_party', 'third_party_reimbursement_rules'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a third-party-patient-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThirdPartyPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a third-party-patient-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/three-d-images": {
      "get": {
        "tags": [
          "three-d-images"
        ],
        "summary": "List three-d-images",
        "description": "Returns list of three-d-images based on the given filters",
        "operationId": "get3dImages",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'remittances'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List three-d-images",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThreeDImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List three-d-images",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/three-d-images/{id}": {
      "get": {
        "tags": [
          "three-d-images"
        ],
        "summary": "Retrieve a three-d-image",
        "description": "Returns certain three-d-image based on the given filters",
        "operationId": "get3dImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'twain_data_source', 'device', 'file_type', 'remittances'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a three-d-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThreeDImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a three-d-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "three-d-images"
        ],
        "summary": "Edit a three-d-image",
        "description": "Returns edited three-d-image based on the given filters",
        "operationId": "patch3dImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a three-d-image",
                  "properties": {
                    "attributes": {
                      "description": "Edit a three-d-image",
                      "properties": {
                        "name": {
                          "description": "Edit a three-d-image",
                          "type": "string"
                        },
                        "treatment_date": {
                          "description": "Edit a three-d-image",
                          "type": "string"
                        },
                        "device_id": {
                          "description": "Edit a three-d-image",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a three-d-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ThreeDImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a three-d-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tickets": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "List tickets",
        "description": "Returns a list of tickets based on the given filters",
        "operationId": "getTickets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'responsible', 'message_rooms'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tickets",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TicketResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tickets",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "tickets"
        ],
        "summary": "Create a ticket",
        "description": "Returns created ticket based on the given filters",
        "operationId": "postTicket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a ticket",
                  "properties": {
                    "attributes": {
                      "description": "Create a ticket",
                      "properties": {
                        "subject": {
                          "description": "Create a ticket",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "message_body",
            "in": "query",
            "description": "'message_body' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a ticket",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TicketResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a ticket",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tickets/latest": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "Get the latest ticket",
        "description": "Returns latest ticket based on the given filters",
        "operationId": "getLatestTicket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'responsible', 'message_rooms'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Get the latest ticket",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TicketResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Get the latest ticket",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tickets/{id}": {
      "get": {
        "tags": [
          "tickets"
        ],
        "summary": "Retrieve a ticket",
        "description": "Returns certain ticket based on the given filters",
        "operationId": "getTicket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'responsible', 'message_rooms'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a ticket",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TicketResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a ticket",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "tickets"
        ],
        "summary": "Edit a ticket",
        "description": "Returns edited ticket based on the given filters",
        "operationId": "patchTicket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a ticket",
                  "properties": {
                    "attributes": {
                      "description": "Edit a ticket",
                      "properties": {
                        "subject": {
                          "description": "Edit a ticket",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a ticket",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TicketResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a ticket",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tooth-sides": {
      "get": {
        "tags": [
          "tooth-sides"
        ],
        "summary": "List tooth-sides",
        "description": "Returns list of tooth sides based on the given filters",
        "operationId": "getToothSides",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tooth-sides",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothSideResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tooth-sides",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tooth-sides/{id}": {
      "get": {
        "tags": [
          "tooth-sides"
        ],
        "summary": "Retrieve a tooth-side",
        "description": "Returns certain tooth side based on the given filters",
        "operationId": "getToothSide",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a tooth-side",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothSideResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a tooth-side",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tooth-snapshots": {
      "get": {
        "tags": [
          "tooth-snapshots"
        ],
        "summary": "List tooth-snapshots",
        "description": "Returns list of tooth snapshots based on the given filters",
        "operationId": "getToothSnapshots",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'tooth'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tooth-snapshots",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothSnapshotResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tooth-snapshots",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/tooth-surface-snapshots": {
      "get": {
        "tags": [
          "tooth-surface-snapshots"
        ],
        "summary": "List tooth-surface-snapshots",
        "description": "Returns a list of tooth surface snapshots based on the given filters",
        "operationId": "getToothSurfaceSnapshot",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "treatment_plan_id",
            "in": "query",
            "description": "'treatment_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "date",
            "in": "query",
            "description": "'date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List tooth-surface-snapshots",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ToothSurfaceSnapshotResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List tooth-surface-snapshots",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "List transactions",
        "description": "Returns a list of transactions based on the given filters",
        "operationId": "getTransactions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'verification', 'account', 'cost_center'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "'account_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "account_number",
            "in": "query",
            "description": "'account_number' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "cost_center_ids",
            "in": "query",
            "description": "'cost_center_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List transactions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List transactions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Create a transaction",
        "description": "Returns created transaction based on the given filters",
        "operationId": "postTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a transaction",
                  "properties": {
                    "attributes": {
                      "description": "Create a transaction",
                      "properties": {
                        "account_id": {
                          "description": "Create a transaction",
                          "type": "number"
                        },
                        "verification_id": {
                          "description": "Create a transaction",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "cost_center_id",
            "in": "query",
            "description": "'cost_center_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a transaction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a transaction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/transactions/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Retrieve a transaction",
        "description": "Returns certain transaction based on the given filters",
        "operationId": "getTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'verification', 'account', 'cost_center'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a transaction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a transaction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "transactions"
        ],
        "summary": "Edit a transaction",
        "description": "Returns edited transaction based on the given filters",
        "operationId": "patchTransaction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a transaction",
                  "properties": {
                    "attributes": {
                      "description": "Edit a transaction",
                      "properties": {
                        "account_id": {
                          "description": "Edit a transaction",
                          "type": "number"
                        },
                        "verification_id": {
                          "description": "Edit a transaction",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a transaction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TransactionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a transaction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/translations": {
      "get": {
        "tags": [
          "translations"
        ],
        "summary": "List translations",
        "description": "Returns a list of translations based on the given filters",
        "operationId": "getTranslations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'locale'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "locale",
            "in": "query",
            "description": "'locale' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "frontend",
            "in": "query",
            "description": "'frontend' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "route_name",
            "in": "query",
            "description": "'route_name' field",
            "required": true,
            "type": "string",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List translations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TranslationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List translations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-article-report-rows": {
      "get": {
        "tags": [
          "treatment-article-report-rows"
        ],
        "summary": "List treatment-article-report-rows",
        "description": "Returns a list of treatment article report rows based on the given filters",
        "operationId": "getTreatmentArticleReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency', 'reimbursement_type'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-article-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentArticleReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-article-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-per-date-report-rows": {
      "get": {
        "tags": [
          "treatment-per-date-report-rows"
        ],
        "summary": "List treatment-per-date-report-rows",
        "description": "Returns a list of treatment per date report rows based on the given filters",
        "operationId": "getTreatmentPerDateReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-per-date-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPerDateReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-per-date-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-per-patient-article-report-rows": {
      "get": {
        "tags": [
          "treatment-per-patient-article-report-rows"
        ],
        "summary": "List treatment-per-patient-article-report-rows",
        "description": "Returns a list of treatment per patient article report rows based on the given filters",
        "operationId": "getTreatmentPerPatientArticleReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-per-patient-article-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPerPatientArticleReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-per-patient-article-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-per-patient-report-rows": {
      "get": {
        "tags": [
          "treatment-per-patient-report-rows"
        ],
        "summary": "List treatment-per-patient-report-rows",
        "description": "Returns list of treatment per patient report rows based on the given filters",
        "operationId": "getTreatmentPerPatientReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-per-patient-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPerPatientReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-per-patient-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-per-user-report-rows": {
      "get": {
        "tags": [
          "treatment-per-user-report-rows"
        ],
        "summary": "List treatment-per-user-report-rows",
        "description": "Returns a list of treatment per user report rows based on the given filters",
        "operationId": "getTreatmentPerUserReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-per-user-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPerUserReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-per-user-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-item-groups": {
      "get": {
        "tags": [
          "treatment-plan-item-groups"
        ],
        "summary": "List treatment-plan-item-groups",
        "description": "Returns list of treatment plan item groups based on the given filters",
        "operationId": "getTreatmentPlanItemGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_plan', 'treatment_plan_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "treatment_plan_id",
            "in": "query",
            "description": "'treatment_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "'order' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-plan-item-groups",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-plan-item-groups",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "treatment-plan-item-groups"
        ],
        "summary": "Create a treatment-plan-item-group",
        "description": "Returns created treatment plan item group based on the given filters",
        "operationId": "postTreatmentPlanItemGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "treatment_plan_item_ids",
            "in": "query",
            "description": "'treatment_plan_item_ids' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan-item-group",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment-plan-item-group",
                      "properties": {
                        "name": {
                          "description": "Create a treatment-plan-item-group",
                          "type": "string",
                          "example": "Test name"
                        },
                        "order": {
                          "description": "Create a treatment-plan-item-group",
                          "type": "number",
                          "example": 1
                        },
                        "treatment_plan_ids": {
                          "description": "Create a treatment-plan-item-group",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan-item-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment-plan-item-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-item-groups/{id}": {
      "get": {
        "tags": [
          "treatment-plan-item-groups"
        ],
        "summary": "Retrieve a treatment-plan-item-group",
        "description": "Returns certain treatment plan item group based on the given filters",
        "operationId": "getTreatmentPlanItemGroupById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_plan', 'treatment_plan_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a treatment-plan-item-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a treatment-plan-item-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "treatment-plan-item-groups"
        ],
        "summary": "Edit a treatment-plan-item-group",
        "description": "Returns edited treatment plan item group based on the given filters",
        "operationId": "patchTreatmentPlanItemGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan-item-group",
                  "properties": {
                    "attributes": {
                      "description": "Edit a treatment-plan-item-group",
                      "properties": {
                        "name": {
                          "description": "Edit a treatment-plan-item-group",
                          "type": "string",
                          "example": "Test name"
                        },
                        "order": {
                          "description": "Edit a treatment-plan-item-group",
                          "type": "number",
                          "example": 1
                        },
                        "treatment_plan_id": {
                          "description": "Edit a treatment-plan-item-group",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan-item-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a treatment-plan-item-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-items": {
      "get": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "List treatment-plan-items",
        "description": "Returns a list of treatment plan items based on the given filters",
        "operationId": "getTreatmentPlanItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_plan', 'treatment_plan_item_group', 'user', 'related_user', 'journal_diagnosis', 'free_card', 'treatment', 'price', 'county_council_price', 'vat_code', 'reimbursement_type', 'journal_entry', 'journal_validation', 'elements', 'claim_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "treatment_plan_id",
            "in": "query",
            "description": "'treatment_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-plan-items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-plan-items",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Create a treatment-plan-item",
        "description": "Returns created treatment plan item based on the given filters",
        "operationId": "postTreatmentPlanItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan-item",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment-plan-item",
                      "properties": {
                        "treatment_plan_id": {
                          "description": "Create a treatment-plan-item",
                          "type": "number",
                          "example": 33
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment-plan-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-items/{id}": {
      "get": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Retrieve a treatment-plan-item",
        "description": "Returns certain treatment plan item based on the given filters",
        "operationId": "getTreatmentPlanItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_plan', 'treatment_plan_item_group', 'user', 'related_user', 'journal_diagnosis', 'free_card', 'treatment', 'price', 'county_council_price', 'vat_code', 'reimbursement_type', 'journal_entry', 'journal_validation', 'elements', 'claim_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a treatment-plan-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a treatment-plan-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Edit a treatment-plan-item",
        "description": "Returns edited treatment plan item based on the given filters",
        "operationId": "patchTreatmentPlanItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan-item",
                  "properties": {
                    "attributes": {
                      "description": "Edit a treatment-plan-item",
                      "properties": {
                        "treatment_plan_id": {
                          "description": "Edit a treatment-plan-item",
                          "type": "number",
                          "example": 33
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a treatment-plan-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-items/{id}/create-journal-entry": {
      "post": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Create a journal-entry for a treatment-plan-item",
        "description": "Returns created journal entry for treatment plan item based on the given filters",
        "operationId": "postTreatmentPlanItemCreateJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_plan', 'treatment_plan_item_group', 'user', 'related_user', 'journal_diagnosis', 'free_card', 'treatment', 'price', 'county_council_price', 'vat_code', 'reimbursement_type', 'journal_entry', 'journal_validation', 'elements', 'claim_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a journal-entry for a treatment-plan-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a journal-entry for a treatment-plan-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-items/{id}/mark-done": {
      "post": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Mark a treatment-plan-item as done",
        "description": "Returns treatment plan item marked as done based on the given filters",
        "operationId": "postTreatmentPlanItemMarkAsDone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Mark a treatment-plan-item as done",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Mark a treatment-plan-item as done",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-items/{id}/unmark-done": {
      "post": {
        "tags": [
          "treatment-plan-items"
        ],
        "summary": "Mark a treatment-plan-item as not done",
        "description": "Returns unmarked done state for treatment plan item based on the given filters",
        "operationId": "postTreatmentPlanItemMarkAsDoneUnmark",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Mark a treatment-plan-item as not done",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Mark a treatment-plan-item as not done",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plan-versions": {
      "get": {
        "tags": [
          "treatment-plan-versions"
        ],
        "summary": "List treatment-plan-versions",
        "description": "Returns a list of treatment plan versions based on the given filters",
        "operationId": "getTreatmentPlanVersions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "treatment_plan_id",
            "in": "query",
            "description": "'treatment_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-plan-versions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlanVersionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-plan-versions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plans": {
      "get": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "List treatment-plans",
        "description": "Returns treatment plans based on the given filters",
        "operationId": "getTreatmentPlans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including additional data, like: 'patient', 'currency', 'signer', 'treatment_plan_item_groups', 'treatment_plan_items', 'reimbursement_rules', 'deductions', 'validate_claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field, possible options: 'treatment_plans.id', 'treatment_plans.name', 'treatment_plans.terms', 'patients.first_name', 'patients.last_name', 'patients.social_insurance_number', 'patients.patient_number', 'patients.id'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "latest",
            "in": "query",
            "description": "'latest' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "order",
            "in": "query",
            "description": "'order' field. 'asc' can be passed, as example.",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-plans",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-plans",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Create a treatment-plan",
        "description": "Returns created treatment plan based on the given filters",
        "operationId": "postTreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment-plan",
                      "properties": {
                        "patient_id": {
                          "description": "Create a treatment-plan",
                          "type": "string",
                          "example": "11"
                        },
                        "name": {
                          "description": "Create a treatment-plan",
                          "type": "string",
                          "example": "John"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "reimbursement_rules",
            "in": "query",
            "description": "'reimbursement_rules' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plans/{id}": {
      "get": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Retrieve a treatment-plan",
        "description": "Returns treatment plan based on the given filters",
        "operationId": "getTreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including additional data, like: 'patient', 'currency', 'signer', 'treatment_plan_item_groups', 'treatment_plan_items', 'reimbursement_rules', 'deductions', 'validate_claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Edit a treatment-plan",
        "description": "Returns edited treatment plan based on the given filters",
        "operationId": "patchTreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan",
                  "properties": {
                    "attributes": {
                      "description": "Edit a treatment-plan",
                      "properties": {
                        "patient_id": {
                          "description": "Edit a treatment-plan",
                          "type": "string",
                          "example": "11"
                        },
                        "name": {
                          "description": "Edit a treatment-plan",
                          "type": "string",
                          "example": "John"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plans/{id}/create-and-send-digital-mail": {
      "post": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Create and send digital mail for a treatment-plan",
        "description": "Returns created and sent digital mail for treatment plan based on the given filters",
        "operationId": "postCreateAndSendDigitalMailForTreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and send digital mail for a treatment-plan",
                  "properties": {
                    "attributes": {
                      "description": "Create and send digital mail for a treatment-plan",
                      "properties": {
                        "history_id": {
                          "description": "Create and send digital mail for a treatment-plan",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and send digital mail for a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and send digital mail for a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-plans/{id}/patient-approve": {
      "post": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Register a patient approval for a treatment-plan",
        "description": "Returns approved patient for treatment plan treatment plan based on the given filters",
        "operationId": "postApprovePatientForTreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "'history_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Register a patient approval for a treatment-plan",
                  "properties": {
                    "attributes": {
                      "description": "Register a patient approval for a treatment-plan",
                      "properties": {
                        "signing_password": {
                          "description": "Register a patient approval for a treatment-plan",
                          "type": "string"
                        },
                        "history_id": {
                          "description": "Register a patient approval for a treatment-plan",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Register a patient approval for a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Register a patient approval for a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-report-file-types": {
      "get": {
        "tags": [
          "treatment-report-file-types"
        ],
        "summary": "List treatment-report-file-types",
        "description": "Returns a list of treatment report file types based on the given filters",
        "operationId": "getTreatmentReportFileTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-report-file-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentReportFileTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-report-file-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-report-files": {
      "get": {
        "tags": [
          "treatment-report-files"
        ],
        "summary": "List treatment-report-files",
        "description": "Returns list of treatment report files based on the given filters",
        "operationId": "getTreatmentReportFiles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_report_file_type', 'patient', 'patient_tags', 'organization', 'api_responses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "treatment_report_file_type_ids",
            "in": "query",
            "description": "'treatment_report_file_type_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-report-files",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentReportFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-report-files",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "treatment-report-files"
        ],
        "summary": "Create a treatment-report-file",
        "description": "Returns created treatment report file based on the given filters",
        "operationId": "postTreatmentReportFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "from_patient_birth_date",
            "in": "query",
            "description": "'from_patient_birth_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_patient_birth_date",
            "in": "query",
            "description": "'to_patient_birth_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-report-file",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment-report-file",
                      "properties": {
                        "from_date": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "24-08-2024"
                        },
                        "to_date": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "26-09-2024"
                        },
                        "name": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "test_file.xml"
                        },
                        "type": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "text/plain"
                        },
                        "size_in_bytes": {
                          "description": "Create a treatment-report-file",
                          "type": "number"
                        },
                        "backup": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "backup_path": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_ctim": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_gid": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_ino": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_mode": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_mtim": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_size": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "st_uid": {
                          "description": "Create a treatment-report-file",
                          "type": "string"
                        },
                        "creation_date": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "2024-07-01T23:59:59+02:00"
                        },
                        "report_type": {
                          "description": "Create a treatment-report-file",
                          "type": "string",
                          "example": "libretto"
                        },
                        "only_include_reimbursed_examinations": {
                          "description": "Create a treatment-report-file",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-report-file",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentReportFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment-report-file",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-report-files/{id}": {
      "get": {
        "tags": [
          "treatment-report-files"
        ],
        "summary": "Retrieve a treatment-report-file",
        "description": "Returns certain treatment report file based on the given filters",
        "operationId": "getTreatmentReportFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'treatment_report_file_type', 'patient', 'patient_tags', 'organization', 'api_responses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a treatment-report-file",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentReportFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a treatment-report-file",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-report-rows": {
      "get": {
        "tags": [
          "treatment-report-rows"
        ],
        "summary": "List treatment-report-rows",
        "description": "Returns a list of treatment report rows based on the given filters",
        "operationId": "getTreatmentReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatment-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatment-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatment-selects": {
      "post": {
        "tags": [
          "treatment-selects"
        ],
        "summary": "Create a treatment-select",
        "description": "Returns created treatment select based on the given filters",
        "operationId": "postTreatmentSelect",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic', 'treatment', 'price', 'county_council_price', 'journal_diagnosis', 'county_council_patient_category', 'reimbursement_type', 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-select",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment-select",
                      "properties": {
                        "treatment_code": {
                          "description": "Create a treatment-select",
                          "type": "number",
                          "example": 1
                        },
                        "price_code": {
                          "description": "Create a treatment-select",
                          "type": "number",
                          "example": 2
                        },
                        "recommendation_position": {
                          "description": "Create a treatment-select",
                          "type": "number",
                          "example": 3
                        },
                        "treatment_id": {
                          "description": "Create a treatment-select",
                          "type": "number",
                          "example": 6
                        },
                        "elements": {
                          "description": "Create a treatment-select",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment-select",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentSelectResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment-select",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatments": {
      "get": {
        "tags": [
          "treatments"
        ],
        "summary": "List treatments",
        "description": "Returns a list of treatments based on the given filters",
        "operationId": "getTreatments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "elements",
            "in": "query",
            "description": "'elements' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List treatments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List treatments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "treatments"
        ],
        "summary": "Create a treatment",
        "description": "Returns created treatment based on the given filters",
        "operationId": "postTreatment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment",
                  "properties": {
                    "attributes": {
                      "description": "Create a treatment",
                      "properties": {
                        "text": {
                          "description": "Create a treatment",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a treatment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a treatment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/treatments/{id}": {
      "get": {
        "tags": [
          "treatments"
        ],
        "summary": "Retrieve a treatment",
        "description": "Returns certain treatment based on the given filters",
        "operationId": "getTreatment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a treatment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a treatment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "treatments"
        ],
        "summary": "Edit a treatment",
        "description": "Returns edited treatment based on the given filters",
        "operationId": "patchTreatment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment",
                  "properties": {
                    "attributes": {
                      "description": "Edit a treatment",
                      "properties": {
                        "text": {
                          "description": "Edit a treatment",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a treatment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a treatment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/ttreatment-plans/{id}/sign": {
      "post": {
        "tags": [
          "treatment-plans"
        ],
        "summary": "Sign a treatment-plan",
        "description": "Returns signed treatment plan treatment plan based on the given filters",
        "operationId": "postSignATreatmentPlan",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a treatment-plan",
                  "properties": {
                    "attributes": {
                      "description": "Sign a treatment-plan",
                      "properties": {
                        "signer_id": {
                          "description": "Sign a treatment-plan",
                          "type": "number",
                          "example": 123
                        },
                        "signing_password": {
                          "description": "Sign a treatment-plan",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign a treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/twain-data-sources": {
      "get": {
        "tags": [
          "twain-data-sources"
        ],
        "summary": "List twain-data-sources",
        "description": "Returns a list of twain data sources based on the given filters",
        "operationId": "getTwainDataSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'computer', 'computer_that_has_default', 'device', 'twain_data_source_json_properties'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "computer_id",
            "in": "query",
            "description": "'computer_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List twain-data-sources",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwainDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List twain-data-sources",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "twain-data-sources"
        ],
        "summary": "Create a twain-data-source",
        "description": "Returns created twain data source based on the given filters",
        "operationId": "postTwainDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'computer_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a twain-data-source",
                  "properties": {
                    "attributes": {
                      "description": "Create a twain-data-source",
                      "properties": {
                        "computer_id": {
                          "description": "Create a twain-data-source",
                          "type": "number",
                          "example": 123
                        },
                        "computer_that_has_default_id": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "data_source_manager_id": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "manufacturer_name": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "product_family": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "title": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "version_info": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "version_major": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "version_minor": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "type": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "noise_reduction_level": {
                          "description": "Create a twain-data-source",
                          "type": "number"
                        },
                        "path_to_files": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "monitor_folder_path": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "monitor_folder_extension": {
                          "description": "Create a twain-data-source",
                          "type": "string"
                        },
                        "keepalive": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "show_in_menu": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "show_sensor_ui": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "pass_parent_window_to_source": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "use_modal_mode": {
                          "description": "Create a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Create a twain-data-source",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "updated_at": {
                          "description": "Create a twain-data-source",
                          "type": "string",
                          "example": "2024-11-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a twain-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwainDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a twain-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/twain-data-sources/{id}": {
      "get": {
        "tags": [
          "twain-data-sources"
        ],
        "summary": "Retrieve a twain-data-source",
        "description": "Returns certain twain data source based on the given filters",
        "operationId": "getTwainDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'computer', 'computer_that_has_default', 'device', 'twain_data_source_json_properties'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a twain-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwainDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a twain-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "twain-data-sources"
        ],
        "summary": "Edit a twain-data-source",
        "description": "Returns edited twain data source based on the given filters",
        "operationId": "patchTwainDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'computer_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a twain-data-source",
                  "properties": {
                    "attributes": {
                      "description": "Edit a twain-data-source",
                      "properties": {
                        "data_source_manager_id": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "manufacturer_name": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "product_family": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "title": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "version_info": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "version_major": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "version_minor": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "type": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "noise_reduction_level": {
                          "description": "Edit a twain-data-source",
                          "type": "number"
                        },
                        "path_to_files": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "monitor_folder_path": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "monitor_folder_extension": {
                          "description": "Edit a twain-data-source",
                          "type": "string"
                        },
                        "keepalive": {
                          "description": "Edit a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "show_in_menu": {
                          "description": "Edit a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "show_sensor_ui": {
                          "description": "Edit a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "pass_parent_window_to_source": {
                          "description": "Edit a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "use_modal_mode": {
                          "description": "Edit a twain-data-source",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Edit a twain-data-source",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "updated_at": {
                          "description": "Edit a twain-data-source",
                          "type": "string",
                          "example": "2024-11-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a twain-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwainDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a twain-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/two-factor-authentication-setups": {
      "post": {
        "tags": [
          "two-factor-authentication-setups"
        ],
        "summary": "Create a two-factor-authentication-setup",
        "description": "Returns created two factor authentication setup based on the given filters",
        "operationId": "postTwoFactorAuthenticationSetup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a two-factor-authentication-setup",
                  "properties": {
                    "attributes": {
                      "description": "Create a two-factor-authentication-setup",
                      "properties": {
                        "code": {
                          "description": "Create a two-factor-authentication-setup",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Create a two-factor-authentication-setup",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a two-factor-authentication-setup",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwoFactorAuthenticationSetupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a two-factor-authentication-setup",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/two-factor-authentication-setups/{id}": {
      "get": {
        "tags": [
          "two-factor-authentication-setups"
        ],
        "summary": "Retrieve a two-factor-authentication-setup",
        "description": "Returns certain two factor authentication setup based on the given filters",
        "operationId": "getTwoFactorAuthenticationSetupById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a two-factor-authentication-setup",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwoFactorAuthenticationSetupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a two-factor-authentication-setup",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/two-factor-authentication-setups/{id}/activate": {
      "post": {
        "tags": [
          "two-factor-authentication-setups"
        ],
        "summary": "Activate a two-factor-authentication-setup",
        "description": "Returns activated two factor authentication setup based on the given filters",
        "operationId": "postTwoFactorAuthenticationSetupActivate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "one_time_password",
            "in": "query",
            "description": "'one_time_password' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Activate a two-factor-authentication-setup",
                  "properties": {
                    "attributes": {
                      "description": "Activate a two-factor-authentication-setup",
                      "properties": {
                        "one_time_password": {
                          "description": "Activate a two-factor-authentication-setup",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Activate a two-factor-authentication-setup",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TwoFactorAuthenticationSetupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Activate a two-factor-authentication-setup",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unassigned-received-remittance-report-rows": {
      "get": {
        "tags": [
          "unassigned-received-remittance-report-rows"
        ],
        "summary": "List unassigned-received-remittance-report-rows",
        "description": "Returns a list of unassigned received remittance report rows based on the given filters",
        "operationId": "getUnassignedReceivedRemittanceReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_group_id",
            "in": "query",
            "description": "'user_group_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unassigned-received-remittance-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnassignedReceivedRemittanceReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unassigned-received-remittance-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unbookkept-claim-payment-report-rows": {
      "get": {
        "tags": [
          "unbookkept-claim-payment-report-rows"
        ],
        "summary": "List unbookkept-claim-payment-report-rows",
        "description": "Returns a list of unbookkept claim payment report rows based on the given filters",
        "operationId": "getUnbookkeptClaimPaymentReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unbookkept-claim-payment-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnbookkeptClaimPaymentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unbookkept-claim-payment-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unbookkept-claim-report-rows": {
      "get": {
        "tags": [
          "unbookkept-claim-report-rows"
        ],
        "summary": "List unbookkept-claim-report-rows",
        "description": "Returns a list of unbookkept claim report rows based on the given filters",
        "operationId": "getUnbookkeptClaimReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unbookkept-claim-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnbookkeptClaimReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unbookkept-claim-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unbookkept-invoice-payment-report-rows": {
      "get": {
        "tags": [
          "unbookkept-invoice-payment-report-rows"
        ],
        "summary": "List unbookkept-invoice-payment-report-rows",
        "description": "Returns a list of unbookkept invoice payment report rows based on the given filters",
        "operationId": "getUnbookkeptInvoicePaymentReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unbookkept-invoice-payment-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnbookkeptInvoicePaymentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unbookkept-invoice-payment-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unbookkept-patient-invoice-report-rows": {
      "get": {
        "tags": [
          "unbookkept-patient-invoice-report-rows"
        ],
        "summary": "List unbookkept-patient-invoice-report-rows",
        "description": "Returns a list of unbookkept patient invoice report rows based on the given filters",
        "operationId": "getUnbookkeptPatientInvoiceReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unbookkept-patient-invoice-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnbookkeptPatientInvoiceReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unbookkept-patient-invoice-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unclaimed-journal-entry-report-rows": {
      "get": {
        "tags": [
          "unclaimed-journal-entry-report-rows"
        ],
        "summary": "List unclaimed-journal-entry-report-rows",
        "description": "Returns a list unclaimed journal entry report rows based on the given filters",
        "operationId": "getUnclaimedJournalEntryReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unclaimed-journal-entry-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnclaimedJournalEntryReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unclaimed-journal-entry-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/uninvoicable-lab-fee-per-user-report-rows": {
      "get": {
        "tags": [
          "uninvoicable-lab-fee-per-user-report-rows"
        ],
        "summary": "List uninvoicable-lab-fee-per-user-report-rows",
        "description": "Returns a list of uninvoicable lab fee per user report rows based on the given filters",
        "operationId": "getUninvoicableLabFeePerUserReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency', 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List uninvoicable-lab-fee-per-user-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UninvoicableLabFeePerUserReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List uninvoicable-lab-fee-per-user-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/uninvoiced-journal-entry-report-rows": {
      "get": {
        "tags": [
          "uninvoiced-journal-entry-report-rows"
        ],
        "summary": "List uninvoiced-journal-entry-report-rows",
        "description": "Returns a list of uninvoiced journal entry report rows based on the given filters",
        "operationId": "getUninvoicedJournalEntryReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List uninvoiced-journal-entry-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/JournalEntryReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List uninvoiced-journal-entry-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unread-dental-lab-order-report-rows": {
      "get": {
        "tags": [
          "unread-dental-lab-order-report-rows"
        ],
        "summary": "List unread-dental-lab-order-report-rows",
        "description": "Returns a list of unread dental lab order report rows based on the given filters",
        "operationId": "getUnreadDentalLabOrderReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unread-dental-lab-order-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnreadDentalLabOrderReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unread-dental-lab-order-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unread-received-remittance-report-rows": {
      "get": {
        "tags": [
          "unread-received-remittance-report-rows"
        ],
        "summary": "List unread-received-remittance-report-rows",
        "description": "Returns a list of unread received remittance report rows based on the given filters",
        "operationId": "getUnreadReceivedRemittanceReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_group_id",
            "in": "query",
            "description": "'user_group_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unread-received-remittance-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnreadReceivedRemittanceReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unread-received-remittance-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unread-sent-remittance-report-rows": {
      "get": {
        "tags": [
          "unread-sent-remittance-report-rows"
        ],
        "summary": "List unread-sent-remittance-report-rows",
        "description": "Returns a list of unread sent remittance report rows based on the given filters",
        "operationId": "getUnreadSentRemittanceReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_group_id",
            "in": "query",
            "description": "'user_group_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unread-sent-remittance-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnreadSentRemittanceReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unread-sent-remittance-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/unsigned-journal-entry-report-rows": {
      "get": {
        "tags": [
          "unsigned-journal-entry-report-rows"
        ],
        "summary": "List unsigned-journal-entry-report-rows",
        "description": "Returns a list of unsigned journal entry report rows based on the given filters",
        "operationId": "getUnsignedJournalEntryReportRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List unsigned-journal-entry-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UnsignedJournalEntryReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List unsigned-journal-entry-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinic-defaults": {
      "get": {
        "tags": [
          "user-at-clinic-defaults"
        ],
        "summary": "List user-at-clinic-defaults",
        "description": "Returns a list of user at clinic defaults based on the given filters",
        "operationId": "getUserAtClinicsDefaults",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List user-at-clinic-defaults",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicDefaultsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List user-at-clinic-defaults",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-at-clinic-defaults"
        ],
        "summary": "Create a user-at-clinic-default",
        "description": "Returns created user at clinic default based on the given filters",
        "operationId": "postUserAtClinicsDefault",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'clinic_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic-default",
                  "properties": {
                    "attributes": {
                      "description": "Create a user-at-clinic-default",
                      "properties": {
                        "clinic_id": {
                          "description": "Create a user-at-clinic-default",
                          "type": "number",
                          "example": 123
                        },
                        "enable_shortcuts": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": false
                        },
                        "confirm_booking_time_changing": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_email_invitation": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_sms_invitation": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_sms_reminder": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_snail_mail_invitation": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_sms_sender_id": {
                          "description": "Create a user-at-clinic-default",
                          "type": "string",
                          "example": "NoReply"
                        },
                        "display_patient_names": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "display_recurring_booking_text": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "display_all_parked_bookings": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "enable_done": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_to_recurring_patient": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "hidden_in_online_booking": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "reviews_deactivated": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_invoice_email": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_treatment_plan_terms": {
                          "description": "Create a user-at-clinic-default",
                          "type": "string",
                          "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
                        },
                        "sign_all_entries": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "get_reimbursement_data_on_patient_select": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "recommend_diagnoses": {
                          "description": "Create a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic-default",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicDefaultsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user-at-clinic-default",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinic-defaults/{id}": {
      "get": {
        "tags": [
          "user-at-clinic-defaults"
        ],
        "summary": "Retrieve a user-at-clinic-default",
        "description": "Returns certain user at clinic default based on the given filters",
        "operationId": "getUserAtClinicsDefault",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-at-clinic-default",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicDefaultsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user-at-clinic-default",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-at-clinic-defaults"
        ],
        "summary": "Edit a user-at-clinic-default",
        "description": "Returns edited user at clinic default based on the given filters",
        "operationId": "patchUserAtClinicsDefault",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'clinic_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-at-clinic-default",
                  "properties": {
                    "attributes": {
                      "description": "Edit a user-at-clinic-default",
                      "properties": {
                        "clinic_id": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "number",
                          "example": 123
                        },
                        "enable_shortcuts": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": false
                        },
                        "confirm_booking_time_changing": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_email_invitation": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_sms_invitation": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_sms_reminder": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_snail_mail_invitation": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_sms_sender_id": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "string",
                          "example": "NoReply"
                        },
                        "display_patient_names": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "display_recurring_booking_text": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "display_all_parked_bookings": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "enable_done": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_to_recurring_patient": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "hidden_in_online_booking": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "reviews_deactivated": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "auto_include_invoice_email": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "default_treatment_plan_terms": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "string",
                          "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
                        },
                        "sign_all_entries": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "get_reimbursement_data_on_patient_select": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        },
                        "recommend_diagnoses": {
                          "description": "Edit a user-at-clinic-default",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-at-clinic-default",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicDefaultsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a user-at-clinic-default",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinic-seeds": {
      "post": {
        "tags": [
          "user-at-clinic-seeds"
        ],
        "summary": "Create a user-at-clinic-seed",
        "description": "Returns created user at clinic seed based on the given filters",
        "operationId": "postUserAtClinicSeed",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinics', 'roles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic-seed",
                  "properties": {
                    "attributes": {
                      "description": "Create a user-at-clinic-seed",
                      "properties": {
                        "property": {
                          "description": "Create a user-at-clinic-seed",
                          "type": "string"
                        },
                        "value": {
                          "description": "Create a user-at-clinic-seed",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic-seed",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicSeedResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user-at-clinic-seed",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinics": {
      "get": {
        "tags": [
          "user-at-clinics"
        ],
        "summary": "List user-at-clinics",
        "description": "Returns list of users at clinics based on the given filters",
        "operationId": "getUserAtClinics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "has_access",
            "in": "query",
            "description": "'has_access' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List user-at-clinics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List user-at-clinics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-at-clinics"
        ],
        "summary": "Create a user-at-clinic",
        "description": "Returns created user at clinics based on the given filters",
        "operationId": "postUserAtClinics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic",
                  "properties": {
                    "attributes": {
                      "description": "Create a user-at-clinic",
                      "properties": {
                        "clinic_id": {
                          "description": "Create a user-at-clinic",
                          "type": "integer",
                          "example": 5771
                        },
                        "user_id": {
                          "description": "Create a user-at-clinic",
                          "type": "integer",
                          "example": 11223
                        },
                        "organizations_authorized_for_invoicing": {
                          "description": "Create a user-at-clinic",
                          "type": "string"
                        },
                        "default_organization_id": {
                          "description": "Create a user-at-clinic",
                          "type": "integer",
                          "example": 3331
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "unwanted_notification_types",
            "in": "query",
            "description": "'unwanted_notification_types' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "selected_clinics",
            "in": "query",
            "description": "'selected_clinics' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "selected_users",
            "in": "query",
            "description": "'selected_users' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "selected_rooms",
            "in": "query",
            "description": "'selected_rooms' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "selected_resources",
            "in": "query",
            "description": "'selected_resources' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv"
          },
          {
            "name": "display_weekends",
            "in": "query",
            "description": "'display_weekends' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "name": "hidden_weekdays",
            "in": "query",
            "description": "'hidden_weekdays' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinics/current": {
      "get": {
        "tags": [
          "user-at-clinics"
        ],
        "summary": "Retrieve the current user-at-clinic",
        "description": "Returns a the current user at clinics based on the given filters",
        "operationId": "getCurrentUserAtClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current user-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current user-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-at-clinics/{id}": {
      "get": {
        "tags": [
          "user-at-clinics"
        ],
        "summary": "Retrieve a user-at-clinic",
        "description": "Returns certain user at clinics based on the given filters",
        "operationId": "getUserAtClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'user', 'user_group', 'default_locale', 'default_journal_pharmacy', 'default_room', 'default_booking_type', 'default_reimbursement_type', 'default_calendar_view', 'default_prescription_fee_price', 'default_failed_to_appear_price', 'default_late_cancellation_price', 'default_state_price_list', 'organizations_authorized_for_invoicing', 'default_organization', 'user_procedure_at_clinics', 'default_user_procedure_at_clinic', 'permission_policies', 'unwanted_notification_types', 'dashboard_reports', 'selected_clinics', 'selected_users', 'selected_rooms', 'selected_resources', 'hidden_weekdays', 'credentials', 'gui_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-at-clinics"
        ],
        "summary": "Edit a user-at-clinic",
        "description": "Returns edited user at clinics based on the given filters",
        "operationId": "patchUserAtClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-at-clinic",
                  "properties": {
                    "attributes": {
                      "description": "Edit a user-at-clinic",
                      "properties": {
                        "clinic_id": {
                          "description": "Edit a user-at-clinic",
                          "type": "integer",
                          "example": 5771
                        },
                        "user_id": {
                          "description": "Edit a user-at-clinic",
                          "type": "integer",
                          "example": 11223
                        },
                        "organizations_authorized_for_invoicing": {
                          "description": "Edit a user-at-clinic",
                          "type": "string"
                        },
                        "default_organization_id": {
                          "description": "Edit a user-at-clinic",
                          "type": "integer",
                          "example": 3331
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserAtClinicsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a user-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-groups": {
      "get": {
        "tags": [
          "user-groups"
        ],
        "summary": "List user-groups",
        "description": "Returns a list of user groups based on the given filters",
        "operationId": "getUserGroups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'user_at_clinics', 'received_remittances'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List user-groups",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List user-groups",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-groups"
        ],
        "summary": "Create a user-group",
        "description": "Returns created user group based on the given filters",
        "operationId": "postUserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-group",
                  "properties": {
                    "attributes": {
                      "description": "Create a user-group",
                      "properties": {
                        "clinic_id": {
                          "description": "Create a user-group",
                          "type": "number",
                          "example": 811
                        },
                        "name": {
                          "description": "Create a user-group",
                          "type": "string",
                          "example": "Test name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-groups/{id}": {
      "get": {
        "tags": [
          "user-groups"
        ],
        "summary": "Retrieve a user-group",
        "description": "Returns certain user group based on the given filters",
        "operationId": "getUserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-group",
                  "properties": {
                    "attributes": {
                      "description": "Retrieve a user-group",
                      "properties": {
                        "clinic_id": {
                          "description": "Retrieve a user-group",
                          "type": "number",
                          "example": 811
                        },
                        "name": {
                          "description": "Retrieve a user-group",
                          "type": "string",
                          "example": "Test name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-groups"
        ],
        "summary": "Edit a user-group",
        "description": "Returns edited user group based on the given filters",
        "operationId": "patchUserGroup",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-group",
                  "properties": {
                    "attributes": {
                      "description": "Edit a user-group",
                      "properties": {
                        "clinic_id": {
                          "description": "Edit a user-group",
                          "type": "number",
                          "example": 811
                        },
                        "name": {
                          "description": "Edit a user-group",
                          "type": "string",
                          "example": "Test name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-group",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserGroupResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a user-group",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-images/upload": {
      "post": {
        "tags": [
          "user-images"
        ],
        "summary": "Upload a user-image",
        "description": "Returns uploaded user image based on the given filters",
        "operationId": "postUploadUserImageDoc",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Field for file upload",
            "required": true,
            "type": "string",
            "format": "binary"
          },
          {
            "name": "user_id",
            "in": "formData",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Upload a user-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Upload a user-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-images/{id}": {
      "get": {
        "tags": [
          "user-images"
        ],
        "summary": "Retrieve a user-image",
        "description": "Returns certain user image based on the given filters",
        "operationId": "getUserImageById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "user-images"
        ],
        "summary": "Delete a user-image",
        "description": "Returns result of deletion for user-image based on the given filters",
        "operationId": "deleteUserImageByIdDestroyDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "user_image_id",
            "in": "query",
            "description": "'user_image_id' field",
            "required": true,
            "type": "number",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a user-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a user-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-procedure-at-clinics": {
      "get": {
        "tags": [
          "user-procedure-at-clinics"
        ],
        "summary": "List user-procedure-at-clinics",
        "description": "Returns list of user procedure at clinics based on the given filters",
        "operationId": "getUserProcedureAtClinics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_at_clinic_id",
            "in": "query",
            "description": "'user_at_clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'user_at_clinic_with_default_user_procedure_at_clinic', 'procedure', 'booking_type', 'booking_preferences'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List user-procedure-at-clinics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProcedureAtClinicDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List user-procedure-at-clinics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "user-procedure-at-clinics"
        ],
        "summary": "Create a user-procedure-at-clinic",
        "description": "Returns created user procedure at clinics based on the given filters",
        "operationId": "postUserProcedureAtClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-procedure-at-clinic",
                  "properties": {
                    "attributes": {
                      "description": "Create a user-procedure-at-clinic",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Create a user-procedure-at-clinic",
                          "type": "number",
                          "example": 33
                        },
                        "frequency_in_minutes": {
                          "description": "Create a user-procedure-at-clinic",
                          "type": "number",
                          "example": 10
                        },
                        "duration_in_minutes_existing_patient": {
                          "description": "Create a user-procedure-at-clinic",
                          "type": "number",
                          "example": 20
                        },
                        "duration_in_minutes_new_patient": {
                          "description": "Create a user-procedure-at-clinic",
                          "type": "number",
                          "example": 30
                        },
                        "minimum_age": {
                          "description": "Create a user-procedure-at-clinic",
                          "type": "number",
                          "example": 30
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user-procedure-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProcedureAtClinicDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user-procedure-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/user-procedure-at-clinics/{id}": {
      "get": {
        "tags": [
          "user-procedure-at-clinics"
        ],
        "summary": "Retrieve a user-procedure-at-clinic",
        "description": "Returns certain user procedure at clinics based on the given filters",
        "operationId": "getUserProcedureAtClinicById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'user_at_clinic_with_default_user_procedure_at_clinic', 'procedure', 'booking_type', 'booking_preferences'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user-procedure-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProcedureAtClinicDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user-procedure-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "user-procedure-at-clinics"
        ],
        "summary": "Edit a user-procedure-at-clinic",
        "description": "Returns edited user procedure at clinics based on the given filters",
        "operationId": "patchUserProcedureAtClinicById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-procedure-at-clinic",
                  "properties": {
                    "attributes": {
                      "description": "Edit a user-procedure-at-clinic",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Edit a user-procedure-at-clinic",
                          "type": "number",
                          "example": 33
                        },
                        "frequency_in_minutes": {
                          "description": "Edit a user-procedure-at-clinic",
                          "type": "number",
                          "example": 10
                        },
                        "duration_in_minutes_existing_patient": {
                          "description": "Edit a user-procedure-at-clinic",
                          "type": "number",
                          "example": 20
                        },
                        "duration_in_minutes_new_patient": {
                          "description": "Edit a user-procedure-at-clinic",
                          "type": "number",
                          "example": 30
                        },
                        "minimum_age": {
                          "description": "Edit a user-procedure-at-clinic",
                          "type": "number",
                          "example": 30
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user-procedure-at-clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserProcedureAtClinicDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a user-procedure-at-clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List users",
        "description": "Returns a list of users based on the given filters",
        "operationId": "getUsers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "accepts_referral",
            "in": "query",
            "description": "'accepts_referral' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List users",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List users",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create a user",
        "description": "Returns created user based on the given filters",
        "operationId": "postUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user",
                  "properties": {
                    "attributes": {
                      "description": "Create a user",
                      "properties": {
                        "role_id": {
                          "description": "Create a user",
                          "type": "number",
                          "example": 23
                        },
                        "country_id": {
                          "description": "Create a user",
                          "type": "number",
                          "example": 123
                        },
                        "eprescription_role_id": {
                          "description": "Create a user",
                          "type": "number",
                          "example": 123
                        },
                        "specialities": {
                          "description": "Create a user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "languages": {
                          "description": "Create a user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maiden_name": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "Forester"
                        },
                        "social_security_number": {
                          "description": "Create a user",
                          "type": "string"
                        },
                        "gender": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "male"
                        },
                        "address_1": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "Testgatan"
                        },
                        "address_2": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "Testgatan 2"
                        },
                        "city": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "postal_code": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "01003"
                        },
                        "municipality": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "1995-11-10T00:00:00+01:00"
                        },
                        "passport_number": {
                          "description": "Create a user",
                          "type": "string"
                        },
                        "phone_number_cell": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "phone_number_home": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "phone_number_work": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "fax_number": {
                          "description": "Create a user",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a user",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "2017-09-11T14:51:52+02:00"
                        },
                        "updated_at": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "2024-09-10T09:32:14+02:00"
                        },
                        "prescriber_code": {
                          "description": "Create a user",
                          "type": "string"
                        },
                        "professional_statement": {
                          "description": "Create a user",
                          "type": "string"
                        },
                        "title": {
                          "description": "Create a user",
                          "type": "string",
                          "example": "Supportmedarbetare, Muntra"
                        },
                        "hide_reviews": {
                          "description": "Create a user",
                          "type": "boolean",
                          "example": true
                        },
                        "hide_reviews_discreetly": {
                          "description": "Create a user",
                          "type": "boolean",
                          "example": true
                        },
                        "number_of_reviews": {
                          "description": "Create a user",
                          "type": "number",
                          "example": 4.5
                        },
                        "overall_rating": {
                          "description": "Create a user",
                          "type": "number",
                          "example": 4.5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a user",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve the current user",
        "description": "Retrieve the current user based on the given filters",
        "operationId": "getUserCurrent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current user",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Retrieve a user",
        "description": "Returns certain user based on the given filters",
        "operationId": "getUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'role', 'eprescription_role', 'specialities', 'educations', 'languages', 'clinics', 'last_selected_clinic', 'clinics_where_all_user', 'preferences', 'user_at_clinics', 'change_logs', 'user_images', 'default_user_image', 'signed_received_remittances', 'signed_sent_remittances', 'received_remittances', 'sent_remittances', 'message_sender', 'notifications', 'tasks', 'two_factor_authentication_setup', 'email_addresses', 'default_email_address'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a user",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Edit a user",
        "description": "Returns edited user based on the given filters",
        "operationId": "patchUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user",
                  "properties": {
                    "attributes": {
                      "description": "Edit a user",
                      "properties": {
                        "role_id": {
                          "description": "Edit a user",
                          "type": "number",
                          "example": 23
                        },
                        "country_id": {
                          "description": "Edit a user",
                          "type": "number",
                          "example": 123
                        },
                        "eprescription_role_id": {
                          "description": "Edit a user",
                          "type": "number",
                          "example": 123
                        },
                        "specialities": {
                          "description": "Edit a user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "languages": {
                          "description": "Edit a user",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "maiden_name": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "Forester"
                        },
                        "address_1": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "Testgatan"
                        },
                        "address_2": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "Testgatan 2"
                        },
                        "city": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "postal_code": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "01003"
                        },
                        "municipality": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "1995-11-10T00:00:00+01:00"
                        },
                        "passport_number": {
                          "description": "Edit a user",
                          "type": "string"
                        },
                        "phone_number_cell": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "phone_number_home": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "phone_number_work": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "+46734100450"
                        },
                        "fax_number": {
                          "description": "Edit a user",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a user",
                          "type": "boolean",
                          "example": true
                        },
                        "created_at": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "2017-09-11T14:51:52+02:00"
                        },
                        "updated_at": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "2024-09-10T09:32:14+02:00"
                        },
                        "prescriber_code": {
                          "description": "Edit a user",
                          "type": "string"
                        },
                        "professional_statement": {
                          "description": "Edit a user",
                          "type": "string"
                        },
                        "title": {
                          "description": "Edit a user",
                          "type": "string",
                          "example": "Supportmedarbetare, Muntra"
                        },
                        "hide_reviews": {
                          "description": "Edit a user",
                          "type": "boolean",
                          "example": true
                        },
                        "hide_reviews_discreetly": {
                          "description": "Edit a user",
                          "type": "boolean",
                          "example": true
                        },
                        "number_of_reviews": {
                          "description": "Edit a user",
                          "type": "number",
                          "example": 4.5
                        },
                        "overall_rating": {
                          "description": "Edit a user",
                          "type": "number",
                          "example": 4.5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a user",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a user",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/{id}/add-prescriber-code": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add prescriber code",
        "description": "Add prescriber code to user",
        "operationId": "addPrescriberCode",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "prescriber_code",
            "in": "query",
            "description": "'prescriber_code' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Add prescriber code",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Add prescriber code",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/{id}/remove-from-clinic": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Remove user from clinic",
        "description": "Returns removed user from clinic based on the given filters",
        "operationId": "postUserRemoveFromClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove user from clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove user from clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/{id}/remove-from-current-clinic": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Remove user from current clinic",
        "description": "Returns removed user from current clinic based on the given filters",
        "operationId": "postUserRemoveFromCurrentClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove user from current clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove user from current clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/users/{id}/remove-user-at-clinic": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Remove user at clinic",
        "description": "Returns removed user at clinic based on the given filters",
        "operationId": "postUserRemoveAtClinic",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove user at clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove user at clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/validate-claims": {
      "get": {
        "tags": [
          "validate-claims"
        ],
        "summary": "List validate-claims",
        "description": "Returns list of validated claims based on the given filters",
        "operationId": "getValidateClaims",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'patient', 'stb_disease', 'used_new_atb', 'used_old_atb', 'reimbursement_rules', 'treatment_plan', 'claim_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "treatment_plan_id",
            "in": "query",
            "description": "'treatment_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "validated",
            "in": "query",
            "description": "'validated' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List validate-claims",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidateClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List validate-claims",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "validate-claims"
        ],
        "summary": "Create a validate-claim",
        "description": "Returns created validated claim based on the given filters",
        "operationId": "postValidateClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'patient', 'stb_disease', 'used_new_atb', 'used_old_atb', 'reimbursement_rules', 'treatment_plan', 'claim_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a validate-claim",
                  "properties": {
                    "attributes": {
                      "description": "Create a validate-claim",
                      "properties": {
                        "FK_validate_claim_status": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "care_provider_org_number": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Create a validate-claim",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Create a validate-claim",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Create a validate-claim",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Create a validate-claim",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Create a validate-claim",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Create a validate-claim",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Create a validate-claim",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a validate-claim",
                          "type": "boolean",
                          "example": true
                        },
                        "organization_id": {
                          "description": "Create a validate-claim",
                          "type": "number",
                          "example": 5
                        },
                        "patient_id": {
                          "description": "Create a validate-claim",
                          "type": "number",
                          "example": 6
                        },
                        "treatment_plan_item_ids": {
                          "description": "Create a validate-claim",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a validate-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidateClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a validate-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/validate-claims/{id}": {
      "get": {
        "tags": [
          "validate-claims"
        ],
        "summary": "Retrieve a validate-claim",
        "description": "Returns certain validated claim based on the given filters",
        "operationId": "getValidateClaimById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'patient', 'stb_disease', 'used_new_atb', 'used_old_atb', 'reimbursement_rules', 'treatment_plan', 'claim_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a validate-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidateClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a validate-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "validate-claims"
        ],
        "summary": "Edit a validate-claim",
        "description": "Returns edited validated claim based on the given filters",
        "operationId": "patchValidateClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a validate-claim",
                  "properties": {
                    "attributes": {
                      "description": "Edit a validate-claim",
                      "properties": {
                        "FK_validate_claim_status": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "FK_validate_claim_amount": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "care_provider_org_number": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Edit a validate-claim",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Edit a validate-claim",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Edit a validate-claim",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Edit a validate-claim",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Edit a validate-claim",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Edit a validate-claim",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Edit a validate-claim",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a validate-claim",
                          "type": "boolean",
                          "example": true
                        },
                        "organization_id": {
                          "description": "Edit a validate-claim",
                          "type": "number",
                          "example": 5
                        },
                        "patient_id": {
                          "description": "Edit a validate-claim",
                          "type": "number",
                          "example": 6
                        },
                        "used_new_atb_id": {
                          "description": "Edit a validate-claim",
                          "type": "number",
                          "example": 7
                        },
                        "used_old_atb_id": {
                          "description": "Edit a validate-claim",
                          "type": "number",
                          "example": 8
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a validate-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidateClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a validate-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/validate-claims/{id}/validate": {
      "post": {
        "tags": [
          "validate-claims"
        ],
        "summary": "Validate a validate-claim",
        "description": "Returns validated claim based on the given filters",
        "operationId": "postValidateClaimValidateMethod",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'patient', 'stb_disease', 'used_new_atb', 'used_old_atb', 'reimbursement_rules', 'treatment_plan', 'claim_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Validate a validate-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ValidateClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Validate a validate-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/vat-codes": {
      "get": {
        "tags": [
          "vat-codes"
        ],
        "summary": "List vat-codes",
        "description": "Returns a list of vat codes based on the given filters",
        "operationId": "getVatCodes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List vat-codes",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VatCodeWebhookRequest"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List vat-codes",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verification-serie-types": {
      "get": {
        "tags": [
          "verification-serie-types"
        ],
        "summary": "List verification-serie-types",
        "description": "Returns a list of verification serie types based on the given filters",
        "operationId": "getVerificationSerieTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'verification_serie'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "name",
            "in": "query",
            "description": "'name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List verification-serie-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List verification-serie-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "verification-serie-types"
        ],
        "summary": "Edit a verification-serie-type",
        "description": "Returns edited verification serie type based on the given filters",
        "operationId": "patchVerificationSerieTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification-serie-type",
                  "properties": {
                    "attributes": {
                      "description": "Edit a verification-serie-type",
                      "properties": {
                        "name": {
                          "description": "Edit a verification-serie-type",
                          "type": "string",
                          "example": "CASH INVOICE"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification-serie-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a verification-serie-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verification-series": {
      "get": {
        "tags": [
          "verification-series"
        ],
        "summary": "List verification-series",
        "description": "Returns a list of verification series based on the given filters",
        "operationId": "getVerificationSeries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'fiscal_year', 'accounting_templates', 'verification_serie_types', 'verifications'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "code",
            "in": "query",
            "description": "'code' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "label",
            "in": "query",
            "description": "'label' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "manual_accountcoding",
            "in": "query",
            "description": "'manual_accountcoding' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List verification-series",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List verification-series",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "verification-series"
        ],
        "summary": "Create a verification-serie",
        "description": "Returns created verification serie based on the given filters",
        "operationId": "postVerificationSerie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a verification-serie",
                  "properties": {
                    "attributes": {
                      "description": "Create a verification-serie",
                      "properties": {
                        "organization_id": {
                          "description": "Create a verification-serie",
                          "type": "number",
                          "example": 799
                        },
                        "code": {
                          "description": "Create a verification-serie",
                          "type": "string"
                        },
                        "label": {
                          "description": "Create a verification-serie",
                          "type": "string"
                        },
                        "fiscal_year_id": {
                          "description": "Create a verification-serie",
                          "type": "string"
                        },
                        "manual_accountcoding": {
                          "description": "Create a verification-serie",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a verification-serie",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a verification-serie",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verification-series/{id}": {
      "get": {
        "tags": [
          "verification-series"
        ],
        "summary": "Retrieve a verification-serie",
        "description": "Returns certain verification serie based on the given filters",
        "operationId": "getVerificationSerie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'fiscal_year', 'accounting_templates', 'verification_serie_types', 'verifications'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a verification-serie",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a verification-serie",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "verification-series"
        ],
        "summary": "Edit a verification-serie",
        "description": "Returns edited verification serie based on the given filters",
        "operationId": "patchVerificationSerie",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification-serie",
                  "properties": {
                    "attributes": {
                      "description": "Edit a verification-serie",
                      "properties": {
                        "organization_id": {
                          "description": "Edit a verification-serie",
                          "type": "number",
                          "example": 799
                        },
                        "code": {
                          "description": "Edit a verification-serie",
                          "type": "string"
                        },
                        "label": {
                          "description": "Edit a verification-serie",
                          "type": "string"
                        },
                        "fiscal_year_id": {
                          "description": "Edit a verification-serie",
                          "type": "string"
                        },
                        "manual_accountcoding": {
                          "description": "Edit a verification-serie",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification-serie",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationSerieResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a verification-serie",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verification-types": {
      "get": {
        "tags": [
          "verification-types"
        ],
        "summary": "List verification-types",
        "description": "Returns a list of verification-types based on the given filters",
        "operationId": "getVerificationTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List verification-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List verification-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verifications": {
      "get": {
        "tags": [
          "verifications"
        ],
        "summary": "List verifications",
        "description": "Returns a list of verifications based on the given filters",
        "operationId": "getVerifications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'currency', 'verification_serie', 'verification_type', 'deleted_by_verification', 'deletes_verification', 'transactions'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "number",
            "default": ""
          },
          {
            "name": "from",
            "in": "query",
            "description": "'from' field",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "to",
            "in": "query",
            "description": "'to' field",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": true,
            "type": "boolean",
            "default": ""
          },
          {
            "name": "account_number",
            "in": "query",
            "description": "'account_number' field",
            "required": true,
            "type": "string",
            "default": ""
          },
          {
            "name": "cost_center_ids",
            "in": "query",
            "description": "'cost_center_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List verifications",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List verifications",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "verifications"
        ],
        "summary": "Create a verification",
        "description": "Returns created verifications based on the given filters",
        "operationId": "postVerification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a verification",
                  "properties": {
                    "attributes": {
                      "description": "Create a verification",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Create a verification",
                          "type": "number",
                          "example": 1
                        },
                        "verification_serie_id": {
                          "description": "Create a verification",
                          "type": "number",
                          "example": 22
                        },
                        "verification_date": {
                          "description": "Create a verification",
                          "type": "string",
                          "example": "2024-08-01 11:35:33"
                        },
                        "verification_text": {
                          "description": "Create a verification",
                          "type": "string",
                          "example": "Test text"
                        },
                        "verification_number": {
                          "description": "Create a verification",
                          "type": "string",
                          "example": "Test text"
                        },
                        "transactions": {
                          "description": "Create a verification",
                          "type": "number"
                        },
                        "created_at": {
                          "description": "Create a verification",
                          "type": "string",
                          "example": "2025-11-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a verification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a verification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verifications/{id}": {
      "get": {
        "tags": [
          "verifications"
        ],
        "summary": "Retrieve a verification",
        "description": "Returns certain verification based on the given filters",
        "operationId": "getVerification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'currency', 'verification_serie', 'verification_type', 'deleted_by_verification', 'deletes_verification', 'transactions'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a verification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a verification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "verifications"
        ],
        "summary": "Edit a verification",
        "description": "Returns edited verification based on the given filters",
        "operationId": "patchVerification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification",
                  "properties": {
                    "attributes": {
                      "description": "Edit a verification",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Edit a verification",
                          "type": "number",
                          "example": 1
                        },
                        "verification_serie_id": {
                          "description": "Edit a verification",
                          "type": "number",
                          "example": 22
                        },
                        "verification_date": {
                          "description": "Edit a verification",
                          "type": "string",
                          "example": "2024-08-01 11:35:33"
                        },
                        "verification_text": {
                          "description": "Edit a verification",
                          "type": "string",
                          "example": "Test text"
                        },
                        "verification_number": {
                          "description": "Edit a verification",
                          "type": "string",
                          "example": "Test text"
                        },
                        "created_at": {
                          "description": "Edit a verification",
                          "type": "string",
                          "example": "2025-11-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a verification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a verification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/verifications/{id}/delete": {
      "post": {
        "tags": [
          "verifications"
        ],
        "summary": "Delete a verification",
        "description": "Returns deleted verification based on the given filters",
        "operationId": "postVerificationDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a verification",
                  "properties": {
                    "attributes": {
                      "description": "Delete a verification",
                      "properties": {
                        "verification_date": {
                          "description": "Delete a verification",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a verification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VerificationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a verification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/version-logs": {
      "get": {
        "tags": [
          "version-logs"
        ],
        "summary": "List version-logs",
        "description": "Returns list of version logs based on the given filters",
        "operationId": "getVersionLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List version-logs",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VersionLogResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List version-logs",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/version-logs/{id}": {
      "get": {
        "tags": [
          "version-logs"
        ],
        "summary": "Retrieve a version-log",
        "description": "Returns certain version log based on the given filters",
        "operationId": "getVersionLogById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' filed",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a version-log",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VersionLogResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a version-log",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/webhook-query-parameters": {
      "get": {
        "tags": [
          "webhook-query-parameters"
        ],
        "summary": "List webhook-query-parameters",
        "description": "Returns list of webhook query parameters based on the given filters",
        "operationId": "getWebhookQueryParameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'webhook'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "webhook_id",
            "in": "query",
            "description": "'webhook_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List webhook-query-parameters",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookQuetryParameterResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List webhook-query-parameters",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhook-query-parameters"
        ],
        "summary": "Create a webhook-query-parameter",
        "description": "Returns created webhook query parameter based on the given filters",
        "operationId": "postWebhookQueryParameter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a webhook-query-parameter",
                  "properties": {
                    "attributes": {
                      "description": "Create a webhook-query-parameter",
                      "properties": {
                        "webhook_id": {
                          "description": "Create a webhook-query-parameter",
                          "type": "number"
                        },
                        "key": {
                          "description": "Create a webhook-query-parameter",
                          "type": "string"
                        },
                        "value": {
                          "description": "Create a webhook-query-parameter",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a webhook-query-parameter",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookQuetryParameterResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a webhook-query-parameter",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/webhook-query-parameters/{id}": {
      "get": {
        "tags": [
          "webhook-query-parameters"
        ],
        "summary": "Retrieve a webhook-query-parameters",
        "description": "Returns certain webhook query parameter based on the given filters",
        "operationId": "getWebhookQueryParametersById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'webhook'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a webhook-query-parameters",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookQuetryParameterResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a webhook-query-parameters",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/webhook-request-orders": {
      "get": {
        "tags": [
          "webhook-request-orders"
        ],
        "summary": "List webhook-request-orders",
        "description": "Returns list of webhook request orders based on the given filters",
        "operationId": "getWebhookRequestOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'webhook_callback', 'webhook_request_attempts'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "webhook_id",
            "in": "query",
            "description": "'webhook_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List webhook-request-orders",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookRequestOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List webhook-request-orders",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List webhooks",
        "description": "Returns list of webhooks based on the given filters",
        "operationId": "getWebhooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tenant_database', 'query_params'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List webhooks",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List webhooks",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create a webhook",
        "description": "Returns created webhook based on the given filters",
        "operationId": "postWebhook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a webhook",
                  "properties": {
                    "attributes": {
                      "description": "Create a webhook",
                      "properties": {
                        "request_method": {
                          "description": "Create a webhook",
                          "type": "string"
                        },
                        "model": {
                          "description": "Create a webhook",
                          "type": "string"
                        },
                        "request_trigger": {
                          "description": "Create a webhook",
                          "type": "string"
                        },
                        "url": {
                          "description": "Create a webhook",
                          "type": "string"
                        },
                        "organization_id": {
                          "description": "Create a webhook",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a webhook",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a webhook",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/webhooks/{id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Retrieve a webhook",
        "description": "Returns certain webhook based on the given filters",
        "operationId": "getWebhookById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tenant_database', 'query_params'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a webhook",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a webhook",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "webhooks"
        ],
        "summary": "Edit a webhook",
        "description": "Returns edited webhook based on the given filters",
        "operationId": "patchWebhook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a webhook",
                  "properties": {
                    "attributes": {
                      "description": "Edit a webhook",
                      "properties": {
                        "request_method": {
                          "description": "Edit a webhook",
                          "type": "string"
                        },
                        "model": {
                          "description": "Edit a webhook",
                          "type": "string"
                        },
                        "request_trigger": {
                          "description": "Edit a webhook",
                          "type": "string"
                        },
                        "url": {
                          "description": "Edit a webhook",
                          "type": "string"
                        },
                        "organization_id": {
                          "description": "Edit a webhook",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a webhook",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebhookResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a webhook",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/weekdays": {
      "get": {
        "tags": [
          "weekdays"
        ],
        "summary": "List weekdays",
        "description": "Returns list of weekdays based on the given filters",
        "operationId": "getWeekdays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List weekdays",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WeekdayDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List weekdays",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/weekdays/{id}": {
      "get": {
        "tags": [
          "weekdays"
        ],
        "summary": "Retrieve a weekdays",
        "description": "Returns certain weekdays based on the given filters",
        "operationId": "getWeekdayById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a weekdays",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WeekdayDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a weekdays",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/wia-data-sources": {
      "get": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "List wia-data-sources",
        "description": "Returns a list of wia data sources based on the given filters",
        "operationId": "getWiaDataSources",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'computer'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "computer_id",
            "in": "query",
            "description": "'computer_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List wia-data-sources",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List wia-data-sources",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "Create a wia-data-source",
        "description": "Returns created wia data sources based on the given filters",
        "operationId": "postWiaDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'computer_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a wia-data-source",
                  "properties": {
                    "attributes": {
                      "description": "Create a wia-data-source",
                      "properties": {
                        "name": {
                          "description": "Create a wia-data-source",
                          "type": "string",
                          "example": "CASH INVOICE"
                        },
                        "wia_device_id": {
                          "description": "Create a wia-data-source",
                          "type": "string"
                        },
                        "wia_device_manufacturer": {
                          "description": "Create a wia-data-source",
                          "type": "string"
                        },
                        "wia_device_name": {
                          "description": "Create a wia-data-source",
                          "type": "string"
                        },
                        "added_at": {
                          "description": "Create a wia-data-source",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a wia-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a wia-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/wia-data-sources/{id}": {
      "get": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "Retrieve a wia-data-source",
        "description": "Returns certain wia data source based on the given filters",
        "operationId": "getWiaDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'computer'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a wia-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a wia-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "Edit a wia-data-source",
        "description": "Returns edited wia data source based on the given filters",
        "operationId": "patchWiaDataSource",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'computer_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a wia-data-source",
                  "properties": {
                    "attributes": {
                      "description": "Edit a wia-data-source",
                      "properties": {
                        "name": {
                          "description": "Edit a wia-data-source",
                          "type": "string",
                          "example": "CASH INVOICE"
                        },
                        "wia_device_id": {
                          "description": "Edit a wia-data-source",
                          "type": "string"
                        },
                        "wia_device_manufacturer": {
                          "description": "Edit a wia-data-source",
                          "type": "string"
                        },
                        "wia_device_name": {
                          "description": "Edit a wia-data-source",
                          "type": "string"
                        },
                        "added_at": {
                          "description": "Edit a wia-data-source",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a wia-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a wia-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/wia-data-sources/{id}/add": {
      "post": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "Add a wia-data-source",
        "description": "Returns added wia data source based on the given filters",
        "operationId": "postWiaDataSourceAdd",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Add a wia-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Add a wia-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/wia-data-sources/{id}/remove": {
      "post": {
        "tags": [
          "wia-data-sources"
        ],
        "summary": "Remove a wia-data-source",
        "description": "Returns removed wia data source based on the given filters",
        "operationId": "postWiaDataSourceRemove",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove a wia-data-source",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WiaDataSourceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove a wia-data-source",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/xray-system-string-arguments": {
      "get": {
        "tags": [
          "xray-system-string-arguments"
        ],
        "summary": "List xray-system-string-arguments",
        "description": "Returns a list of xray system string arguments based on the given filters",
        "operationId": "getXraySystemStringArguments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'xray_system'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "xray_system_id",
            "in": "query",
            "description": "'xray_system_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List xray-system-string-arguments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List xray-system-string-arguments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "xray-system-string-arguments"
        ],
        "summary": "Create an xray-system-string-argument",
        "description": "Returns created xray system string argument based on the given filters",
        "operationId": "postXraySystemStringArgument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an xray-system-string-argument",
                  "properties": {
                    "attributes": {
                      "description": "Create an xray-system-string-argument",
                      "properties": {
                        "order": {
                          "description": "Create an xray-system-string-argument",
                          "type": "number",
                          "example": 3
                        },
                        "label": {
                          "description": "Create an xray-system-string-argument",
                          "type": "string"
                        },
                        "model": {
                          "description": "Create an xray-system-string-argument",
                          "type": "string",
                          "example": "patient"
                        },
                        "column_name": {
                          "description": "Create an xray-system-string-argument",
                          "type": "string",
                          "example": "first_name"
                        },
                        "regular_expression": {
                          "description": "Create an xray-system-string-argument",
                          "type": "string",
                          "example": "'[^0-9]'"
                        },
                        "substitution": {
                          "description": "Create an xray-system-string-argument",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an xray-system-string-argument",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an xray-system-string-argument",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/xray-system-string-arguments/{id}": {
      "get": {
        "tags": [
          "xray-system-string-arguments"
        ],
        "summary": "Retrieve an xray-system-string-argument",
        "description": "Returns certain xray system string argument based on the given filters",
        "operationId": "getXraySystemStringArgument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'xray_system'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an xray-system-string-argument",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an xray-system-string-argument",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/xray-systems": {
      "get": {
        "tags": [
          "xray-systems"
        ],
        "summary": "List xray-systems",
        "description": "Returns a list of xray systems based on the given filters",
        "operationId": "getXraySystems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List xray-systems",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List xray-systems",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "xray-systems"
        ],
        "summary": "Create an xray-system",
        "description": "Returns created xray system based on the given filters",
        "operationId": "postXraySystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'system_brand' and 'system_supplier' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an xray-system",
                  "properties": {
                    "attributes": {
                      "description": "Create an xray-system",
                      "properties": {
                        "system_supplier": {
                          "description": "Create an xray-system",
                          "type": "string"
                        },
                        "system_brand": {
                          "description": "Create an xray-system",
                          "type": "string"
                        },
                        "system_version": {
                          "description": "Create an xray-system",
                          "type": "string"
                        },
                        "separator": {
                          "description": "Create an xray-system",
                          "type": "string"
                        },
                        "integration_type": {
                          "description": "Create an xray-system",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an xray-system",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an xray-system",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/xray-systems/{id}": {
      "get": {
        "tags": [
          "xray-systems"
        ],
        "summary": "Retrieve an xray-system",
        "description": "Returns certain xray system based on the given filters",
        "operationId": "getXraySystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an xray-system",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/XraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an xray-system",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/support-email-addresses": {
      "get": {
        "tags": [
          "support-email-addresses"
        ],
        "summary": "List support-email-addresses",
        "description": "Returns list of support email addresses based on the given filters",
        "operationId": "getSupportEmailAdresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List support-email-addresses",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SupportEmailAdressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List support-email-addresses",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/webhooks:booking": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook for booking",
        "description": "Booking request be send to webhook endpoint\r\n     \r\n    Triggers of the booking webhook:\r\n\r\n       * POST /muntra-bookings/{id}/reschedule\r\n       * POST /muntra-bookings\r\n       * POST /muntra-booking-attendees/{id}/reschedule\r\n       * POST /muntra-booking-attendees\r\n       * POST /bookings/book\r\n       * POST /bookings/rebook\r\n       * POST /bookings with user_ids/patient_ids\r\n       * PATCH /bookings\r\n       * POST /booking-attendees for attendees with related user/patient\r\n       * PATCH /booking-attendees for attendees with related user/patient\r\n       * POST /bookings/{id}/cancel\r\n       * POST /bookings/{id}/change\r\n       * POST /rebookings/{id}/tentative-book\r\n      ",
        "operationId": "WebhookBookings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Webhook booking",
                  "type": "object",
                  "$ref": "#/definitions/BookingWebhookRequest"
                },
                "included": {
                  "description": "Webhook booking",
                  "properties": {
                    "clinic": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/ClinicWebhookRequest"
                    },
                    "user": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/UserWebhookRequest"
                    },
                    "booking_attendees": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/BookingAttendeeWebhookRequest"
                    },
                    "patient": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/PatientWebhookRequest"
                    },
                    "booking_type": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/BookingTypeWebhookRequest"
                    },
                    "procedure": {
                      "description": "Webhook booking",
                      "type": "object",
                      "$ref": "#/definitions/ProcedureWebhookRequest"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks:journal-entry": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook for journal-entry",
        "description": "Journal entry request be send to webhook endpoint",
        "operationId": "WebhookJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Webhook journal-entry",
                  "type": "object",
                  "$ref": "#/definitions/JournalEntryWebhookRequest"
                },
                "included": {
                  "description": "Webhook journal-entry",
                  "properties": {
                    "clinic": {
                      "description": "Webhook journal-entry",
                      "type": "object",
                      "$ref": "#/definitions/ClinicWebhookRequest"
                    },
                    "user": {
                      "description": "Webhook journal-entry",
                      "type": "object",
                      "$ref": "#/definitions/UserWebhookRequest"
                    },
                    "currency": {
                      "description": "Webhook journal-entry",
                      "type": "object",
                      "$ref": "#/definitions/CurrencyWebhookRequest"
                    },
                    "patient": {
                      "description": "Webhook journal-entry",
                      "type": "object",
                      "$ref": "#/definitions/PatientWebhookRequest"
                    },
                    "vat_code": {
                      "description": "Webhook journal-entry",
                      "type": "object",
                      "$ref": "#/definitions/VatCodeWebhookRequest"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks:patients": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook for patient",
        "description": "Patient request be send to webhook endpoint",
        "operationId": "WebhookPatients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Webhook patients",
                  "type": "object",
                  "$ref": "#/definitions/PatientWebhookRequest"
                },
                "included": {
                  "description": "Webhook patients",
                  "properties": {
                    "clinic": {
                      "description": "Webhook patients",
                      "type": "object",
                      "$ref": "#/definitions/ClinicWebhookRequest"
                    },
                    "user": {
                      "description": "Webhook patients",
                      "type": "object",
                      "$ref": "#/definitions/UserWebhookRequest"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks:task": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook for task",
        "description": "Task request be send to webhook endpoint",
        "operationId": "WebhookTask",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Webhook task",
                  "type": "object",
                  "$ref": "#/definitions/TaskWebhookRequest"
                },
                "included": {
                  "description": "Webhook task",
                  "properties": {
                    "clinic": {
                      "description": "Webhook task",
                      "type": "object",
                      "$ref": "#/definitions/ClinicWebhookRequest"
                    },
                    "patient": {
                      "description": "Webhook task",
                      "type": "object",
                      "$ref": "#/definitions/PatientWebhookRequest"
                    },
                    "responsible": {
                      "description": "Webhook task",
                      "type": "object",
                      "$ref": "#/definitions/UserWebhookRequest"
                    },
                    "creator": {
                      "description": "Webhook task",
                      "type": "object",
                      "$ref": "#/definitions/UserWebhookRequest"
                    },
                    "comments": {
                      "description": "Webhook task",
                      "type": "object",
                      "$ref": "#/definitions/TaskCommentWebhookRequest"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/webhooks:verification": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Webhook for verification",
        "description": "Verification request be send to webhook endpoint",
        "operationId": "WebhookVerification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Webhook verification",
                  "type": "object",
                  "$ref": "#/definitions/VerificationWebhookRequest"
                },
                "included": {
                  "description": "Webhook verification",
                  "properties": {
                    "currency": {
                      "description": "Webhook verification",
                      "type": "object",
                      "$ref": "#/definitions/CurrencyWebhookRequest"
                    },
                    "fiscal_year": {
                      "description": "Webhook verification",
                      "type": "object",
                      "$ref": "#/definitions/FiscalYearWebhookRequest"
                    },
                    "verification_serie": {
                      "description": "Webhook verification",
                      "type": "object",
                      "$ref": "#/definitions/VerificationSerieWebhookRequest"
                    },
                    "transactions": {
                      "description": "Webhook verification",
                      "type": "object",
                      "$ref": "#/definitions/TransactionWebhookRequest"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}