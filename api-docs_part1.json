{
  "swagger": "2.0",
  "info": {
    "title": "API Documentation",
    "description": "Muntra Practice Management System API",
    "version": "3.5.234"
  },
  "basePath": "/api",
  "schemes": [
    "http",
    "https"
  ],
  "definitions": {
    "AccountPlanTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Norge"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BAST 2022"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "number",
              "example": 1010
            },
            "account_name": {
              "type": "string",
              "example": "Utvecklingsutgifter"
            },
            "balance_type": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicAccountTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_account_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "GOVERNMENT INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateCostRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template_cost_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AccountingTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "accounting_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ActionNeededPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "action_needed_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "entry_type": {
              "type": "string"
            },
            "text": {
              "type": "string"
            },
            "fee": {
              "type": "number",
              "example": 10
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "signed_at": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number"
            },
            "quantity": {
              "type": "number"
            },
            "discount_excluding_vat": {
              "type": "number"
            },
            "vat_percentage": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_owner_name": {
              "type": "string",
              "example": "John"
            },
            "animal_owner_street_address_1": {
              "type": "string",
              "example": "Hold street"
            },
            "animal_owner_street_address_2": {
              "type": "string",
              "example": "Talk street"
            },
            "animal_owner_postal_code": {
              "type": "string"
            },
            "animal_owner_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "animal_owner_country_name": {
              "type": "string",
              "example": "Sweden"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 223
            },
            "vat_amount": {
              "type": "number",
              "example": 120
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": false
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string"
            },
            "animal_id_qualifier": {
              "type": "string"
            },
            "animal_species": {
              "type": "string"
            },
            "dosage_form": {
              "type": "string"
            },
            "indication_for_prescription": {
              "type": "string"
            },
            "license_id": {
              "type": "string"
            },
            "package_content": {
              "type": "string"
            },
            "pharmacy_id": {
              "type": "string"
            },
            "quantity": {
              "type": "number"
            },
            "quantity_unit": {
              "type": "string"
            },
            "strength": {
              "type": "string"
            },
            "supplementary_information": {
              "type": "string"
            },
            "delegated": {
              "type": "boolean"
            },
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionRowWaitingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription_row_waiting_time"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number_of_days": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_prescription"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "prescriber_cit": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "delivery_location_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "delivery_location_id": {
              "type": "string"
            },
            "delivery_location_postal_code": {
              "type": "string"
            },
            "delivery_location_street_name": {
              "type": "string"
            },
            "delivery_location_telecommunication": {
              "type": "string"
            },
            "include_prescription_fee": {
              "type": "boolean",
              "example": true
            },
            "prescription_fee_including_vat": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalSpeciesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal_species"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "type": {
              "type": "string",
              "example": "pet"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnimalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "animal_identification": {
              "type": "string",
              "example": "Nytt test"
            },
            "animal_id_qualifier": {
              "type": "string",
              "example": "IND"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "FK_claim_id": {
              "type": "string"
            },
            "FK_claim_amount": {
              "type": "number"
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number"
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "eligible_from_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "atb_usage_atb_number": {
              "type": "string"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 123
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 12
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": false
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "validated": {
              "type": "boolean",
              "example": true
            },
            "validation_sent_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "submitted": {
              "type": "number"
            },
            "submitted_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "answered_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": false
            },
            "reversed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "reversal_error_code": {
              "type": "string"
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "deducted_from_invoice": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "number"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 1
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymouseInvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "string"
            },
            "paid_at": {
              "type": "string",
              "example": "2024-07-12T10:43:49+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-12T10:43:49+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-22T10:43:49+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPatientInvoicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "third_party_name": {
              "type": "string",
              "example": "Boom"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 10
            },
            "read_by_recipient_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-11T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousSalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "lab_fee": {
              "type": "number",
              "example": 12
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousTreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "atrr673edda5850c2"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 2
            },
            "down_vote_count": {
              "type": "number",
              "example": 3
            },
            "creation_date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "SMS_REMINDER_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "SMS-påminnelse"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AtbCheckReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "atb_check_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": 123
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BalanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "balance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dqwd21qwd12q"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "opening_balance": {
              "type": "number",
              "example": 1000
            },
            "closing_balance": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookkeepingAllocationRulesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_allocation_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "BookKeepingFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "from_date": {
              "type": "string"
            },
            "to_date": {
              "type": "string"
            },
            "include_already_exported": {
              "type": "boolean",
              "example": false
            },
            "number_of_verifications": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookKeepingLockResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "bookkeeping_lock"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "boolean",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": false
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingConversationReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_conversion_report_row"
        },
        "id": {
          "type": "string",
          "example": "2wq12rwqrwqw11"
        },
        "attributes": {
          "properties": {
            "pixel_id": {
              "type": "string"
            },
            "booking_count": {
              "type": "number"
            },
            "session_count": {
              "type": "number"
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExdateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_exdate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "rescheduling_lock_period_in_hours": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingPreferenceDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 1
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 5
            },
            "fit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleByDayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule_by_day"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 123
            },
            "freq": {
              "type": "string"
            },
            "interval": {
              "type": "number",
              "example": 10
            },
            "until": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": "PUBLIC"
            },
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": false
            },
            "dtstart": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            },
            "reschedulable": {
              "type": "boolean",
              "example": false
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "location": {
              "type": "string"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "price": {
              "type": "number",
              "example": 111
            },
            "new_patient": {
              "type": "boolean",
              "example": false
            },
            "patient_wants_earlier_slot": {
              "type": "boolean",
              "example": false
            },
            "patient_made_late_cancellation": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear": {
              "type": "boolean",
              "example": false
            },
            "patient_failed_to_appear_handled": {
              "type": "boolean",
              "example": false
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "done": {
              "type": "boolean",
              "example": false
            },
            "archived_at": {
              "type": "string",
              "example": "2024-02-01T09:11:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string",
              "example": "#9FC6E7"
            },
            "text_color": {
              "type": "string",
              "example": "#000000"
            },
            "color_order": {
              "type": "number",
              "example": 0
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BoxResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "box"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "number": {
              "type": "number",
              "example": 1
            },
            "last_treatment_date": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T16:03:16+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CalendarViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "calendar_view"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "days": {
              "type": "number",
              "example": 10
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED,TENTATIVE"
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": true
            },
            "from_minute": {
              "type": "number",
              "example": 10
            },
            "to_minute": {
              "type": "boolean",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraAcceptsReviewRequestsEmailSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_accepts_review_requests_email_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "accepts_review_request_emails": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookingAttendeesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-booking-attendee"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "partstat": {
              "type": "string",
              "example": "ACCEPTED"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraBookings": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_booking"
        },
        "id": {
          "type": "string",
          "example": "BKel6a02b"
        },
        "attributes": {
          "properties": {
            "class": {
              "type": "string",
              "example": 3
            },
            "summary": {
              "type": "string",
              "example": "Title"
            },
            "text": {
              "type": "string",
              "example": "Text"
            },
            "dtstart": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            },
            "dtend": {
              "type": "string",
              "format": "date",
              "example": "2023-02-11T18:19:43+01:00"
            },
            "description": {
              "type": "string",
              "example": "Description"
            },
            "location": {
              "type": "string",
              "example": "Address"
            },
            "transparent": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            },
            "booked_by_patient": {
              "type": "boolean",
              "example": true
            },
            "new_patient": {
              "type": "boolean",
              "example": true
            },
            "referral_source": {
              "type": "string",
              "example": "muntra.com"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "data": {
              "properties": {
                "type": {
                  "type": "string",
                  "example": "muntra_clinic"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 49.427062
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 32.081114
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": true
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": false
            },
            "calendar_activated": {
              "type": "boolean",
              "example": true
            },
            "distance": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "latest_review_comment": {
              "type": "string",
              "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "caregiver": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver"
                    },
                    "id": {
                      "type": "integer",
                      "example": 2
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "free_bookable_slots": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_free_bookable_slot"
                      },
                      "id": {
                        "type": "string",
                        "example": "1-2-1"
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "procedures": {
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "muntra_caregiver_procedure_at_location"
                      },
                      "id": {
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "type": "object"
                  }
                }
              },
              "type": "object"
            },
            "default_procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_caregiver_procedure_at_location"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "next_free_bookable_slot": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "muntra_free_bookable_slot"
                    },
                    "id": {
                      "type": "integer",
                      "example": "1-2-1"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverProcedureAtLocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver_procedure_at_location"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraCaregiverResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_caregiver"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "gender": {
              "type": "string"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 0
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicAdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic_ad"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "per_page": {
              "type": "number",
              "format": "float",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraClinicResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string"
            },
            "clinic_address_1": {
              "type": "string"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "default_sms_reminder_text": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "latitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "longitude": {
              "type": "number",
              "format": "float",
              "example": 0
            },
            "google_places_description": {
              "type": "string"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": true
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_restroom": {
              "type": "boolean",
              "example": true
            },
            "has_toys": {
              "type": "boolean",
              "example": true
            },
            "has_tv": {
              "type": "boolean",
              "example": true
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": true
            },
            "has_wifi": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "format": "integer",
              "example": 10
            },
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_follow_up": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_health": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "info_rating_pricing": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_quality": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_bedside_manner": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_hygiene": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_reception_on_arrival": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_thoroughness": {
              "type": "number",
              "format": "float",
              "example": 4.5
            },
            "rating_wait_time": {
              "type": "number",
              "format": "float",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Testa, Sverige"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "reference": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientClinicCurationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_clinic_curation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string",
              "example": "RR2GEVn08i21zRslMuvz6KmM9K16cg60ot"
            },
            "accepts_children": {
              "type": "boolean",
              "example": true
            },
            "accessible_via_elevator": {
              "type": "boolean",
              "example": false
            },
            "accessible_via_stairs": {
              "type": "boolean",
              "example": true
            },
            "capable_of_handling_fear_of_medical_procedures": {
              "type": "boolean",
              "example": true
            },
            "handicap_accessible": {
              "type": "boolean",
              "example": false
            },
            "has_drinks": {
              "type": "boolean",
              "example": true
            },
            "has_free_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_free_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_magazines": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "phas_paid_parking_directly_outside_of_clinic": {
              "type": "boolean",
              "example": true
            },
            "has_paid_parking_near_the_clinic": {
              "type": "boolean",
              "example": false
            },
            "has_restroom": {
              "type": "boolean",
              "example": false
            },
            "has_toys": {
              "type": "boolean",
              "example": false
            },
            "has_tv": {
              "type": "boolean",
              "example": false
            },
            "has_waiting_room": {
              "type": "boolean",
              "example": false
            },
            "has_wifi": {
              "type": "boolean",
              "example": false
            },
            "created_date": {
              "type": "string",
              "example": "11-05-2024"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPatientReviewCaregiver": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_patient_review"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "overall_rating": {
              "type": "number",
              "format": "float",
              "example": 3
            },
            "patient_name": {
              "type": "string",
              "example": "Pontus G."
            },
            "review_comment": {
              "type": "boolean",
              "example": true
            },
            "created_date": {
              "type": "string",
              "format": "date",
              "example": "2023-01-30T16:49:23+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraPhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100411"
            },
            "to": {
              "type": "string",
              "example": "+46840906343"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AutostarttokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string"
            },
            "password": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AuthLoginResponse": {
      "properties": {
        "token_type": {
          "type": "string",
          "example": "Bearer"
        },
        "expires_in": {
          "type": "number",
          "example": 7200
        },
        "access_token": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        }
      }
    },
    "MuntraRolesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-role"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "slug"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CariesDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "caries"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 22.5
            },
            "image_height": {
              "type": "number",
              "example": 33
            },
            "image_width": {
              "type": "number",
              "example": 25
            },
            "xmax": {
              "type": "number",
              "example": 10
            },
            "xmin": {
              "type": "number",
              "example": 10
            },
            "ymax": {
              "type": "number",
              "example": 10
            },
            "ymin": {
              "type": "number",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CertificateUploadDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "certificate"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "issuer": {
              "type": "string"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ChangeLogsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "change_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_date": {
              "type": "string",
              "example": "2024-06-20T17:03:59+02:00"
            },
            "record_id": {
              "type": "string",
              "example": "1"
            },
            "route_name": {
              "type": "string",
              "example": "patient"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CheckoutServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "checkout_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentSpecificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment_specification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_organization_id": {
              "type": "number",
              "example": 1
            },
            "issue_date": {
              "type": "string"
            },
            "payment_id": {
              "type": "number",
              "example": 2
            },
            "total_amount": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "deviating": {
              "type": "boolean",
              "example": true
            },
            "done": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_claim_amount": {
              "type": "number",
              "example": 1
            },
            "FK_claim_status": {
              "type": "string"
            },
            "FK_submitted_amount": {
              "type": "number",
              "example": 3
            },
            "FK_reverse_claim_status": {
              "type": "string"
            },
            "late_sending_reason": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean",
              "example": true
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "reversed": {
              "type": "boolean",
              "example": true
            },
            "reversed_at": {
              "type": "string"
            },
            "reversal_error_code": {
              "type": "number",
              "example": 4
            },
            "reversal_error_text": {
              "type": "string"
            },
            "reversal_error_details": {
              "type": "string"
            },
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number",
              "example": 1
            },
            "care_provider_org_number": {
              "type": "number",
              "example": 1
            },
            "government_organization_id": {
              "type": "number",
              "example": 123
            },
            "user_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_ssn": {
              "type": "number",
              "example": 1
            },
            "patient_fin": {
              "type": "number",
              "example": 1
            },
            "dentist_ssn": {
              "type": "number",
              "example": 1
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "atb_usage_atb_number": {
              "type": "number",
              "example": 1
            },
            "atb_usage_teeth_count": {
              "type": "number",
              "example": 1
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number",
              "example": 1
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number",
              "example": 1
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean",
              "example": true
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "stb_amount_available": {
              "type": "number",
              "example": 1
            },
            "high_cost_reset": {
              "type": "boolean",
              "example": true
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": true
            },
            "FK_claim_id": {
              "type": "number",
              "example": true
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "19953"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-10-24T11:32:51+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-10-17T07:49:16+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test Sverige"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Testvägen 1"
            },
            "clinic_address_2": {
              "type": "string",
              "example": "Testvägen 2"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "12345"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_reference": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_phone_number_2": {
              "type": "string"
            },
            "clinic_phone_mobile": {
              "type": "string"
            },
            "clinic_fax": {
              "type": "string"
            },
            "clinic_professional_statement": {
              "type": "string"
            },
            "workplace_code": {
              "type": "string"
            },
            "website_address": {
              "type": "string"
            },
            "booking_requires_two_factor_authentication": {
              "type": "boolean",
              "example": true
            },
            "show_user_in_invoice_clinic_reference": {
              "type": "boolean",
              "example": true
            },
            "timezone": {
              "type": "string",
              "example": "Europe/Stockholm"
            },
            "latitude": {
              "type": "integer",
              "format": "float"
            },
            "longitude": {
              "type": "integer",
              "format": "float"
            },
            "google_places_description": {
              "type": "string"
            },
            "journal_entry_autosign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "journal_entry_unsign_limit_in_days": {
              "type": "integer",
              "example": 30
            },
            "default_sms_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Välkommen [booking_datetime] [clinic_address_1]. Bekräfta tiden via [booking_confirmation_link]. Mvh, [caregiver_title] [caregiver_first_name] [caregiver_last_name] (OBS! det går inte att svara på detta meddelande)"
            },
            "default_sms_reminder_text": {
              "type": "string",
              "example": "Hej [patient_first_name]! Här är en påminnelse om din tid på [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date]. Mvh, [caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_snail_mail_invitation_text": {
              "type": "string",
              "example": "Hej [patient_first_name]!\\r\\n\\r\\nNu är det dags att besöka oss.\\r\\n\\r\\nVälkommen till [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date].\\r\\n\\r\\nBekräfta gärna tiden genom att gå till följande länk: [booking_confirmation_link]\\r\\n\\r\\nMed vänlig hälsning,\\r\\n[caregiver_first_name] [caregiver_last_name], [caregiver_title]"
            },
            "default_hours_until_sms_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_before_sms_reminder_sent": {
              "type": "integer",
              "example": 48
            },
            "default_hours_until_snail_mail_invitation_sent": {
              "type": "integer",
              "example": 48
            },
            "allow_remittance_without_individual_recipient": {
              "type": "boolean",
              "example": true
            },
            "accepts_digital_remittance": {
              "type": "boolean",
              "example": true
            },
            "has_cbct": {
              "type": "boolean",
              "example": true
            },
            "has_music": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:16:42+02:00"
            },
            "updated_at": {
              "type": "string",
              "format": "date",
              "example": "2024-07-02T19:17:48+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ComputersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "computer"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "mac_address": {
              "type": "string"
            },
            "backup_folder": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CorsProxyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "animal"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      },
      "type": "object"
    },
    "CostCentersResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "cost-center"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "052"
            },
            "name": {
              "type": "string",
              "example": "Hund"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "country"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Sverige"
            },
            "code": {
              "type": "string",
              "example": "SE"
            },
            "calling_code": {
              "type": "string",
              "example": "+46"
            },
            "personal_id_min_length": {
              "type": "number",
              "example": 10
            },
            "personal_id_placeholder": {
              "type": "string",
              "example": "ååååmmddxxxx"
            },
            "personal_id_regex": {
              "type": "string",
              "example": "/^(18|19|[2-9]\\\\d)\\\\d{2}(0[1-9]|1[0-2])[0-9]\\\\d{5}$/"
            },
            "legal_entity_id_regex": {
              "type": "string"
            },
            "postal_code_length": {
              "type": "number",
              "example": 5
            },
            "postal_code_regex": {
              "type": "string"
            },
            "general_information": {
              "type": "string",
              "example": "Planerat underhåll tisdagen den 21 januari 22:00-02:00 på servrar för läkemedelsartiklar och apotek\\r\\n\\r\\nGlöm inte att prenumera på vårt nyhetsbrev för produktnyheter, <a href=\\'https://hs.muntra.se/prenumerera\\'>anmäl dig här</a>"
            },
            "muntra_support_phone_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "S1"
            },
            "label": {
              "type": "string",
              "example": "Medfödd missbildning i käkområdet eller ansiktet, om inte missbildningen endast är av ringa omfattning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Stockholm 2018"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "string",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2017-10-23T12:05:37+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-30T15:54:10+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountyCouncilPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 10
            },
            "lab_fee": {
              "type": "number",
              "example": 5
            },
            "included_material": {
              "type": "string"
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountryCouncilResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "county_council"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Hälso- och sjukvårdsförvaltningen"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Box 120 81"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "10223"
            },
            "organization_name": {
              "type": "string",
              "example": "Region Stockholm"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CourseItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course_item"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "video_link": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CoursesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "course"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Introduktion till Muntra Care"
            },
            "description": {
              "type": "string",
              "example": "Course, created by Groove Commerce"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CredentialsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credential"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CreditChecksResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "credit_check"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "approved": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "valid_until": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CurrencyWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "currency"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "SEK"
            },
            "name": {
              "type": "string",
              "example": "Svenska kroner"
            },
            "suffix": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomPaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "custom_payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerCreditReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_credit_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "paid_amount": {
              "type": "number",
              "example": 111
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "payment_id": {
              "type": "string"
            },
            "remaining_credit": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerLossResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_loss"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": "1000.00"
            },
            "date": {
              "type": "string",
              "example": "2024-11-08"
            },
            "realized": {
              "type": "boolean",
              "example": "true"
            },
            "comment": {
              "type": "string",
              "example": "comment"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-08T18:48:44+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CustomerReceivableRepRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "customer_receivable_report_row"
        },
        "id": {
          "type": "string",
          "example": "11fw41safasfqw1"
        },
        "attributes": {
          "properties": {
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoice_id": {
              "type": "string",
              "example": "123"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "invoiced_amount": {
              "type": "number",
              "example": 100
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Smith"
            },
            "remaining_receivable": {
              "type": "number",
              "example": 1
            },
            "type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DailyReconciliationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "daily_reconciliation"
        },
        "id": {
          "type": "string",
          "example": "106794"
        },
        "attributes": {
          "properties": {
            "card_rounding": {
              "type": "number"
            },
            "card_total": {
              "type": "number",
              "example": 1000
            },
            "mobile_total": {
              "type": "number"
            },
            "date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "incoming_cash_balance": {
              "type": "number"
            },
            "outgoing_cash_balance": {
              "type": "number"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "grand_total_sales": {
              "type": "number"
            },
            "grand_total_credits": {
              "type": "number"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DashboardReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dashboard_report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_name": {
              "type": "string",
              "example": "action-needed-patient-report-row"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DebtCollectionServicesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "debt_collection_service"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_url": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-16T14:49:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-16T14:49:45+02:00"
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Allmän information"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraDeclarationItemTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_declaration_item_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Astma"
            },
            "stub": {
              "type": "string",
              "example": "astma"
            },
            "cave": {
              "type": "boolean",
              "example": true
            },
            "deleted_at": {
              "type": "string",
              "example": "2025-01-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationSmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration_sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 10
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeclarationsMuntraResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-declaration"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "asthma": {
              "type": "boolean",
              "example": false
            },
            "blood_infection": {
              "type": "boolean",
              "example": false
            },
            "hemophilia": {
              "type": "boolean",
              "example": false
            },
            "cancer": {
              "type": "boolean",
              "example": false
            },
            "diabetes": {
              "type": "boolean",
              "example": false
            },
            "epilepsy": {
              "type": "boolean",
              "example": false
            },
            "hiv_aids": {
              "type": "boolean",
              "example": false
            },
            "cerebral_haemorrhage": {
              "type": "boolean",
              "example": false
            },
            "cardiovascular_diseases": {
              "type": "boolean",
              "example": false
            },
            "high_blood_pressure": {
              "type": "boolean",
              "example": false
            },
            "immunological_disease": {
              "type": "boolean",
              "example": false
            },
            "supplement_for_dental_treatment": {
              "type": "boolean",
              "example": false
            },
            "nutrition_diet": {
              "type": "boolean",
              "example": false
            },
            "respiratory_disease": {
              "type": "boolean",
              "example": false
            },
            "parkinsons": {
              "type": "boolean",
              "example": false
            },
            "mental_health_problems": {
              "type": "boolean",
              "example": false
            },
            "rheumatic_disease": {
              "type": "boolean",
              "example": false
            },
            "smokes_takes_snuff": {
              "type": "boolean",
              "example": false
            },
            "gets_chemo_therapy": {
              "type": "boolean",
              "example": false
            },
            "eating_disorder": {
              "type": "boolean",
              "example": false
            },
            "ear_nose_throat": {
              "type": "boolean",
              "example": false
            },
            "other": {
              "type": "boolean",
              "example": false
            },
            "allergy_latex": {
              "type": "boolean",
              "example": false
            },
            "allergy_local_anesthesia": {
              "type": "boolean",
              "example": false
            },
            "allergy_edibles": {
              "type": "boolean",
              "example": false
            },
            "allergy_nickel": {
              "type": "boolean",
              "example": false
            },
            "allergy_penicillin": {
              "type": "boolean",
              "example": false
            },
            "allergy_pollen": {
              "type": "boolean",
              "example": false
            },
            "allergy_other": {
              "type": "boolean",
              "example": false
            },
            "mouth_bleeding_gums": {
              "type": "boolean",
              "example": false
            },
            "mouth_bruxism": {
              "type": "boolean",
              "example": false
            },
            "mouth_halitosis": {
              "type": "boolean",
              "example": false
            },
            "mouth_finger_sucker": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_breather": {
              "type": "boolean",
              "example": false
            },
            "mouth_mouth_ulceration": {
              "type": "boolean",
              "example": false
            },
            "mouth_xerostomia": {
              "type": "boolean",
              "example": false
            },
            "mouth_sore_masticatory_muscles": {
              "type": "boolean",
              "example": false
            },
            "mouth_other": {
              "type": "boolean",
              "example": false
            },
            "osteoporosis": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_hearing": {
              "type": "boolean",
              "example": false
            },
            "other_reduced_mobility": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_vision": {
              "type": "boolean",
              "example": false
            },
            "other_impaired_speech": {
              "type": "boolean",
              "example": false
            },
            "pacemaker": {
              "type": "boolean",
              "example": false
            },
            "bisphosphonate": {
              "type": "boolean",
              "example": false
            },
            "pain_in_face_jaw_or_temple": {
              "type": "boolean",
              "example": false
            },
            "pain_when_opening_or_chewing": {
              "type": "boolean",
              "example": false
            },
            "locks_jaw": {
              "type": "boolean",
              "example": false
            },
            "patient_health_evaluation": {
              "type": "string",
              "example": false
            },
            "pregnant_due_date": {
              "type": "string",
              "example": false
            },
            "last_dental_treatment": {
              "type": "string",
              "example": false
            },
            "registration_date": {
              "type": "string",
              "example": false
            },
            "special_notes": {
              "type": "string",
              "example": false
            },
            "complementary_information": {
              "type": "string",
              "example": false
            },
            "medications": {
              "type": "string",
              "example": false
            },
            "medications_free_text": {
              "type": "string",
              "example": false
            },
            "medical_treatment_past_two_years": {
              "type": "string",
              "example": false
            },
            "medical_treatment": {
              "type": "string",
              "example": false
            },
            "reason_patient_visits": {
              "type": "string",
              "example": false
            },
            "submitted_by_patient_at": {
              "type": "string",
              "example": false
            },
            "signed_at": {
              "type": "string"
            },
            "prev_history_id": {
              "type": "string"
            },
            "next_history_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeductionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deducted_from_invoice": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string",
              "example": "test name"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 2
            },
            "quantity": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabAnchoringResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_anchoring"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string"
            },
            "label": {
              "type": "string",
              "example": "Test lab"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabConstructionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "comment": {
              "type": "string",
              "example": "Test comment"
            },
            "pick_out_color_in_lab": {
              "type": "boolean",
              "example": true
            },
            "splint_soft_inside": {
              "type": "boolean",
              "example": false
            },
            "due_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDeliveryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "boolean",
              "example": "2024-08-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabDesignDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "no_metal_margin"
            },
            "label": {
              "type": "string",
              "example": "Ingen metallmarginal"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabInterproximalContactResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_interproximal_contact"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabMaterialResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_material"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "e_max"
            },
            "label": {
              "type": "string",
              "example": "E-Max"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOcclusionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_occlusion"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "hard"
            },
            "label": {
              "type": "string",
              "example": "Hård"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabPonticDesignResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_pontic_design"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "sanitary"
            },
            "label": {
              "type": "string",
              "example": "Sanitary"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabProcessStepResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_process_step"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "immediate_prosthesis"
            },
            "label": {
              "type": "string",
              "example": "Immediatprotes"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabScaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_scale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Bioform"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DentalLabResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "lab_name": {
              "type": "string",
              "example": "Arclai lab"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testemail@muntra.com"
            },
            "latitude": {
              "type": "number",
              "example": 59.932461
            },
            "longitude": {
              "type": "number",
              "example": 10.778304
            },
            "lab_orders_receiver_weight": {
              "type": "number",
              "example": 1
            },
            "number_of_lab_order_senders": {
              "type": "number",
              "example": 1
            },
            "number_of_received_lab_orders": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DepositionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "deduction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 111
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "active_area_height_in_millimeters": {
              "type": "number",
              "example": 20
            },
            "active_area_width_in_millimeters": {
              "type": "number",
              "example": 30
            },
            "primary_device_identifier_number": {
              "type": "string",
              "example": "EKAV101038841"
            },
            "product_name": {
              "type": "string",
              "example": "Gendex GXS-700"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DeviceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "device_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "extraoral-xray"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DigitalMailCheckStatusResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "digital_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "sent_at": {
              "type": "string"
            },
            "patient_approved_at": {
              "type": "string"
            },
            "expired_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftEmailReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_email_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSmsReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_sms_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "DraftSnailMailReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "draft_snail_mail_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EducationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "education"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "degree": {
              "type": "string"
            },
            "field_of_study": {
              "type": "string"
            },
            "school": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementAdapterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element_adapter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "49R"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_address"
        },
        "id": {
          "type": "string",
          "example": "1423"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "testemail@com.eu"
            },
            "verified_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailIcsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_ics"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string",
              "example": "testemail@com.is"
            },
            "to_name": {
              "type": "string",
              "example": "Gordon"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EmailsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EquipmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ErrorNotificationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "error_notification"
        },
        "id": {
          "type": "number",
          "example": 2034592
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "stack": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "version": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "ip_address": {
              "type": "string",
              "example": "79.112.148.244"
            },
            "user_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "EventsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-07-02T21:31:00+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-07-02T23:26:00+02:00"
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "patient_id": {
              "type": "string"
            },
            "patient_fullname": {
              "type": "string"
            },
            "patient_partstat": {
              "type": "string"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "patient_email_status": {
              "type": "string"
            },
            "patient_sms_invitation_status": {
              "type": "string"
            },
            "patient_sms_reminder_status": {
              "type": "string"
            },
            "patient_snail_mail_status": {
              "type": "string"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "user_ids": {
              "type": "string"
            },
            "room_ids": {
              "type": "string"
            },
            "resource_ids": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "status": {
              "type": "string",
              "example": "done"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "expired_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ExportRequestTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Patienter med FK-data"
            },
            "requires_organization": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeExternalBindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee_external_binding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "internal_id": {
              "type": "number"
            },
            "internal_type": {
              "type": "string"
            },
            "external_id": {
              "type": "number"
            },
            "external_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FilesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "intraoral-xray-bitewing"
            },
            "label": {
              "type": "string",
              "example": "Bitewing"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FirstBookableSlotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_bookable_slot"
        },
        "id": {
          "type": "string",
          "example": "8059ac202cad85fd18cf4c547c17715d"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2023-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2025-07-28T00:00:00+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": true
            },
            "book_outstanding_treatments": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card_check"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "has_free_card": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FreeCardResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "free_card"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-11-02T09:16:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceAutocompleteDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "google_place_autocomplete"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "place_id": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra-google-place-detail-request"
        },
        "id": {
          "type": "string",
          "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
        },
        "attributes": {
          "properties": {
            "country_short_name": {
              "type": "string",
              "example": "sv"
            },
            "international_phone_number": {
              "type": "string"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "postal_code": {
              "type": "string"
            },
            "postal_town": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "route": {
              "type": "string"
            },
            "street_number": {
              "type": "string",
              "example": "11"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GooglePlaceDetailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_google_place_detail"
        },
        "id": {
          "type": "string",
          "example": "gpdr6772e7fe0af69"
        },
        "attributes": {
          "properties": {
            "include_in_sitemap": {
              "type": "boolean",
              "example": true
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "location_lat": {
              "type": "string",
              "example": "57.726407"
            },
            "location_lng": {
              "type": "string",
              "example": "11.953961"
            },
            "viewport_northeast_lat": {
              "type": "string",
              "example": "59.25614253029151"
            },
            "viewport_northeast_lng": {
              "type": "string",
              "example": "17.8636166302915"
            },
            "viewport_southwest_lat": {
              "type": "string",
              "example": "59.25344456970849"
            },
            "viewport_southwest_lng": {
              "type": "string",
              "example": "17.8609186697085"
            },
            "reference": {
              "type": "string"
            },
            "international_phone_number": {
              "type": "string"
            },
            "place_id": {
              "type": "string",
              "example": "ChIJq6V7IxIQXEYRz-eMz_uA3Lo"
            },
            "formatted_address": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GovernmentAuditResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "government_audit"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "government_clinic_id": {
              "type": "number",
              "example": 1
            },
            "organization_number": {
              "type": "number",
              "example": 2
            },
            "transaction_id": {
              "type": "number",
              "example": 3
            },
            "date": {
              "type": "string",
              "example": "2024-11-12T19:25:31+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GrandTotalesponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "grand_total"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "credits": {
              "type": "number",
              "example": 100
            },
            "sales": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 1
            },
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "GuiItemTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "gui_item_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "mouth-selector"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistorySelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "history_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "history_code": {
              "type": "string",
              "example": "S"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-13T10:23:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HistoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "code": {
              "type": "string",
              "example": "TS"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": false
            },
            "surface_text": {
              "type": "string"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HolidayResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "email_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+00:00"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispensing_repeat_number": {
              "type": "number"
            },
            "dispensing_repeat_time_unit": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "dispensing_repeat_time_value": {
              "type": "number",
              "example": 10
            },
            "latest_requested_time_for_dispensing": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "npl_id": {
              "type": "string"
            },
            "npl_pack_id": {
              "type": "string"
            },
            "nvn": {
              "type": "string"
            },
            "number_of_packages": {
              "type": "number",
              "example": 100
            },
            "prescription_item_id": {
              "type": "string"
            },
            "unstructured_dosage_admin": {
              "type": "string"
            },
            "exchangable": {
              "type": "boolean",
              "example": true
            },
            "include_intro_pack": {
              "type": "boolean",
              "example": false
            },
            "reimbursed": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "HumanPrescriptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "human_prescription"
        },
        "id": {
          "type": "string",
          "example": "5"
        },
        "attributes": {
          "properties": {
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "delivery_method": {
              "type": "string"
            },
            "designated_message_receiver": {
              "type": "string"
            },
            "prescriber_city": {
              "type": "string"
            },
            "prescriber_code": {
              "type": "string"
            },
            "prescriber_name": {
              "type": "string"
            },
            "prescriber_number_or_name_of_house": {
              "type": "string"
            },
            "prescriber_postal_code": {
              "type": "string"
            },
            "prescriber_qualification_code": {
              "type": "string"
            },
            "prescriber_street_name": {
              "type": "string"
            },
            "prescriber_telecommunication": {
              "type": "string"
            },
            "prescribers_comment": {
              "type": "string"
            },
            "subject_of_care_city": {
              "type": "string"
            },
            "subject_of_care_family_name": {
              "type": "string"
            },
            "subject_of_care_first_given_name": {
              "type": "string"
            },
            "subject_of_care_id_scheme": {
              "type": "string"
            },
            "subject_of_care_id_value": {
              "type": "string"
            },
            "subject_of_care_postal_code": {
              "type": "string"
            },
            "subject_of_care_street_name": {
              "type": "string"
            },
            "subject_of_care_phone_number": {
              "type": "string"
            },
            "test_indicator": {
              "type": "string"
            },
            "callback_url": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "healthcare_agent_id": {
              "type": "string"
            },
            "subject_of_care_sex": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdcCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "icd_code"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "A000"
            },
            "description": {
              "type": "string",
              "example": "Kolera som skyldes Vibrio cholerae 01, biovar cholerae"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IdServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "id_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "google-authenticator"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "personal_id_regex": {
              "type": "string"
            },
            "personal_id_placeholder": {
              "type": "string"
            },
            "personal_id_min_length": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageAnnotationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image_annotation"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "source": {
              "type": "string"
            },
            "score": {
              "type": "number",
              "example": 4.5
            },
            "image_height": {
              "type": "number",
              "example": 1000
            },
            "image_width": {
              "type": "number",
              "example": 500
            },
            "coordinates": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "path": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncidentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incident"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "corrective_action": {
              "type": "string"
            },
            "preventive_action": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "IncompleteReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "incomplete_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InsuranceContractResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "insurance_contract"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "contract_id": {
              "type": "string"
            },
            "start_date": {
              "type": "string",
              "example": "2024-07-24T00:00:00+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-07-28T00:00:00+02:00"
            },
            "organization_id": {
              "type": "number",
              "example": 123
            },
            "price_excluding_vat": {
              "type": "string",
              "example": 10
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-01T22:28:33+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-10-14T22:28:33+02:00"
            },
            "cancellation_error_text": {
              "type": "string",
              "example": "Test text"
            },
            "cancellation_sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cancelled_at": {
              "type": "string",
              "example": "2024-09-14T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InventoryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "inventory_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 200
            },
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "delivery_id": {
              "type": "number",
              "example": 421
            },
            "signer_full_name": {
              "type": "string",
              "example": "John Otto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-22T10:04:00+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T10:04:25+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "qw112421dwqd"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicePaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_payment"
        },
        "id": {
          "type": "string",
          "example": "205"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 200
            },
            "vat_amount": {
              "type": "number",
              "example": 333
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-09-06T11:36:23+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "advance_payment": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-08T23:59:59+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-10-22T23:59:59+02:00"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1fasfqwqw142aqqw"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_patient_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e333"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenueBreakdownPerUserReportCellsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_breakdown_per_user_report_cell"
        },
        "id": {
          "type": "string",
          "example": "xxr3756fe039e323"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_patient_report_row"
        },
        "id": {
          "type": "number",
          "example": "irpprr6781226528118"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1533
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceRevenuePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_revenue_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1rwqw24rwq211"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceServiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_service"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "bankgiro_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_type"
        },
        "id": {
          "type": "string",
          "example": "3"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "debit": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "InvoicedLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "export_request"
        },
        "id": {
          "type": "string",
          "example": "112dqwdqwfq"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            }
          }
        }
      },
      "type": "object"
    },
    "IpAddressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ip_address"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "ip_address": {
              "type": "string",
              "example": "103.103.87.255"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalDiagnosisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_diagnosis"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1111"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "class": {
              "type": "string"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalElementsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_element"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "mouth"
            },
            "tooth": {
              "type": "string",
              "example": "NA"
            },
            "element": {
              "type": "string",
              "example": "NA"
            },
            "class": {
              "type": "string",
              "example": "reimbursed"
            },
            "hidden": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionOptionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section_option"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemSectionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item_section"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "dropdown"
            },
            "sort_order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 33
            },
            "lab_fee": {
              "type": "number",
              "example": 11
            },
            "price_code": {
              "type": "string"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMacroResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_macro"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoiced_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryMissingBookingEpicrisisResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_booking_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MissingEpicrisisReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "missing_epicrisis_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnsignedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unsigned_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnclaimedJournalEntryReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unclaimed_journal_entry_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "802"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalValidationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_validation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "required": {
              "type": "string"
            },
            "patient_history": {
              "type": "boolean",
              "example": false
            },
            "combination": {
              "type": "boolean",
              "example": false
            },
            "tooth": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceListDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-02T11:29:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabPriceResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabDeliveryResponseDoc": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_delivery"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dispatched_at": {
              "type": "string"
            },
            "received_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 10
            },
            "dispatched_at": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "received_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "dental_lab_order_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-10-02T23:59:59+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_country": {
              "type": "string",
              "example": "Sweden"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_personal_id": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_street_address_1": {
              "type": "string"
            },
            "patient_street_address_2": {
              "type": "string"
            },
            "sender_signed_at": {
              "type": "string",
              "example": "2024-09-02T23:59:59+02:00"
            },
            "closed_by_lab_at": {
              "type": "string",
              "example": "2024-11-02T23:59:59+02:00"
            },
            "accepted_at": {
              "type": "string",
              "example": "2024-11-22T23:59:59+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-26T08:18:09+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 100
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_percentage": {
              "type": "number",
              "example": 5
            },
            "supplier_invoice": {
              "type": "string"
            },
            "dental_lab_order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabDentalLabSupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_dental_lab_supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabUserDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string"
            },
            "last_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LanguageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "iso_code_639_3": {
              "type": "string",
              "example": "aar"
            },
            "iso_code_639_2": {
              "type": "string",
              "example": "aar/aar"
            },
            "iso_code": {
              "type": "string",
              "example": "aa"
            },
            "name": {
              "type": "string",
              "example": "Afar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LastSelectedPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "last_selected_patient"
        },
        "id": {
          "type": "string",
          "example": "lsp6718dfd20707b"
        },
        "attributes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "LegalEntityDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "legal_entity"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "1234123412241115"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T11:36:10+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-06T11:22:13+02:00"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocaleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "locale"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string",
              "example": "sv-se"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LocationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "location"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "city": {
              "type": "string",
              "example": "Uppsala"
            },
            "postal_code": {
              "type": "string",
              "example": "75135"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LoginAttemptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "login_attempt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T12:02:27+00:00"
            },
            "version": {
              "type": "string",
              "example": "1.1.1456"
            },
            "machine_id": {
              "type": "string",
              "example": "Online"
            },
            "ip_address": {
              "type": "string",
              "example": "213.179.18.172"
            },
            "successful": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MacroSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "macro_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-17T10:58:35+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MaintenanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "maintenance"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MasterFindingResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "master_finding"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "stub": {
              "type": "string",
              "example": "caries"
            },
            "name": {
              "type": "string",
              "example": "Karies"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRecipientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_recipient"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "is_read": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageRoomDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_room"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "topic": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "unread": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-31T08:44:51+00:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-31T08:37:57+00:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageSenderDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message_sender"
        },
        "id": {
          "type": "string",
          "example": "21118"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MessageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "message"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "resolved_ticket": {
              "type": "boolean",
              "example": true
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-11T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MonitoredPriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "monitored_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountItemsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "height": {
              "type": "number",
              "example": 1
            },
            "rotate": {
              "type": "number",
              "example": 1
            },
            "sequence": {
              "type": "number",
              "example": 0
            },
            "width": {
              "type": "number",
              "example": 0
            },
            "x": {
              "type": "number",
              "example": 1
            },
            "y": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "recommendation_position": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount_template"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "boolean",
              "example": "Pan 20x30 cm"
            },
            "aspect_ratio": {
              "type": "number",
              "example": 1.842630779
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MountResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "mount"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "aspect_ratio": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NewPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "new_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwwd1dqw21"
        },
        "attributes": {
          "properties": {
            "charged_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NightyDumpResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "nighty_dump"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "region": {
              "type": "string"
            },
            "bucket": {
              "type": "string"
            },
            "key": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "model_type": {
              "type": "string"
            },
            "model_id": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "is_read": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NotificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "notification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfPatientHoursReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_patient_hours_report_row"
        },
        "id": {
          "type": "string",
          "example": "nophrr674f1f5104976"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 1.9167
            },
            "end_date": {
              "type": "string",
              "example": "2024-06-26T23:59:59+02:00"
            },
            "start_date": {
              "type": "string",
              "example": "2024-06-26T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "NumberOfUnreadMessageRoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "number_of_unread_message_room"
        },
        "id": {
          "type": "string",
          "example": "cfcd208495d565ef66e7dff9f98764da"
        },
        "attributes": {
          "properties": {
            "unread_message_rooms": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OpeningHourResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "opening_hours"
        },
        "id": {
          "type": "string",
          "example": "40098"
        },
        "attributes": {
          "properties": {
            "dtstart_in_minutes": {
              "type": "number",
              "example": 10
            },
            "dtend_in_minutes": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderLineResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order_line"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_name": {
              "type": "string",
              "example": "Test name"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 1
            },
            "quantity": {
              "type": "number",
              "example": 2
            },
            "vat_percentage": {
              "type": "number",
              "example": 3
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "supplier_order_id": {
              "type": "number",
              "example": 1
            },
            "confirmed_by_supplier": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization_clinic_setting"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "invoice_bankgiro": {
              "type": "string"
            },
            "government_clinic_id": {
              "type": "string"
            },
            "disable_state_api_cron_fetch": {
              "type": "boolean",
              "example": false
            },
            "auto_create_claim_payment_verifications": {
              "type": "boolean",
              "example": false
            },
            "include_mobile_payment_info_on_invoice": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraOrganizationsCurrentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Katarinavägen 24"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "11645"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_email_address": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:59:38+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-02-16T08:01:01+01:00"
            },
            "invoice_reference": {
              "type": "string"
            },
            "invoice_country_code": {
              "type": "string",
              "example": "Tandblekning"
            },
            "name": {
              "type": "string",
              "example": "SE"
            },
            "invoice_plusgiro": {
              "type": "string",
              "example": "12831-8"
            },
            "invoice_bankgiro": {
              "type": "string",
              "example": "12831-9"
            },
            "invoice_account_number": {
              "type": "string"
            },
            "invoice_clearing_number": {
              "type": "string"
            },
            "invoice_swish_number": {
              "type": "string",
              "example": "1230955831"
            },
            "iban": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "company"
            },
            "cert_exists": {
              "type": "boolean",
              "example": false
            },
            "has_unpaid_invoices": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OutstandingReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "outstanding_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "journal_entry_date": {
              "type": "string",
              "example": "2024-08-02T09:16:31+02:00"
            },
            "journal_entry_id": {
              "type": "string",
              "example": "123"
            },
            "outstanding_amount": {
              "type": "number",
              "example": 300
            },
            "patient_full_name": {
              "type": "string",
              "example": "John Otto"
            },
            "patient_id": {
              "type": "string",
              "example": "233"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PageViewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "page_view"
        },
        "id": {
          "type": "string",
          "example": "pv6772xc71d8327"
        },
        "attributes": {
          "properties": {
            "page": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1qwf12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaidPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "paid_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "8a3f12wqd122d"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-11-11T19:25:31+02:00"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_entry_type"
        },
        "id": {
          "type": "string",
          "example": "pocket"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "pocket"
            },
            "detail_type": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_report_row"
        },
        "id": {
          "type": "string",
          "example": "parrr1425823c6b112"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 5
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodTemplateItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parod_template_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tabindex": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-06-21T08:21:16+02:00"
            },
            "text": {
              "type": "string",
              "example": "Registrering av parodontal status"
            },
            "printed_text": {
              "type": "string",
              "example": "Test printed text"
            },
            "referral": {
              "type": "boolean",
              "example": false
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "entry_type": {
              "type": "string",
              "example": "parodont"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": true
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "status": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_selected_sides": {
              "type": "number"
            },
            "show_bleeding": {
              "type": "boolean",
              "example": true
            },
            "show_furc": {
              "type": "boolean",
              "example": true
            },
            "show_gr": {
              "type": "boolean",
              "example": true
            },
            "show_mobility": {
              "type": "boolean",
              "example": true
            },
            "show_plackindex": {
              "type": "boolean",
              "example": true
            },
            "show_pocket_depth": {
              "type": "boolean",
              "example": true
            },
            "show_pus": {
              "type": "boolean",
              "example": true
            },
            "show_sub": {
              "type": "boolean",
              "example": true
            },
            "show_supra": {
              "type": "boolean",
              "example": true
            },
            "show_lower": {
              "type": "boolean",
              "example": true
            },
            "show_upper": {
              "type": "boolean",
              "example": true
            },
            "history_id": {
              "type": "string",
              "example": "draft"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontMapResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "attributes": {
          "properties": {
            "prev_history_id": {
              "type": "string",
              "example": "123"
            },
            "next_history_id": {
              "type": "string",
              "example": "123"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PasswordResetDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "password_reset"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "reset_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerBirthYearReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_birth_year_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpttrr775064256010a"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 123
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcpdrr6750687d0302a"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-20T00:00:00+02:00"
            },
            "value": {
              "type": "string",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientCountReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_count_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "LabFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "lab_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_invoice"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "organization_name": {
              "type": "string",
              "example": "Mike's Clinic"
            },
            "organization_country": {
              "type": "string",
              "example": "Sverige"
            },
            "organization_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "organization_street_address_1": {
              "type": "string",
              "example": "White street"
            },
            "organization_street_address_2": {
              "type": "string",
              "example": "Stone street"
            },
            "organization_postal_code": {
              "type": "string",
              "example": "111 22"
            },
            "organization_phone_nr": {
              "type": "string"
            },
            "organization_email": {
              "type": "string",
              "example": "test_organization_email@email.com"
            },
            "organization_number": {
              "type": "string",
              "example": "123456-1234"
            },
            "ocr_number": {
              "type": "string",
              "example": "010000000269256"
            },
            "invoice_reference": {
              "type": "string"
            },
            "swish_number": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "rounding_amount": {
              "type": "number",
              "example": 1
            },
            "invoice_fee": {
              "type": "number",
              "example": 1
            },
            "clearing_number": {
              "type": "string"
            },
            "account_number": {
              "type": "string"
            },
            "bankgiro_number": {
              "type": "string"
            },
            "plusgiro_number": {
              "type": "string"
            },
            "comment": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "category": {
              "type": "string",
              "example": "regular"
            },
            "patient_name": {
              "type": "string",
              "example": "Over Lord"
            },
            "patient_street_address_1": {
              "type": "string",
              "example": "Yellow street"
            },
            "patient_street_address_2": {
              "type": "string",
              "example": "Blue street"
            },
            "patient_postal_code": {
              "type": "string",
              "example": "111 24"
            },
            "patient_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "patient_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "patient_reference": {
              "type": "string"
            },
            "third_party_city": {
              "type": "string"
            },
            "third_party_name": {
              "type": "string"
            },
            "third_party_postal_code": {
              "type": "string"
            },
            "third_party_address_1": {
              "type": "string"
            },
            "third_party_address_2": {
              "type": "string"
            },
            "third_party_organization_id": {
              "type": "string"
            },
            "third_party_status": {
              "type": "string"
            },
            "generic_dental_subsidy": {
              "type": "number",
              "example": 1
            },
            "specific_dental_subsidy": {
              "type": "number",
              "example": 2
            },
            "state_dental_subsidy": {
              "type": "number",
              "example": 3
            },
            "read_by_recipient_at": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T11:10:21+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientReviewResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_review"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_name": {
              "type": "string",
              "example": "2"
            },
            "comparison_to_expectations": {
              "type": "string"
            },
            "created_date": {
              "type": "string"
            },
            "extra_special_amazing_amenities": {
              "type": "boolean",
              "example": true
            },
            "extra_special_excellent_quality": {
              "type": "boolean",
              "example": false
            },
            "extra_special_fast_and_painless": {
              "type": "boolean",
              "example": false
            },
            "extra_special_no_waiting_time": {
              "type": "boolean",
              "example": true
            },
            "extra_special_outstanding_treatment": {
              "type": "boolean",
              "example": false
            },
            "extra_special_phenomenal_information": {
              "type": "boolean",
              "example": true
            },
            "extra_special_useful_practical_tips": {
              "type": "boolean",
              "example": false
            },
            "info_rating_advice_and_tips": {
              "type": "number",
              "example": 1
            },
            "info_rating_follow_up": {
              "type": "number",
              "example": 1
            },
            "info_rating_how_to_find_place": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_health": {
              "type": "number",
              "example": 5
            },
            "info_rating_patient_treatment": {
              "type": "number",
              "example": 5
            },
            "info_rating_pre_meeting": {
              "type": "number",
              "example": 5
            },
            "info_rating_pricing": {
              "type": "number",
              "example": 5
            },
            "overall_rating": {
              "type": "number",
              "example": 5
            },
            "private_comment_to_caregiver": {
              "type": "string"
            },
            "rating_quality": {
              "type": "number",
              "example": 5
            },
            "rating_bedside_manner": {
              "type": "number",
              "example": 5
            },
            "rating_hygiene": {
              "type": "string"
            },
            "rating_reception_on_arrival": {
              "type": "string"
            },
            "rating_thoroughness": {
              "type": "string",
              "example": 5
            },
            "rating_wait_time": {
              "type": "number",
              "example": 4
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_tag"
        },
        "id": {
          "type": "string",
          "example": "patient_tag"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "blue"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text_color": {
              "type": "string",
              "example": "yellow"
            },
            "expose": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "string",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "valid_from": {
              "type": "string",
              "example": "2024-07-01T19:25:31+02:00"
            },
            "valid_to": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-10-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTotalReceivableResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_total_receivable"
        },
        "id": {
          "type": "string",
          "example": "d3d9446802a44259755d38e6d163e811"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientTransactionReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_transaction_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199008266972"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "maiden_name": {
              "type": "string",
              "example": "Lore"
            },
            "initials": {
              "type": "string",
              "example": "J.S."
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2002-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "muntra@email.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "patient_number": {
              "type": "string",
              "format": "number",
              "example": "222"
            },
            "invoice_reference": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "wants_anestesia": {
              "type": "boolean",
              "example": false
            },
            "start_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "end_date_free_card": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "free_card_number": {
              "type": "string"
            },
            "county_council_certificate_number": {
              "type": "string"
            },
            "county_council_certificate_end_date": {
              "type": "string"
            },
            "euro_certificate_number": {
              "type": "string"
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "risk_level": {
              "type": "string",
              "example": "1"
            },
            "warning": {
              "type": "boolean",
              "example": true
            },
            "warning_text": {
              "type": "string"
            },
            "xray_id": {
              "type": "string"
            },
            "notes": {
              "type": "string"
            },
            "external_dentist": {
              "type": "string"
            },
            "external_hygienist": {
              "type": "string"
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": true
            },
            "recurring": {
              "type": "boolean",
              "example": false
            },
            "referral_source": {
              "type": "string"
            },
            "teeth_count": {
              "type": "string"
            },
            "untreated_teeth_count": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-01T17:15:30+02:00"
            },
            "nearest_booking_date": {
              "type": "string",
              "example": "2024-08-01T19:25:31+02:00"
            },
            "latest_unbooked_rebooking_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PayerTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payer_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "object_model": {
              "type": "string",
              "example": "patient"
            },
            "object_property": {
              "type": "string",
              "example": "id"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentFileTypesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "BGMax"
            },
            "value": {
              "type": "string",
              "example": "bgmax"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentPerInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_per_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 1
            },
            "vat_amount": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnonymousPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "anonymous_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "account_number": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            },
            "verification_date": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            },
            "verification_text": {
              "type": "string"
            },
            "patient_name": {
              "type": "string"
            },
            "amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTerminalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_terminal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "terminal_id": {
              "type": "string"
            },
            "async": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PaymentTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "payment_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "bankgiro"
            },
            "label": {
              "type": "string",
              "example": "Bankgiro"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PdfResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pdf"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "201941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionPolicyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission_policy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "customer_managed": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-05T17:55:39+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PermissionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "permission"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "action": {
              "type": "string"
            },
            "resource": {
              "type": "string"
            },
            "label": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "person"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string",
              "example": "199002240038"
            },
            "first_name": {
              "type": "string",
              "example": "Test name"
            },
            "last_name": {
              "type": "string",
              "example": "Test last name"
            },
            "maiden_name": {
              "type": "string",
              "example": "Test maiden name"
            },
            "initials": {
              "type": "string"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01001"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2000-06-14T00:00:00+02:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+380958957041"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string",
              "example": "testcq@mail.com"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalAccessTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_access_token"
        },
        "id": {
          "type": "string",
          "example": "19186557b98cd78214d8b1a52adbebfc8e1e943db77305ecef4ce2a103037a737517052e3scc5c6y"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test"
            },
            "revoked": {
              "type": "boolean",
              "example": false
            },
            "access_token": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PersonalIdsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "personal_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PharmaceuticalArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmaceutical_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "article_code": {
              "type": "string",
              "example": "010777"
            },
            "article_name": {
              "type": "string",
              "example": "Alvedon®"
            },
            "is_pharmaceutical": {
              "type": "boolean",
              "example": true
            },
            "assortment_code": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string",
              "example": "Muntra"
            },
            "drug_form": {
              "type": "string"
            },
            "high_risk_pharmaceutical": {
              "type": "boolean",
              "example": false
            },
            "is_reimbursed": {
              "type": "boolean",
              "example": false
            },
            "non_approved": {
              "type": "boolean",
              "example": true
            },
            "npl_pack_id": {
              "type": "string",
              "example": "19780408400186"
            },
            "npl_id": {
              "type": "string",
              "example": "25780408400116"
            },
            "package_text": {
              "type": "string",
              "example": "Strip, 10 suppositorier"
            },
            "prescription_required": {
              "type": "boolean",
              "example": true
            },
            "preventive_action": {
              "type": "string"
            },
            "quantity_text": {
              "type": "string",
              "example": "10 styck"
            },
            "reference_price": {
              "type": "number",
              "example": "0.00"
            },
            "sales_stopped": {
              "type": "boolean",
              "example": true
            },
            "strength": {
              "type": "string",
              "example": "500 mg"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalPharmacyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_pharmacy"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "code": {
              "type": "string",
              "example": "7350045512239"
            },
            "label": {
              "type": "string",
              "example": "RECEPTBREVLÅDAN"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PhoneCallResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "phone_call"
        },
        "id": {
          "type": "string",
          "example": "c5074a1e-b8c6-4e98-b6de-51f172c61711"
        },
        "attributes": {
          "properties": {
            "from": {
              "type": "string",
              "example": "+46734100421"
            },
            "to": {
              "type": "string",
              "example": "+46840906333"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PinnedCalendarItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "account"
        },
        "id": {
          "type": "string",
          "example": "6202756"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimRow": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "fk_id": {
              "type": "number",
              "example": 1
            },
            "diagnosis": {
              "type": "string"
            },
            "treatment": {
              "type": "string"
            },
            "tooth": {
              "type": "string"
            },
            "position": {
              "type": "string"
            },
            "price": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreAssessmentClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "pre_assessment_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "care_provider_org_number": {
              "type": "string"
            },
            "government_organization_id": {
              "type": "string"
            },
            "user_ssn": {
              "type": "string"
            },
            "patient_ssn": {
              "type": "string"
            },
            "patient_fin": {
              "type": "string"
            },
            "dentist_ssn": {
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "fk_claim_id": {
              "type": "number"
            },
            "fk_claim_status": {
              "type": "string"
            },
            "submitted": {
              "type": "boolean"
            },
            "submitted_date": {
              "type": "string"
            },
            "answered_at": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "signed_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreSignedUrlResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "presigned_url"
        },
        "id": {
          "type": "string",
          "example": "https://media.muntra.com/patients/111111111/688f78532240feefb27113a80c3db84e8f8b09a7fe4f4.png?Expires=1737108561&Signature=qcalCAQYG8lUoFMoOsmNITQ4Pc1p-nhdD8hQ7LaeM5DJlLtgY8ier~LZrDVIEp3d-VCzH75YWX3zS0TXAu6cJav4qb3o7hdre6p2lmYRnUIs7GDCN6AO9IYfcLmnByru7YC8Q1DQL7sWkRVrBcSSLrpOuhDQjPGFj~6a335uGfEw1t1k660cVcRiRmjGjBTEQEFSjx7QRe-hdgDqJGFb9rD22RS17vSBsuQHuyBDROCu-~zMtv7dkVV55L0DLQQEaNkdFpZkSUY9o~3C22PpMotlTo0SnDRWSEzJl2Bv0phdqX03j9zTh~JEorOC9Yv5c8yZCNHWpRN2i0wVYWW2Eg__&Key-Pair-Id=K3KD4VOQOWIAAU"
        },
        "attributes": {
          "type": "object"
        }
      },
      "type": "object"
    },
    "PreferenceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "preference"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "counter": {
              "type": "number",
              "example": 2
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PriceSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p123"
            },
            "treatment_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 2
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-19T13:31:14+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PricesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "price"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string",
              "example": "p701"
            },
            "price_type": {
              "type": "string",
              "example": ""
            },
            "description": {
              "type": "string",
              "example": "Fyllning av en yta på framtand eller hörntand"
            },
            "printed_text": {
              "type": "string",
              "example": ""
            },
            "total_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 0
            },
            "lab_fee": {
              "type": "number",
              "example": 0
            },
            "included_material": {
              "type": "string",
              "example": "Komposit"
            },
            "time_based": {
              "type": "boolean",
              "example": true
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "standard_duration_in_minutes": {
              "type": "number",
              "example": 0
            },
            "multi_tooth": {
              "type": "boolean",
              "example": false
            },
            "class": {
              "type": "string",
              "example": ""
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PrinterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "printer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "manufacturer_name": {
              "type": "string",
              "example": "Test manufacturer name"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "type": {
              "type": "string"
            },
            "hardware_id": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraProceduresResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandblekning"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Botox-behandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PromoCodeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "promo_code"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "eq"
            },
            "code": {
              "type": "string",
              "example": "UZSUXF"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal_response"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "gives_consent": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProposalResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "proposal"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "New Project Proposal"
            },
            "description": {
              "type": "string",
              "example": "This is a detailed description of the proposal."
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PublicPersonDataResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "public_person_datum"
        },
        "id": {
          "type": "string",
          "example": "6776dcae07f91"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Sareksvägen 18 lgh 1002"
            },
            "address_2": {
              "type": "string"
            },
            "assembly": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "country": {
              "type": "string",
              "example": "Sweden"
            },
            "county": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "municipality": {
              "type": "string"
            },
            "postal_code": {
              "type": "number",
              "example": "16735"
            },
            "note": {
              "type": "string",
              "example": "Test note"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityActionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_action"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "type": {
              "type": "string"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-10-22T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_item"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityRruleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity_rrule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "frequency": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QmsActivityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "qms_activity"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "date": {
              "type": "string",
              "example": "2028-10-22T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "MuntraQuestionTagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "muntra_question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "muntra"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionTagDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question_tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "calendar"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string",
              "example": "Test body"
            },
            "view_count": {
              "type": "number",
              "example": 2
            },
            "up_vote_count": {
              "type": "number",
              "example": 3
            },
            "down_vote_count": {
              "type": "number",
              "example": 4
            },
            "creation_date": {
              "type": "string",
              "example": "2021-11-04T12:12:54+00:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-11-04T12:12:54+00:00"
            },
            "closed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking_default"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "status": {
              "type": "string"
            },
            "booking_duration": {
              "type": "number",
              "example": 30
            },
            "months_to_booking": {
              "type": "number",
              "example": 12
            },
            "auto_rebook": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RebookingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "rebooking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-31T00:00:00+02:00"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 10
            },
            "rebooked": {
              "type": "boolean",
              "example": true
            },
            "last_treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "next_treatment_date": {
              "type": "string",
              "example": "2024-09-08T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceiptResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "receipt"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "receipt_number": {
              "type": "string"
            },
            "cash_register_designation": {
              "type": "string"
            },
            "control_code": {
              "type": "string"
            },
            "control_unit_id": {
              "type": "string"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-04T19:25:31+02:00"
            },
            "copy_printed_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementRuleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_rule"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "share": {
              "type": "number",
              "example": 50
            },
            "from": {
              "type": "number",
              "example": 3000
            },
            "to": {
              "type": "number",
              "example": 10000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReimbursementTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "reimbursement_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "FK & patient name"
            },
            "active": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceEmailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_email"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "to": {
              "type": "string"
            },
            "to_name": {
              "type": "string"
            },
            "subject": {
              "type": "string",
              "example": "Test subject"
            },
            "body": {
              "type": "string",
              "example": "Test text"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-10-30T15:00:00+01:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-10-30T15:00:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponseResp": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance_response"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "external": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "receiver_signed_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "read_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ReceivedRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "received_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SentRemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sent_remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RemittanceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "remittance"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "external_id": {
              "type": "string"
            },
            "patient_address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "patient_address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "patient_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "patient_date_of_birth": {
              "type": "string"
            },
            "patient_e_mail_address": {
              "type": "string",
              "example": "patient_email_address@testemail.com"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_gender": {
              "type": "string",
              "example": "male"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_municipality": {
              "type": "string"
            },
            "patient_phone_number_cell": {
              "type": "string"
            },
            "patient_phone_number_home": {
              "type": "string"
            },
            "patient_phone_number_work": {
              "type": "string"
            },
            "patient_postal_code": {
              "type": "string"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "sender_clinic_address_1": {
              "type": "string",
              "example": "Test address clinic sender 1"
            },
            "sender_clinic_address_2": {
              "type": "string",
              "example": "Test address clinic sender 2"
            },
            "sender_clinic_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "sender_clinic_email_address": {
              "type": "string",
              "example": "sender_clinic_email_address@testemail.com"
            },
            "sender_clinic_name": {
              "type": "string"
            },
            "sender_clinic_phone_number": {
              "type": "string"
            },
            "sender_clinic_postal_code": {
              "type": "string"
            },
            "receiver_clinic_address_1": {
              "type": "string",
              "example": "Test receiver clinic address 1"
            },
            "receiver_clinic_address_2": {
              "type": "string",
              "example": "Test receiver clinic address 2"
            },
            "receiver_clinic_city": {
              "type": "string",
              "example": "Berlin"
            },
            "receiver_clinic_email_address": {
              "type": "string",
              "example": "receiver_clinic_email_address@testemail.com"
            },
            "receiver_clinic_name": {
              "type": "string"
            },
            "receiver_clinic_phone_number": {
              "type": "string"
            },
            "receiver_clinic_postal_code": {
              "type": "string"
            },
            "receiver_user_email_address": {
              "type": "string",
              "example": "receiver_user_email_address@testemail.com"
            },
            "receiver_user_first_name": {
              "type": "string",
              "example": "John"
            },
            "receiver_user_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "receiver_user_phone_number": {
              "type": "string"
            },
            "receiver_user_social_security_number": {
              "type": "string"
            },
            "receiver_user_signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "remittance_background": {
              "type": "string"
            },
            "remittance_comment": {
              "type": "string"
            },
            "remittance_question": {
              "type": "string"
            },
            "desired_treatment": {
              "type": "string"
            },
            "remittance_response": {
              "type": "string"
            },
            "urgent": {
              "type": "boolean",
              "example": true
            },
            "consultation": {
              "type": "boolean",
              "example": true
            },
            "booked": {
              "type": "boolean",
              "example": true
            },
            "priority": {
              "type": "string"
            },
            "due_date": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "signed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "sender_user_email_address": {
              "type": "string",
              "example": "sender_user_email_address@testemail.com"
            },
            "sender_user_first_name": {
              "type": "string",
              "example": "Bob"
            },
            "sender_user_last_name": {
              "type": "string",
              "example": "Blue"
            },
            "sender_user_phone_number": {
              "type": "string"
            },
            "sender_user_social_security_number": {
              "type": "string"
            },
            "receiver_first_view_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "confirmed_receipt_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "declined_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "printed_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "approved_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RepaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "repayment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ResourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "resource"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RiskEvaluationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "risk_evaluation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-06-27T13:41:22+02:00"
            },
            "caries_diet": {
              "type": "number",
              "example": 0
            },
            "caries_fluor_exposure": {
              "type": "number",
              "example": 0
            },
            "caries_history": {
              "type": "number",
              "example": 0
            },
            "caries_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "caries_other": {
              "type": "number",
              "example": 0
            },
            "caries_progression": {
              "type": "number",
              "example": 0
            },
            "caries_saliva": {
              "type": "number",
              "example": 0
            },
            "generic_age": {
              "type": "number",
              "example": 0
            },
            "generic_cooperation_willingness": {
              "type": "number",
              "example": 0
            },
            "generic_dental_fear": {
              "type": "number",
              "example": 0
            },
            "generic_diseases": {
              "type": "number",
              "example": 0
            },
            "generic_medications": {
              "type": "number",
              "example": 0
            },
            "parodontal_activity": {
              "type": "number",
              "example": 0
            },
            "parodontal_bleeding": {
              "type": "number",
              "example": 0
            },
            "parodontal_oral_hygiene": {
              "type": "number",
              "example": 0
            },
            "parodontal_plaque": {
              "type": "number",
              "example": 0
            },
            "parodontal_tobacco_use": {
              "type": "number",
              "example": 0
            },
            "technical_bite_physiology": {
              "type": "number",
              "example": 0
            },
            "technical_erosion": {
              "type": "number",
              "example": 0
            },
            "technical_fillings_and_crowns": {
              "type": "number",
              "example": 0
            },
            "technical_other": {
              "type": "number",
              "example": 0
            },
            "technical_prosthetics": {
              "type": "number",
              "example": 0
            },
            "technical_root_fillings": {
              "type": "number",
              "example": 0
            },
            "signed_at": {
              "type": "string",
              "example": "2024-07-27T12:41:22+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-05-27T12:41:22+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "role"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Tandläkare"
            },
            "slug": {
              "type": "string",
              "example": "dentist"
            },
            "occupational_code": {
              "type": "string",
              "example": "TAN"
            },
            "is_caregiver_role": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "RoomsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "room"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "floor": {
              "type": "string",
              "example": "5"
            },
            "order": {
              "type": "number",
              "example": 10
            },
            "replace_with_default_users": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SafeModeConfigResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "safe_mode_config"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "password": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "InvoiceSalesPerArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "invoice_sales_per_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1wdqgqw21g3f44"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Test clinic name"
            },
            "clinic_id": {
              "type": "string",
              "example": "134"
            },
            "year": {
              "type": "string",
              "example": "2024"
            },
            "month": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_description": {
              "type": "string",
              "example": "Test description"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "amount_excluding_vat": {
              "type": "number",
              "example": 15
            },
            "vat_amount": {
              "type": "number",
              "example": 10
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerDateReporRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2018-01-05T00:00:00+01:00"
            },
            "value": {
              "type": "number",
              "example": 1500
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "pcrr6750733ce1182"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            },
            "value": {
              "type": "number"
            },
            "vat_amount": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "number",
              "example": 15
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SalesVerificationPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sales_verifications_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "total_sales_amount": {
              "type": "number",
              "example": 100
            },
            "user_share": {
              "type": "number"
            },
            "verification_id": {
              "type": "string"
            },
            "verification_number": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchAnimalOwnerResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_animal_owner"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "id_number": {
              "type": "string",
              "example": "1234123415"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "organization"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchOrganizationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Gatuadress #11"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Ort #11"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "01001"
            },
            "organization_name": {
              "type": "string",
              "example": "Företagsnamn #11"
            },
            "organization_number": {
              "type": "string",
              "example": "010011-7890"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchPatientResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_number": {
              "type": "string",
              "example": "256"
            },
            "social_security_number": {
              "type": "string",
              "example": "199003242402"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "date_of_birth": {
              "type": "string",
              "example": "2005-06-14T00:00:00+02:00"
            },
            "phone_number_work": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "380951957739"
            },
            "e_mail_address": {
              "type": "string",
              "example": "triq@testmain.com"
            },
            "clinic_name": {
              "type": "string",
              "example": "Healthful #2"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "event"
        },
        "id": {
          "type": "string",
          "example": "bfa1d33f97396a54b3083d0c03e94719"
        },
        "attributes": {
          "properties": {
            "invoice_address_1": {
              "type": "string",
              "example": "Katarinavägen 15"
            },
            "invoice_address_2": {
              "type": "string"
            },
            "invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "invoice_postal_code": {
              "type": "string"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Muntra AB"
            },
            "organization_number": {
              "type": "string",
              "example": "556935-2726"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SearchUserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "search_user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "role_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ShrinkageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "shrinkage"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "price_name": {
              "type": "string"
            },
            "purchase_price_excluding_vat": {
              "type": "number",
              "example": 3
            },
            "quantity": {
              "type": "number",
              "example": 5
            },
            "signed_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SickReportResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sick-report"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string"
            },
            "caregiver_id": {
              "type": "string"
            },
            "clinic_id": {
              "type": "string"
            },
            "organization_id": {
              "type": "string"
            },
            "main_icd_code_id": {
              "type": "string"
            },
            "patient_first_name": {
              "type": "string",
              "example": "John"
            },
            "patient_last_name": {
              "type": "string",
              "example": "Otto"
            },
            "patient_social_security_number": {
              "type": "string"
            },
            "caregiver_first_name": {
              "type": "string",
              "example": "Mike"
            },
            "caregiver_last_name": {
              "type": "string",
              "example": "Smith"
            },
            "caregiver_social_security_number": {
              "type": "string"
            },
            "professional_designation": {
              "type": "string"
            },
            "caregiver_third_party_id": {
              "type": "string"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_phone_number": {
              "type": "string"
            },
            "clinic_postal_code": {
              "type": "string"
            },
            "clinic_street_address_1": {
              "type": "string"
            },
            "organization_name": {
              "type": "string"
            },
            "organization_number": {
              "type": "string"
            },
            "organization_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "organization_postal_code": {
              "type": "string"
            },
            "organization_street_address_1": {
              "type": "string"
            },
            "organization_clinic_third_party_id": {
              "type": "string"
            },
            "employer_name": {
              "type": "string",
              "example": "Bob Dob"
            },
            "employment_percentage": {
              "type": "number",
              "example": 12
            },
            "number_of_employers": {
              "type": "number",
              "example": 100
            },
            "from_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-09-09T19:25:31+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-22T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-24T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SigningTokenResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "signing_token"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "personal_id": {
              "type": "string"
            },
            "origin": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsInvitationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_invitation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string",
              "example": "Test message"
            },
            "segments": {
              "type": "number",
              "example": 3
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-17T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T10:26:13+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 1
            },
            "only_send_if_booking_unconfirmed": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsReminderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_reminder"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "number"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-18T00:00:00+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-18T17:06:51+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "send_number_of_hours_before_booking": {
              "type": "number",
              "example": 20
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "sender_id": {
              "type": "string"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SmsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "sms"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "sender_id": {
              "type": "string",
              "example": "123"
            },
            "from": {
              "type": "string"
            },
            "to": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "segments": {
              "type": "string"
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "sent_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-03T19:25:31+02:00"
            },
            "scheduled": {
              "type": "boolean",
              "example": false
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail_template"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SnailMailResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "snail_mail"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Gorro"
            },
            "last_name": {
              "type": "string",
              "example": "Gordon"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Kyiv"
            },
            "postal_code": {
              "type": "string"
            },
            "color": {
              "type": "string"
            },
            "body": {
              "type": "string"
            },
            "wait_number_of_hours_after_send": {
              "type": "number",
              "example": 12
            },
            "sent_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "only_send_if_booking_unconfirmed": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_invoice_unread": {
              "type": "boolean",
              "example": true
            },
            "only_send_if_remittance_unread": {
              "type": "boolean",
              "example": true
            },
            "scheduled": {
              "type": "boolean",
              "example": true
            },
            "message_status": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-11T29:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SpecialityResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "speciality"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Bettfysiologi"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StandardOperatingProcedureResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "standard_operating_procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "created_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceListResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "used": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-01-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StatePriceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_insurance_agency_id": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "reference_price_general_dentistry": {
              "type": "number",
              "example": 25.3
            },
            "reference_price_specialist_dentistry": {
              "type": "number",
              "example": 33.3
            },
            "reimbursement_amount": {
              "type": "number",
              "example": 77.2
            },
            "included_material": {
              "type": "string"
            },
            "allowed_for_stb": {
              "type": "boolean",
              "example": true
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "StbDiseaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "stb_disease"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string",
              "example": "1100"
            },
            "description": {
              "type": "string",
              "example": "Muntorrhet pga. läkemedelsbehandling"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierArticleResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_article"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_excluding_vat": {
              "type": "number",
              "example": 1
            },
            "supplier_product_code": {
              "type": "string",
              "example": "SMS_INVITATION_SWEDEN"
            },
            "article_name": {
              "type": "string",
              "example": "Kallelse via SMS"
            },
            "price_is_percent_of_transaction_amount": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "state_price_list"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "product_code": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "price_excluding_vat_per_quantity": {
              "type": "number",
              "example": 33
            },
            "quantity": {
              "type": "number",
              "example": 15
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 11
            },
            "vat_percentage": {
              "type": "number",
              "example": 30
            },
            "supplier_invoice": {
              "type": "string"
            },
            "order_line": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierInvoiceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_invoice"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "customer_invoice_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "customer_invoice_country_name": {
              "type": "string",
              "example": "Sweden"
            },
            "customer_invoice_email": {
              "type": "string",
              "example": "test@testemail.com"
            },
            "customer_invoice_postal_code": {
              "type": "string"
            },
            "customer_invoice_street_address1": {
              "type": "string"
            },
            "customer_invoice_street_address2": {
              "type": "string"
            },
            "customer_name": {
              "type": "string"
            },
            "supplier_bankgiro_number": {
              "type": "string"
            },
            "supplier_city": {
              "type": "string",
              "example": "Kyiv"
            },
            "supplier_country": {
              "type": "string",
              "example": "Ukraine"
            },
            "supplier_email": {
              "type": "string",
              "example": "test@testsupplieremail.com"
            },
            "supplier_name": {
              "type": "string",
              "example": "John"
            },
            "supplier_number": {
              "type": "string"
            },
            "supplier_phone_nr": {
              "type": "string"
            },
            "supplier_postal_code": {
              "type": "string"
            },
            "supplier_street_address_1": {
              "type": "string"
            },
            "supplier_street_address_2": {
              "type": "string"
            },
            "invoice_date": {
              "type": "string",
              "example": "2024-01-01T00:00:00+01:00"
            },
            "due_date": {
              "type": "string",
              "example": "2024-08-01T00:00:00+01:00"
            },
            "ocr_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentMethodResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment_method"
        },
        "id": {
          "type": "string",
          "example": "12"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierPaymentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_payment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 100
            },
            "vat_amount": {
              "type": "number",
              "example": 100
            },
            "description": {
              "type": "string",
              "example": "Test description"
            },
            "succeeded": {
              "type": "boolean",
              "example": true
            },
            "paid_at": {
              "type": "string",
              "example": "2024-11-01T08:00:00+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tag": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-12-24T10:28:49+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupplierSettingsForOrganizationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "supplier_settings_for_organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "api_username_at_supplier": {
              "type": "string"
            },
            "api_password_at_supplier": {
              "type": "string"
            },
            "organization_id_at_supplier": {
              "type": "string"
            },
            "preferred_supplier": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportAgentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_agent"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Ked"
            },
            "initials": {
              "type": "string",
              "example": "JO"
            },
            "gender": {
              "type": "string"
            },
            "address_1": {
              "type": "string"
            },
            "address_2": {
              "type": "string"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string"
            },
            "municipality": {
              "type": "string"
            },
            "date_of_birth": {
              "type": "string"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "phone_number_home": {
              "type": "string"
            },
            "phone_number_work": {
              "type": "string"
            },
            "fax_number": {
              "type": "string"
            },
            "e_mail_address": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-11T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SupportEmailAdressResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "support_email_adress"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "email": {
              "type": "string",
              "example": "test@mail.com"
            },
            "default": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-07-29T10:11:17+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "SurfacesResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "surface"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "surface": {
              "type": "string"
            },
            "selectable": {
              "type": "string",
              "example": "tooth"
            },
            "tooth": {
              "type": "string",
              "example": "11"
            },
            "points": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TagResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tag"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "color": {
              "type": "string",
              "example": "green"
            },
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TandenCheckResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tanden_check"
        },
        "id": {
          "type": "string",
          "example": "id"
        },
        "attributes": {
          "properties": {
            "eligble": {
              "type": "boolean",
              "example": "Tandblekning"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "stb_amount_available": {
              "type": "number",
              "example": 10
            },
            "hcd_amount": {
              "type": "number",
              "example": 10
            },
            "hcd_start_date": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "last_treatment_date": {
              "type": "string"
            },
            "faultcode": {
              "type": "number"
            },
            "faultstring": {
              "type": "string"
            },
            "error_code": {
              "type": "number"
            },
            "error_text": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-01T11:35:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "channel": {
              "type": "string",
              "example": "web"
            },
            "public": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-06T10:58:43+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "2"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TenantDatabaseResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tenant_database"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "database": {
              "type": "string",
              "example": "prodentor_823"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryTextTemplateResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry_text_template"
        },
        "id": {
          "type": "string",
          "example": "220731"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "text": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyIdResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_id"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyOrganizationClinicSettingsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_organization_clinic_settings"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "third_party_clinic_id": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyPatientCategoryResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party_patient_category"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "75% Horisontalt overbitt, 9 mm eller mer"
            },
            "code": {
              "type": "string",
              "example": "887"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThirdPartyResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "third_party"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string",
              "example": "232100-0024"
            },
            "organization_name": {
              "type": "string",
              "example": "Folktandvården Uppsala"
            },
            "invoice_address_1": {
              "type": "string",
              "example": "Folktandvården FE72"
            },
            "invoice_address_2": {
              "type": "string",
              "example": "Refnr: TV3150001 Box 6363"
            },
            "invoice_postal_code": {
              "type": "string",
              "example": "75135"
            },
            "invoice_city": {
              "type": "string",
              "example": "Uppsala"
            },
            "invoice_email_address": {
              "type": "string",
              "example": "niels@muntra.se"
            },
            "invoice_phone_number": {
              "type": "string"
            },
            "invoice_phone_number_2": {
              "type": "string"
            },
            "invoice_phone_mobile": {
              "type": "string"
            },
            "invoice_fax": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "ean_number": {
              "type": "string",
              "example": "0121456784012"
            },
            "name": {
              "type": "string",
              "example": "Google Authenticator"
            },
            "category": {
              "type": "string",
              "example": "regular"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ThreeDImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "three-d-image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "example": "application/octet-stream"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "width": {
              "type": "number",
              "example": 1024
            },
            "height": {
              "type": "number",
              "example": 768
            },
            "actual_width_in_mm": {
              "type": "number",
              "example": 1
            },
            "actual_height_in_mm": {
              "type": "number",
              "example": 2
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "original": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TicketResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "ticket"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "subject": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-31T00:00:00+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-10-31T00:00:00+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSideResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "buccal"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "buccal"
            },
            "two_side": {
              "type": "boolean",
              "example": false
            },
            "four_side": {
              "type": "boolean",
              "example": false
            },
            "six_side": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": false
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothSurfaceSnapshotResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth_surface_snapshot"
        },
        "id": {
          "type": "string",
          "example": "T_11"
        },
        "attributes": {
          "properties": {
            "element_id": {
              "type": "string",
              "example": "11"
            },
            "position": {
              "type": "number",
              "example": 22
            },
            "status": {
              "type": "string",
              "example": "intact"
            },
            "treated": {
              "type": "boolean",
              "example": true
            },
            "type": {
              "type": "string",
              "example": "permanent"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "deepest_pocket": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ToothTeethResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "tooth"
        },
        "id": {
          "type": "number",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "tooth": {
              "type": "string",
              "example": "19"
            },
            "jaw": {
              "type": "string",
              "example": "upper"
            },
            "side": {
              "type": "string",
              "example": "right"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string",
              "example": "1040"
            },
            "account_name": {
              "type": "string",
              "example": "Licenser"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TranslationResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "translation"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "number"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentArticleReportRowsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "price_code": {
              "type": "string"
            },
            "count": {
              "type": "number",
              "example": 123
            },
            "lab_fee": {
              "type": "number",
              "example": 10
            },
            "value": {
              "type": "number",
              "example": 1000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerDateReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_date_report_row"
        },
        "id": {
          "type": "string",
          "example": "1dwq1d21dddqwq1"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AllTreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "all_treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr673c8acec87be"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p831"
            },
            "count": {
              "type": "number",
              "example": 5
            },
            "lab_fee": {
              "type": "number",
              "example": 3
            },
            "value": {
              "type": "number",
              "example": 1000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientArticleReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_article_report_row"
        },
        "id": {
          "type": "string",
          "example": "tarr67475f68f09ed"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Justering av avtagbar protes"
            },
            "price_code": {
              "type": "string",
              "example": "p835"
            },
            "count": {
              "type": "number",
              "example": 1
            },
            "lab_fee": {
              "type": "number",
              "example": 1
            },
            "value": {
              "type": "number",
              "example": 3000
            },
            "patient_id": {
              "type": "number",
              "example": 155
            },
            "patient_name": {
              "type": "string",
              "example": "John Smith"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerPatientReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_patient_report_row"
        },
        "id": {
          "type": "string",
          "example": "qwfqqw12f2121"
        },
        "attributes": {
          "properties": {
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "label": {
              "type": "string",
              "example": "Test label"
            },
            "value": {
              "type": "number",
              "example": 10
            },
            "vat_amount": {
              "type": "number",
              "example": 5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "spurr6756fb2d82b87"
        },
        "attributes": {
          "properties": {
            "user_id": {
              "type": "number",
              "example": 2
            },
            "label": {
              "type": "string",
              "example": "Niels Rask"
            },
            "value": {
              "type": "number",
              "example": 2000
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "CountOfTreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "count_of_treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "tpn618df83f46a9a"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 277
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "order": {
              "type": "number",
              "example": 1
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanItemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_item"
        },
        "id": {
          "type": "string",
          "example": "4"
        },
        "attributes": {
          "properties": {
            "entry_type": {
              "type": "string"
            },
            "price_code": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-08-31T00:00:00+02:00"
            },
            "referral": {
              "type": "boolean",
              "example": true
            },
            "quantity": {
              "type": "number",
              "example": 1
            },
            "fee": {
              "type": "number",
              "example": 11
            },
            "lab_fee": {
              "type": "number",
              "example": 22
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 33
            },
            "vat_percentage": {
              "type": "number",
              "example": 11.4
            },
            "duration_in_minutes": {
              "type": "integer",
              "example": 30
            },
            "multi_tooth": {
              "type": "boolean",
              "example": true
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "order": {
              "type": "string"
            },
            "done": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlansResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Terapiplan"
            },
            "terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "reference": {
              "type": "string",
              "example": "Test reference"
            },
            "atb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "disregard_subscription": {
              "type": "boolean",
              "example": false
            },
            "high_cost_amount_before_treatments": {
              "type": "number",
              "example": 1
            },
            "stb_amount_claimed": {
              "type": "number",
              "example": 1
            },
            "validated_reimbursement_amount": {
              "type": "string"
            },
            "hcd_end_date": {
              "type": "string"
            },
            "treatment_plan_free_text": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": false
            },
            "created_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-06-28T12:14:26+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "test_file.xml"
            },
            "type": {
              "type": "string",
              "example": "text/plain"
            },
            "size_in_bytes": {
              "type": "number"
            },
            "backup": {
              "type": "string"
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-01T23:59:59+02:00"
            },
            "from_date": {
              "type": "string",
              "example": "2024-10-01T23:59:59+02:00"
            },
            "to_date": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            },
            "report_type": {
              "type": "string",
              "example": "libretto"
            },
            "only_include_reimbursed_examinations": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportFileTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "value": {
              "type": "string",
              "example": "libretto"
            },
            "name": {
              "type": "string",
              "example": "Vårdrapportering till Libretto"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_row"
        },
        "id": {
          "type": "string",
          "example": "xtr6756fe039e323"
        },
        "attributes": {
          "properties": {
            "label": {
              "type": "string",
              "example": "Protes"
            },
            "value": {
              "type": "number",
              "example": 0
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentSelectResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_select"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "treatment_code": {
              "type": "string",
              "example": "US"
            },
            "price_code": {
              "type": "string"
            },
            "recommendation_position": {
              "type": "number",
              "example": 3
            },
            "created_at": {
              "type": "string",
              "example": "2024-12-24T13:56:36+01:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "text": {
              "type": "string",
              "example": "Amalgam"
            },
            "code": {
              "type": "string",
              "example": "AM"
            },
            "selectable": {
              "type": "string",
              "example": "surface"
            },
            "crown_background_color": {
              "type": "string",
              "example": "rgba(0,0,0,0.8)"
            },
            "crown_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_background_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "root_border_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "clear_history": {
              "type": "boolean",
              "example": true
            },
            "surface_text": {
              "type": "string",
              "example": "Test text"
            },
            "surface_text_color": {
              "type": "string",
              "example": "rgba(255,255,255,1)"
            },
            "tooth_status": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwainDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "twain_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "data_source_manager_id": {
              "type": "string"
            },
            "manufacturer_name": {
              "type": "string"
            },
            "product_family": {
              "type": "string"
            },
            "product_name": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "version_info": {
              "type": "string"
            },
            "version_major": {
              "type": "string"
            },
            "version_minor": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "noise_reduction_level": {
              "type": "number"
            },
            "path_to_files": {
              "type": "string"
            },
            "monitor_folder_path": {
              "type": "string"
            },
            "monitor_folder_extension": {
              "type": "string"
            },
            "keepalive": {
              "type": "boolean",
              "example": true
            },
            "show_in_menu": {
              "type": "boolean",
              "example": true
            },
            "show_sensor_ui": {
              "type": "boolean",
              "example": true
            },
            "pass_parent_window_to_source": {
              "type": "boolean",
              "example": true
            },
            "use_modal_mode": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-11-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TwoFactorAuthenticationSetupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "two_factor_authentication_setup"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "activated_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnassignedReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unassigned_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimPaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptClaimReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_claim_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptInvoicePaymentReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_invoice_payment_report_row"
        },
        "id": {
          "type": "string",
          "example": "af12f2154gewgw1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 100
            },
            "patient_id": {
              "type": "string",
              "example": "123"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnbookkeptPatientInvoiceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unbookkept_patient_invoice_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UninvoicableLabFeePerUserReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "uninvoicable_lab_fee_per_user_report_row"
        },
        "id": {
          "type": "string",
          "example": "asf12ff11212aqa"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadDentalLabOrderReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_dental_lab_order_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadReceivedRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_received_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UnreadSentRemittanceReportRowResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "unread_sent_remittance_report_row"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "count": {
              "type": "number",
              "example": 1
            },
            "patient_id": {
              "type": "string",
              "example": "11"
            },
            "patient_name": {
              "type": "string",
              "example": "John"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicDefaultsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_report_file_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "enable_shortcuts": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": true
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": true
            },
            "enable_done": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": true
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": true
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": true
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": true
            },
            "default_treatment_plan_terms": {
              "type": "string",
              "example": "Detta är ett kostnadsförslag som kan komma att revideras vid förändrad behandlingsplan."
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": true
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": true
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicSeedResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic_seed"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "property": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserAtClinicsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_at_clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "change_user_allowed": {
              "type": "boolean",
              "example": true
            },
            "allowed_to_do_treatment": {
              "type": "boolean",
              "example": true
            },
            "use_specialist_reference_prices": {
              "type": "boolean",
              "example": true
            },
            "use_patient_properties_for_teeth_statistics": {
              "type": "boolean",
              "example": true
            },
            "save_delay_in_milliseconds": {
              "type": "boolean",
              "example": 3000
            },
            "remittance_user": {
              "type": "boolean",
              "example": false
            },
            "enable_shortcuts": {
              "type": "boolean",
              "example": true
            },
            "require_patient_email": {
              "type": "boolean",
              "example": false
            },
            "require_patient_cellphone": {
              "type": "boolean",
              "example": true
            },
            "default_to_recurring_patient": {
              "type": "boolean",
              "example": false
            },
            "confirm_booking_time_changing": {
              "type": "boolean",
              "example": true
            },
            "auto_approve_patient_booking": {
              "type": "boolean",
              "example": true
            },
            "auto_include_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_sms_invitation": {
              "type": "boolean",
              "example": true
            },
            "auto_include_sms_reminder": {
              "type": "boolean",
              "example": true
            },
            "auto_include_snail_mail_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_include_declaration_email": {
              "type": "boolean",
              "example": true
            },
            "auto_include_declaration_sms": {
              "type": "boolean",
              "example": true
            },
            "include_ics_in_email_invitation": {
              "type": "boolean",
              "example": false
            },
            "auto_check_public_records_on_snail_mail_creation": {
              "type": "boolean",
              "example": true
            },
            "only_add_snail_mail_when_others_missing": {
              "type": "boolean",
              "example": true
            },
            "default_booking_title": {
              "type": "string"
            },
            "default_booking_disclaimer": {
              "type": "string"
            },
            "default_booking_cancelling_text": {
              "type": "boolean",
              "example": "Patienten ringde och lämnade"
            },
            "default_booking_duration": {
              "type": "number",
              "example": 10
            },
            "max_nr_of_days_before_first_sendout": {
              "type": "number",
              "example": 20
            },
            "default_months_to_rebooking": {
              "type": "number",
              "example": 20
            },
            "default_sms_sender_id": {
              "type": "string",
              "example": "NoReply"
            },
            "default_days_in_calendar": {
              "type": "string"
            },
            "calendar_time_label_interval_minutes": {
              "type": "number",
              "example": 20
            },
            "calendar_minute_increment": {
              "type": "number",
              "example": 20
            },
            "calendar_zoom_value": {
              "type": "number",
              "example": 20
            },
            "calendar_from_minute": {
              "type": "string"
            },
            "calendar_to_minute": {
              "type": "string"
            },
            "calendar_color": {
              "type": "string"
            },
            "base_booking_color_on_calendar_color": {
              "type": "boolean",
              "example": false
            },
            "default_patient_booking_text": {
              "type": "string",
              "example": "Test text"
            },
            "default_patient_partstat": {
              "type": "string",
              "example": "NEEDS-ACTION"
            },
            "display_pride_config": {
              "type": "boolean",
              "example": false
            },
            "display_patient_names": {
              "type": "boolean",
              "example": true
            },
            "display_booking_times": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_bookings": {
              "type": "boolean",
              "example": true
            },
            "display_recurring_booking_text": {
              "type": "boolean",
              "example": true
            },
            "display_weekends": {
              "type": "boolean",
              "example": false
            },
            "search_events_by_or": {
              "type": "boolean",
              "example": false
            },
            "display_all_parked_bookings": {
              "type": "boolean",
              "example": false
            },
            "enable_done": {
              "type": "boolean",
              "example": false
            },
            "public_calendar_activated": {
              "type": "boolean",
              "example": false
            },
            "booking_requests_activated": {
              "type": "boolean",
              "example": false
            },
            "order_in_public_clinic_page": {
              "type": "string"
            },
            "hidden_in_online_booking": {
              "type": "boolean",
              "example": false
            },
            "reviews_deactivated": {
              "type": "boolean",
              "example": false
            },
            "default_invoice_credit_days": {
              "type": "number"
            },
            "default_invoice_fee": {
              "type": "number"
            },
            "auto_include_invoice_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_on_invoice_handling": {
              "type": "boolean",
              "example": false
            },
            "default_to_printing_receipt_on_payment": {
              "type": "boolean",
              "example": false
            },
            "default_to_no_atb": {
              "type": "boolean",
              "example": false
            },
            "use_default_journal_entry_filters": {
              "type": "boolean",
              "example": false
            },
            "default_journal_entry_status_filter": {
              "type": "string"
            },
            "default_journal_entry_type_filter": {
              "type": "string"
            },
            "default_treatment_plan_terms": {
              "type": "string"
            },
            "sign_all_entries": {
              "type": "boolean",
              "example": false
            },
            "include_admin_journal_entries": {
              "type": "boolean",
              "example": false
            },
            "display_journal_entry_rows": {
              "type": "boolean",
              "example": false
            },
            "enable_deepest_pocket": {
              "type": "boolean",
              "example": false
            },
            "display_red_pocket_depth_text_in_perio": {
              "type": "boolean",
              "example": false
            },
            "display_roots_in_perio": {
              "type": "boolean",
              "example": false
            },
            "get_reimbursement_data_on_patient_select": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_fee": {
              "type": "boolean",
              "example": false
            },
            "auto_include_prescription_email": {
              "type": "boolean",
              "example": false
            },
            "default_to_any_pharmacy": {
              "type": "boolean",
              "example": false
            },
            "accepts_referrals": {
              "type": "boolean",
              "example": false
            },
            "telemedicine_activated": {
              "type": "boolean",
              "example": false
            },
            "recommend_diagnoses": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserGroupResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_group"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserImageResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_image"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "original": {
              "type": "string"
            },
            "small_thumbnail": {
              "type": "string"
            },
            "large_thumbnail": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "example": "your_image.png"
            },
            "type": {
              "type": "string",
              "example": "image/png"
            },
            "size_in_bytes": {
              "type": "string",
              "example": "136941"
            },
            "backup": {
              "type": "boolean",
              "example": false
            },
            "backup_path": {
              "type": "string"
            },
            "st_ctim": {
              "type": "string"
            },
            "st_gid": {
              "type": "string"
            },
            "st_ino": {
              "type": "string"
            },
            "st_mode": {
              "type": "string"
            },
            "st_mtim": {
              "type": "string"
            },
            "st_size": {
              "type": "string"
            },
            "st_uid": {
              "type": "string"
            },
            "creation_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "treatment_date": {
              "type": "string",
              "example": "2024-07-11T06:36:32+02:00"
            },
            "path": {
              "type": "string",
              "example": "patients/771121/668f61506c72eeefb59313a80c3d213e8f8b0921fe4f4.png"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserProcedureAtClinicDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user_procedure_at_clinic"
        },
        "id": {
          "type": "integer",
          "example": 1
        },
        "attributes": {
          "properties": {
            "frequency_in_minutes": {
              "type": "number",
              "example": 10
            },
            "duration_in_minutes_existing_patient": {
              "type": "number",
              "example": 20
            },
            "duration_in_minutes_new_patient": {
              "type": "number",
              "example": 30
            },
            "minimum_age": {
              "type": "number",
              "example": 30
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "social_security_number": {
              "type": "string"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "maiden_name": {
              "type": "string",
              "example": "Forester"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "address_1": {
              "type": "string",
              "example": "Testgatan"
            },
            "address_2": {
              "type": "string",
              "example": "Testgatan 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "postal_code": {
              "type": "string",
              "example": "01003"
            },
            "municipality": {
              "type": "string",
              "example": "1995-11-10T00:00:00+01:00"
            },
            "passport_number": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_home": {
              "type": "string",
              "example": "+46734100450"
            },
            "phone_number_work": {
              "type": "string",
              "example": "+46734100450"
            },
            "fax_number": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "created_at": {
              "type": "string",
              "example": "2017-09-11T14:51:52+02:00"
            },
            "updated_at": {
              "type": "string",
              "example": "2024-09-10T09:32:14+02:00"
            },
            "active": {
              "type": "boolean",
              "example": true
            },
            "prescriber_code": {
              "type": "string"
            },
            "professional_statement": {
              "type": "string"
            },
            "title": {
              "type": "string",
              "example": "Supportmedarbetare, Muntra"
            },
            "hide_reviews": {
              "type": "boolean",
              "example": true
            },
            "hide_reviews_discreetly": {
              "type": "boolean",
              "example": true
            },
            "number_of_reviews": {
              "type": "number",
              "example": 4.5
            },
            "overall_rating": {
              "type": "number",
              "example": 4.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ValidateClaimResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "validate_claim"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "FK_validate_claim_status": {
              "type": "string"
            },
            "FK_validate_claim_amount": {
              "type": "number"
            },
            "care_provider_org_number": {
              "type": "number"
            },
            "government_organization_id": {
              "type": "number"
            },
            "user_ssn": {
              "type": "number"
            },
            "patient_ssn": {
              "type": "number"
            },
            "patient_fin": {
              "type": "number"
            },
            "dentist_ssn": {
              "type": "number"
            },
            "treatment_date": {
              "type": "string"
            },
            "eligible_from_date": {
              "type": "string"
            },
            "high_cost_amount_before_treatments": {
              "type": "number"
            },
            "atb_usage_atb_number": {
              "type": "number"
            },
            "atb_usage_teeth_count": {
              "type": "number"
            },
            "atb_usage_untreated_teeth_count": {
              "type": "number"
            },
            "new_atb_start_date": {
              "type": "string"
            },
            "new_atb_amount_before_claim": {
              "type": "number"
            },
            "was_new_atb_used_before_claim": {
              "type": "boolean"
            },
            "old_atb_start_date": {
              "type": "string"
            },
            "old_atb_amount_before_claim": {
              "type": "number"
            },
            "was_old_atb_used_before_claim": {
              "type": "boolean"
            },
            "stb_disease_code": {
              "type": "string"
            },
            "stb_amount_claimed": {
              "type": "number"
            },
            "stb_amount_available": {
              "type": "number"
            },
            "high_cost_reset": {
              "type": "boolean"
            },
            "disregard_subscription": {
              "type": "boolean"
            },
            "FK_claim_id": {
              "type": "number"
            },
            "validated": {
              "type": "boolean"
            },
            "validation_sent_date": {
              "type": "string"
            },
            "error_code": {
              "type": "string"
            },
            "error_text": {
              "type": "string"
            },
            "error_details": {
              "type": "string"
            },
            "created_at": {
              "type": "string"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VatCodeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "vat_percentage": {
              "type": "number",
              "example": 33.5
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "CASH INVOICE"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationsResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test text"
            },
            "verification_number": {
              "type": "string",
              "example": "Test text"
            },
            "created_at": {
              "type": "string",
              "example": "2025-11-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationTypeResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_text": {
              "type": "string",
              "example": "Patientfaktura"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VersionLogResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "version_log"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2020-03-22T00:00:00+00:00"
            },
            "description_of_change": {
              "type": "string",
              "example": "Introduction of version logs, bugfixes."
            },
            "software_unit_name": {
              "type": "string",
              "example": "MPMS Clinical Frontend"
            },
            "version_number": {
              "type": "string",
              "example": "1.1.432"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TreatmentPlanVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "treatment_plan_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "PatientVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ParodontJournalEntryVersionResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "parodont_journal_entry_version"
        },
        "id": {
          "type": "string",
          "example": "draft"
        },
        "attributes": {
          "properties": {
            "date": {
              "type": "string",
              "example": "2024-07-01T15:42:36+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookQuetryParameterResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_query_parameter"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookRequestOrderResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook_request_order"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "webhook_model_id": {
              "type": "string"
            },
            "webhook_model": {
              "type": "string"
            },
            "done_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-11-08T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WebhookResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "webhook"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "request_method": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "request_trigger": {
              "type": "string"
            },
            "url": {
              "type": "string"
            },
            "deleted_at": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "AnswerWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "answer"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "accepted": {
              "type": "boolean",
              "example": true
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingAttendeeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_attendee"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "partstat": {
              "type": "string"
            },
            "rsvp": {
              "type": "boolean",
              "example": true
            },
            "first_sendout_on": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "arrived_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "summary": {
              "type": "string",
              "example": "Test summary"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "dtstart": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "dtend": {
              "type": "string",
              "example": "2024-09-02T19:25:31+02:00"
            },
            "status": {
              "type": "string"
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_submitted": {
              "type": "boolean",
              "example": true
            },
            "payment_prepared": {
              "type": "boolean",
              "example": false
            },
            "price": {
              "type": "number",
              "example": 132
            },
            "source": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_attendees": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_attendee"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "booking_type": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "booking_type"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "procedure": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "procedure"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "BookingTypeWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "booking_type"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "color": {
              "type": "string"
            },
            "text_color": {
              "type": "string"
            },
            "color_order": {
              "type": "string"
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 123
            },
            "reschedulable": {
              "type": "boolean",
              "example": true
            },
            "patient_declaration_allowed": {
              "type": "boolean",
              "example": false
            },
            "default": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "clinic_name": {
              "type": "string",
              "example": "Dental Clinic"
            },
            "clinic_city": {
              "type": "string",
              "example": "Stockholm"
            },
            "clinic_address_1": {
              "type": "string",
              "example": "Central Street 12"
            },
            "clinic_address_2": {
              "type": "string"
            },
            "clinic_email_address": {
              "type": "string",
              "example": "dental.clinic@dental.com"
            },
            "clinic_phone_number": {
              "type": "string",
              "example": "0465636985"
            },
            "clinic_postal_code": {
              "type": "string",
              "example": "07586"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "FiscalYearWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "fiscal_year"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "start_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "end_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "cash_accounting_method": {
              "type": "boolean",
              "example": false
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "JournalEntryWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "journal_entry"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "entry_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "text": {
              "type": "string",
              "example": "Test text"
            },
            "referral": {
              "type": "string"
            },
            "quantity": {
              "type": "number",
              "example": 100
            },
            "fee": {
              "type": "number",
              "example": 333
            },
            "lab_fee": {
              "type": "number",
              "example": 111
            },
            "discount_excluding_vat": {
              "type": "number",
              "example": 8.5
            },
            "duration_in_minutes": {
              "type": "number",
              "example": 16
            },
            "entry_type": {
              "type": "string"
            },
            "included_in_insurance": {
              "type": "boolean",
              "example": false
            },
            "draft": {
              "type": "boolean",
              "example": true
            },
            "imported": {
              "type": "boolean",
              "example": true
            },
            "editable": {
              "type": "boolean",
              "example": true
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "signed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "vat_code": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "vat_code"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "OrganizationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "organization"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "organization_number": {
              "type": "string"
            },
            "organization_name": {
              "type": "string",
              "example": "Test organization name"
            },
            "invoice_address_1": {
              "type": "string"
            },
            "invoice_address_2": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "invoice_postal_code": {
          "type": "string"
        },
        "invoice_city": {
          "type": "string"
        },
        "invoice_email_address": {
          "type": "string"
        },
        "invoice_phone_number": {
          "type": "string"
        },
        "invoice_phone_number_2": {
          "type": "string"
        },
        "invoice_phone_mobile": {
          "type": "string"
        },
        "invoice_fax": {
          "type": "string"
        },
        "invoice_reference": {
          "type": "string"
        },
        "invoice_country_code": {
          "type": "string"
        },
        "invoice_plusgiro": {
          "type": "string"
        },
        "invoice_bankgiro": {
          "type": "string"
        },
        "invoice_account_number": {
          "type": "string"
        },
        "invoice_clearing_number": {
          "type": "string"
        },
        "invoice_swish_number": {
          "type": "string"
        },
        "iban": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "example": "2024-09-01T19:25:31+02:00"
        },
        "updated_at": {
          "type": "string",
          "example": "2024-09-02T22:25:31+02:00"
        }
      },
      "type": "object"
    },
    "PatientWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "patient"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "address_1": {
              "type": "string",
              "example": "Test address 1"
            },
            "address_2": {
              "type": "string",
              "example": "Test address 2"
            },
            "city": {
              "type": "string",
              "example": "Stockholm"
            },
            "date_of_birth": {
              "type": "string",
              "example": "1956-01-01"
            },
            "deleted": {
              "type": "boolean",
              "example": true
            },
            "e_mail_address": {
              "type": "string",
              "example": "test@email.com"
            },
            "first_name": {
              "type": "string",
              "example": "John"
            },
            "last_name": {
              "type": "string",
              "example": "Otto"
            },
            "gender": {
              "type": "string",
              "example": "male"
            },
            "patient_number": {
              "type": "string"
            },
            "postal_code": {
              "type": "string"
            },
            "phone_number_cell": {
              "type": "string"
            },
            "prefers_not_to_be_contacted_by_clinic": {
              "type": "boolean",
              "example": false
            },
            "protected_identity": {
              "type": "boolean",
              "example": false
            },
            "social_security_number": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "example": "CONFIRMED"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "user": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "user"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ProcedureWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "procedure"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "name": {
              "type": "string",
              "example": "Test name"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "QuestionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "question"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "body": {
              "type": "string"
            },
            "view_count": {
              "type": "number",
              "example": 10
            },
            "up_vote_count": {
              "type": "number",
              "example": 10
            },
            "down_vote_count": {
              "type": "number",
              "example": 10
            },
            "creation_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "last_activity_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "closed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "embedded_text": {
              "type": "string",
              "example": "Test embeded text"
            },
            "embedding": {
              "type": "string"
            },
            "relevant_for_clinic_support": {
              "type": "boolean",
              "example": true
            },
            "internal": {
              "type": "boolean",
              "example": true
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskCommentWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task_comment"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "body": {
              "type": "string"
            },
            "public": {
              "type": "boolean",
              "example": 10
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TaskWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "task"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "title": {
              "type": "string",
              "example": "Test title"
            },
            "details": {
              "type": "string"
            },
            "from_address": {
              "type": "string"
            },
            "from_name": {
              "type": "string"
            },
            "date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "due_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "completed": {
              "type": "boolean",
              "example": true
            },
            "completed_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "deleted_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "clinic": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "clinic"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "responsible": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "responsible"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "creator": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "creator"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "patient": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "patient"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "comments": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "comment"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "TransactionWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "transaction"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "amount": {
              "type": "number",
              "example": 10
            },
            "account_number": {
              "type": "string"
            },
            "account_name": {
              "type": "string"
            },
            "cost_center_code": {
              "type": "string"
            },
            "cost_center_name": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "UserWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "user"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "first_name": {
              "type": "string",
              "example": "Jerald"
            },
            "last_name": {
              "type": "string",
              "example": "Smith"
            },
            "social_security_number": {
              "type": "string"
            },
            "title": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationSerieWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification_serie"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "code": {
              "type": "string"
            },
            "label": {
              "type": "string"
            },
            "manual_accountcoding": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "VerificationWebhookRequest": {
      "properties": {
        "type": {
          "type": "string",
          "example": "verification"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "verification_date": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            },
            "verification_text": {
              "type": "string",
              "example": "Test verification text"
            },
            "verification_number": {
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "example": "2024-09-01T19:25:31+02:00"
            }
          },
          "type": "object"
        },
        "relationships": {
          "properties": {
            "currency": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "currency"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "fiscal_year": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "fiscal_year"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "verification_serie": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "verification_serie"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "transactions": {
              "properties": {
                "data": {
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "transactions"
                    },
                    "id": {
                      "type": "integer",
                      "example": 1
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WeekdayDocResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "weekday"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "day": {
              "type": "number",
              "example": 3
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "WiaDataSourceResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "wia_data_source"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "wia_device_id": {
              "type": "string"
            },
            "wia_device_manufacturer": {
              "type": "string"
            },
            "wia_device_name": {
              "type": "string"
            },
            "added_at": {
              "type": "string",
              "example": "2024-09-01T23:59:59+02:00"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number"
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string"
            },
            "column_name": {
              "type": "string"
            },
            "regular_expression": {
              "type": "string"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "ClinicXraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "clinic_xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            },
            "path_to_executable": {
              "type": "string"
            },
            "path_to_files": {
              "type": "string"
            },
            "path_to_write_file": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemStringArgumentResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system_string_argument"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "order": {
              "type": "number",
              "example": 3
            },
            "label": {
              "type": "string"
            },
            "model": {
              "type": "string",
              "example": "patient"
            },
            "column_name": {
              "type": "string",
              "example": "first_name"
            },
            "regular_expression": {
              "type": "string",
              "example": "'[^0-9]'"
            },
            "substitution": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    },
    "XraySystemResponse": {
      "properties": {
        "type": {
          "type": "string",
          "example": "xray_system"
        },
        "id": {
          "type": "string",
          "example": "1"
        },
        "attributes": {
          "properties": {
            "system_supplier": {
              "type": "string"
            },
            "system_brand": {
              "type": "string"
            },
            "system_version": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "integration_type": {
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "responses": {
    "422": {
      "description": "Validation error",
      "schema": {
        "properties": {
          "message": {
            "description": "List muntra-clinics",
            "type": "string",
            "example": "Please make sure that request parameters is correct"
          }
        },
        "type": "object"
      }
    }
  },
  "paths": {
    "/api/account-plan-templates": {
      "get": {
        "tags": [
          "account-plan-templates"
        ],
        "summary": "List account-plan-templates",
        "description": "Returns a list of account plan templates on the given filters",
        "operationId": "getAccountPlanTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List account-plan-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPlanTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List account-plan-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/account-plan-templates/{id}": {
      "get": {
        "tags": [
          "account-plan-templates"
        ],
        "summary": "Retrieve an account-plan-template",
        "description": "Returns certain account plan template on the given filters",
        "operationId": "getAccountPlanTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an account-plan-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPlanTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an account-plan-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/account-plans/{id}": {
      "get": {
        "tags": [
          "account-plans"
        ],
        "summary": "Retrieve an account-plan",
        "description": "Returns certain account plan based on the given filters",
        "operationId": "getAccountPlans",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'accounts'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an account-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an account-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/account-types": {
      "get": {
        "tags": [
          "account-types"
        ],
        "summary": "List account-types",
        "description": "Returns a list of account types based on the given filters",
        "operationId": "getAccountTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'account', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "name",
            "in": "query",
            "description": "'name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List account-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List account-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/account-types/{id}": {
      "patch": {
        "tags": [
          "account-types"
        ],
        "summary": "Edit an account-type",
        "description": "Returns edited account types based on the given filters",
        "operationId": "patchAccountType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an account-type",
                  "properties": {
                    "attributes": {
                      "description": "Edit an account-type",
                      "properties": {
                        "account_id": {
                          "description": "Edit an account-type",
                          "type": "number"
                        },
                        "custom_payment_type": {
                          "description": "Edit an account-type",
                          "type": "number"
                        },
                        "name": {
                          "description": "Edit an account-type",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an account-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an account-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounting-report-rows": {
      "get": {
        "tags": [
          "accounting-report-rows"
        ],
        "summary": "List accounting-report-rows",
        "description": "Returns a list of accounting report rows based on the given filters",
        "operationId": "getAccountingReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List accounting-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List accounting-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounting-template-cost-rows": {
      "get": {
        "tags": [
          "accounting-template-cost-rows"
        ],
        "summary": "List accounting-template-cost-rows",
        "description": "Returns a list of accounting template cost rows based on the given filters",
        "operationId": "getAccountingTemplateCostRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'accounting_template', 'account', 'vat_code'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "accounting_template_id",
            "in": "query",
            "description": "'accounting_template_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List accounting-template-cost-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateCostRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List accounting-template-cost-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounting-template-cost-rows"
        ],
        "summary": "Create an accounting-template-cost-row",
        "description": "Returns created accounting template cost row based on the given filters",
        "operationId": "postAccountingTemplateCostRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an accounting-template-cost-row",
                  "properties": {
                    "attributes": {
                      "description": "Create an accounting-template-cost-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Create an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "accounting_template_id": {
                          "description": "Create an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "account_id": {
                          "description": "Create an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "text": {
                          "description": "Create an accounting-template-cost-row",
                          "type": "string",
                          "example": "test text"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an accounting-template-cost-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateCostRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an accounting-template-cost-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounting-template-cost-rows/{id}": {
      "get": {
        "tags": [
          "accounting-template-cost-rows"
        ],
        "summary": "Retrieve an accounting-template-cost-row",
        "description": "Returns certain accounting template cost row based on the given filters",
        "operationId": "getAccountingTemplateCostRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' filed",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'accounting_template', 'account', 'vat_code'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an accounting-template-cost-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateCostRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an accounting-template-cost-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "accounting-template-cost-rows"
        ],
        "summary": "Edit an accounting-template-cost-row",
        "description": "Returns edited accounting template cost row based on the given filters",
        "operationId": "patchAccountingTemplateCostRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' filed",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an accounting-template-cost-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit an accounting-template-cost-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Edit an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "accounting_template_id": {
                          "description": "Edit an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "account_id": {
                          "description": "Edit an accounting-template-cost-row",
                          "type": "number",
                          "example": 123
                        },
                        "text": {
                          "description": "Edit an accounting-template-cost-row",
                          "type": "string",
                          "example": "test text"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an accounting-template-cost-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateCostRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an accounting-template-cost-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounting-templates": {
      "get": {
        "tags": [
          "accounting-templates"
        ],
        "summary": "List accounting-templates",
        "description": "Returns a list of accounting templates based on the given filters",
        "operationId": "getAccountingTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'verification_serie', 'currency', 'accounting_template_cost_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "verification_serie_id",
            "in": "query",
            "description": "'verification_serie_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List accounting-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List accounting-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounting-templates"
        ],
        "summary": "Create an accounting-template",
        "description": "Returns created accounting template based on the given filters",
        "operationId": "postAccountingTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an accounting-template",
                  "properties": {
                    "attributes": {
                      "description": "Create an accounting-template",
                      "properties": {
                        "verification_serie_id": {
                          "description": "Create an accounting-template",
                          "type": "number",
                          "example": 123
                        },
                        "name": {
                          "description": "Create an accounting-template",
                          "type": "string",
                          "example": "test name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an accounting-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an accounting-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounting-templates/{id}": {
      "get": {
        "tags": [
          "accounting-templates"
        ],
        "summary": "Retrieve an accounting-template",
        "description": "Returns certain accounting template based on the given filters",
        "operationId": "getAccountingTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'verification_serie', 'currency', 'accounting_template_cost_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an accounting-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an accounting-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "accounting-templates"
        ],
        "summary": "Edit an accounting-template",
        "description": "Returns edited accounting template based on the given filters",
        "operationId": "patchAccountingTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an accounting-template",
                  "properties": {
                    "attributes": {
                      "description": "Edit an accounting-template",
                      "properties": {
                        "verification_serie_id": {
                          "description": "Edit an accounting-template",
                          "type": "number",
                          "example": 123
                        },
                        "name": {
                          "description": "Edit an accounting-template",
                          "type": "string",
                          "example": "test name"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an accounting-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an accounting-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounts": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "List accounts",
        "description": "Returns a list of accounts based on the given filters",
        "operationId": "getAccounts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'account_plan'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "account_plan_id",
            "in": "query",
            "description": "'account_plan_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "active",
            "in": "query",
            "description": "'active' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "account_number",
            "in": "query",
            "description": "'account_number' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List accounts",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List accounts",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Create an account",
        "description": "Returns created account based on the given filters",
        "operationId": "postAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (Not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an account",
                  "properties": {
                    "attributes": {
                      "description": "Create an account",
                      "properties": {
                        "account_plan_id": {
                          "description": "Create an account",
                          "type": "number"
                        },
                        "account_number": {
                          "description": "Create an account",
                          "type": "number",
                          "example": 1010
                        },
                        "account_name": {
                          "description": "Create an account",
                          "type": "string",
                          "example": "Utvecklingsutgifter"
                        },
                        "balance_type": {
                          "description": "Create an account",
                          "type": "string"
                        },
                        "active": {
                          "description": "Create an account",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an account",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an account",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Retrieve an account",
        "description": "Returns certain account based on the given filters",
        "operationId": "getAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'account_plan'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an account",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an account",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "accounts"
        ],
        "summary": "Edit an account",
        "description": "Returns edited account based on the given filters",
        "operationId": "patchAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (Not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an account",
                  "properties": {
                    "attributes": {
                      "description": "Edit an account",
                      "properties": {
                        "account_plan_id": {
                          "description": "Edit an account",
                          "type": "number"
                        },
                        "account_number": {
                          "description": "Edit an account",
                          "type": "number",
                          "example": 1010
                        },
                        "account_name": {
                          "description": "Edit an account",
                          "type": "string",
                          "example": "Utvecklingsutgifter"
                        },
                        "balance_type": {
                          "description": "Edit an account",
                          "type": "string"
                        },
                        "active": {
                          "description": "Edit an account",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an account",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an account",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/action-needed-patient-report-rows": {
      "get": {
        "tags": [
          "action-needed-patient-report-rows"
        ],
        "summary": "List action-needed-patient-report-rows",
        "description": "Returns a list of action needed patient report rows based on the given filters",
        "operationId": "getActionNeededPatientReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List action-needed-patient-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ActionNeededPatientReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List action-needed-patient-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/all-treatment-per-patient-article-report-rows": {
      "get": {
        "tags": [
          "all-treatment-per-patient-article-report-rows"
        ],
        "summary": "List all-treatment-per-patient-article-report-rows",
        "description": "Returns a list of all treatment per patient article report rows based on the given filters",
        "operationId": "getAllTreatmentPerPatientArticleReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List all-treatment-per-patient-article-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AllTreatmentPerPatientArticleReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List all-treatment-per-patient-article-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/allowed-ip-addresses": {
      "get": {
        "tags": [
          "allowed-ip-addresses"
        ],
        "summary": "List allowed-ip-addresses",
        "description": "Returns list of allowed ip addresses based on the given filters",
        "operationId": "getAllowedIpAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tenant_database'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List allowed-ip-addresses",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IpAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List allowed-ip-addresses",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "allowed-ip-addresses"
        ],
        "summary": "Create an allowed-ip-address",
        "description": "Returns created allowed ip address based on the given filters",
        "operationId": "postAllowedIpAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an allowed-ip-address",
                  "properties": {
                    "attributes": {
                      "description": "Create an allowed-ip-address",
                      "properties": {
                        "ip_address": {
                          "description": "Create an allowed-ip-address",
                          "type": "string",
                          "example": "103.103.87.255"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an allowed-ip-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IpAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an allowed-ip-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/allowed-ip-addresses/{id}": {
      "get": {
        "tags": [
          "allowed-ip-addresses"
        ],
        "summary": "Retrieve an allowed-ip-address",
        "description": "Returns certain allowed ip address based on the given filters",
        "operationId": "getAllowedIpAddressById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'tenant_database'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an allowed-ip-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IpAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an allowed-ip-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "allowed-ip-addresses"
        ],
        "summary": "Edit an allowed-ip-address",
        "description": "Returns edited allowed ip address based on the given filters",
        "operationId": "patchAllowedIpAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an allowed-ip-address",
                  "properties": {
                    "attributes": {
                      "description": "Edit an allowed-ip-address",
                      "properties": {
                        "ip_address": {
                          "description": "Edit an allowed-ip-address",
                          "type": "string",
                          "example": "103.103.87.255"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an allowed-ip-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IpAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an allowed-ip-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-journal-entries": {
      "get": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "List animal-journal-entries",
        "description": "Returns list of animal journal entries based on the given filters",
        "operationId": "getAnimalJournalEntries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'animal', 'price', 'vat_code', 'signer', 'animal_prescription', 'animal_owner_invoice_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "animal_id",
            "in": "query",
            "description": "'animal_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-journal-entries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-journal-entries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "Create an animal-journal-entry",
        "description": "Returns created animal journal entry based on the given filters",
        "operationId": "postAnimalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-journal-entry",
                      "properties": {
                        "user_id": {
                          "description": "Create an animal-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "animal_id": {
                          "description": "Create an animal-journal-entry",
                          "type": "number",
                          "example": 2
                        },
                        "entry_date": {
                          "description": "Create an animal-journal-entry",
                          "type": "string",
                          "example": "2028-10-22T00:00:00+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-journal-entries/{id}": {
      "get": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "Retrieve an animal-journal-entry",
        "description": "Returns certain animal journal entry based on the given filters",
        "operationId": "getAnimalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'animal', 'price', 'vat_code', 'signer', 'animal_prescription', 'animal_owner_invoice_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "Edit an animal-journal-entry",
        "description": "Returns edited animal journal entry based on the given filters",
        "operationId": "patchAnimalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-journal-entry",
                      "properties": {
                        "user_id": {
                          "description": "Edit an animal-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "animal_id": {
                          "description": "Edit an animal-journal-entry",
                          "type": "number",
                          "example": 2
                        },
                        "entry_date": {
                          "description": "Edit an animal-journal-entry",
                          "type": "string",
                          "example": "2028-10-22T00:00:00+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-journal-entries/{id}/sign": {
      "post": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "Sign an animal-journal-entry",
        "description": "Returns signed animal journal entry based on the given filters",
        "operationId": "postSignAnimalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign an animal-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Sign an animal-journal-entry",
                      "properties": {
                        "signer_id": {
                          "description": "Sign an animal-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "signing_password": {
                          "description": "Sign an animal-journal-entry",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign an animal-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign an animal-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-journal-entries/{id}/unsign": {
      "post": {
        "tags": [
          "animal-journal-entries"
        ],
        "summary": "Unsign an animal-journal-entry",
        "description": "Returns unsigned animal journal entry based on the given filters",
        "operationId": "postUnSignAnimalJournalEntry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign an animal-journal-entry",
                  "properties": {
                    "attributes": {
                      "description": "Unsign an animal-journal-entry",
                      "properties": {
                        "signer_id": {
                          "description": "Unsign an animal-journal-entry",
                          "type": "number",
                          "example": 1
                        },
                        "signing_password": {
                          "description": "Unsign an animal-journal-entry",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign an animal-journal-entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalJournalEntryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unsign an animal-journal-entry",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoice-rows": {
      "get": {
        "tags": [
          "animal-owner-invoice-rows"
        ],
        "summary": "List animal-owner-invoice-rows",
        "description": "Returns a list of animal owner invoice rows based on the given filters",
        "operationId": "getAnimalOwnerInvoiceRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner_invoice', 'animal_journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-owner-invoice-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-owner-invoice-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-owner-invoice-rows"
        ],
        "summary": "Create an animal-owner-invoice-row",
        "description": "Returns created animal owner invoice row based on the given filters",
        "operationId": "postAnimalOwnerInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-owner-invoice-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number",
                          "example": 123
                        },
                        "invoice_id": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number",
                          "example": 123
                        },
                        "product_code": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "string"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "discount_excluding_vat": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "vat_percentage": {
                          "description": "Create an animal-owner-invoice-row",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-owner-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoice-rows/{id}": {
      "get": {
        "tags": [
          "animal-owner-invoice-rows"
        ],
        "summary": "Retrieve an animal-owner-invoice-row",
        "description": "Returns certain animal owner invoice row based on the given filters",
        "operationId": "getAnimalOwnerInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner_invoice', 'animal_journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-owner-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-owner-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-owner-invoice-rows"
        ],
        "summary": "Edit an animal-owner-invoice-row",
        "description": "Returns edited animal owner invoice row based on the given filters",
        "operationId": "patchAnimalOwnerInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-invoice-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-owner-invoice-row",
                      "properties": {
                        "vat_code_id": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number",
                          "example": 123
                        },
                        "invoice_id": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number",
                          "example": 123
                        },
                        "product_code": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "string"
                        },
                        "product_name": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "string"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "quantity": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "discount_excluding_vat": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number"
                        },
                        "vat_percentage": {
                          "description": "Edit an animal-owner-invoice-row",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-owner-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices": {
      "get": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "List animal-owner-invoices",
        "description": "Returns a list of animal owner invoices based on the given filters",
        "operationId": "getAnimalOwnerInvoices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'animal_owner', 'animal_owner', 'animal_owner_invoice_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "animal_owner_id",
            "in": "query",
            "description": "'animal_owner_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field. These values can be passed:                 \r\n                'invoices.id',\r\n                'invoices.ocr_number',\r\n                'users.first_name',\r\n                'users.last_name',\r\n                'patients.first_name',\r\n                'patients.last_name',\r\n                'patients.social_security_number',\r\n                'legal_entities.organization_name',\r\n                'legal_entities.organization_number'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-owner-invoices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-owner-invoices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Create an animal-owner-invoice",
        "description": "Returns created animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-owner-invoice",
                      "properties": {
                        "user_id": {
                          "description": "Create an animal-owner-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Create an animal-owner-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "invoice_date": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "11-01-2024"
                        },
                        "due_date": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "22-11-2024"
                        },
                        "currency_id": {
                          "description": "Create an animal-owner-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_type_id": {
                          "description": "Create an animal-owner-invoice",
                          "type": "number",
                          "example": 22
                        },
                        "animal_owner_name": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "John"
                        },
                        "animal_owner_street_address_1": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "Hold street"
                        },
                        "animal_owner_street_address_2": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "Talk street"
                        },
                        "animal_owner_postal_code": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string"
                        },
                        "animal_owner_city": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "animal_owner_country_name": {
                          "description": "Create an animal-owner-invoice",
                          "type": "string",
                          "example": "Sweden"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}": {
      "get": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Retrieve an animal-owner-invoice",
        "description": "Returns certain animal owner invoice based on the given filters",
        "operationId": "getAnimalOwnerInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'animal_owner', 'animal_owner', 'animal_owner_invoice_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Edit an animal-owner-invoice",
        "description": "Returns edited animal owner invoice based on the given filters",
        "operationId": "patchAnimalOwnerInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-owner-invoice",
                      "properties": {
                        "user_id": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "number",
                          "example": 123
                        },
                        "invoice_date": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "11-01-2024"
                        },
                        "due_date": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "22-11-2024"
                        },
                        "currency_id": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "number",
                          "example": 1
                        },
                        "invoice_type_id": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "number",
                          "example": 22
                        },
                        "animal_owner_name": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "John"
                        },
                        "animal_owner_street_address_1": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "Hold street"
                        },
                        "animal_owner_street_address_2": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "Talk street"
                        },
                        "animal_owner_postal_code": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string"
                        },
                        "animal_owner_city": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "animal_owner_country_name": {
                          "description": "Edit an animal-owner-invoice",
                          "type": "string",
                          "example": "Sweden"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/book": {
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Book an animal-owner-invoice",
        "description": "Returns booked animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoiceBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Book an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Book an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/create-and-schedule-snail-mail": {
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Create and schedule a snail mail for an animal-owner-invoice",
        "description": "Returns created and scheduled snail mail for animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoiceCreateAndScheduleSnailMail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule a snail mail for an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule a snail mail for an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/credit-remaining": {
      "post": {
        "tags": [
          "patient-invoices"
        ],
        "summary": "Credit remaining for patient-invoice",
        "description": "Returns credit remaining for patient invoice based on the given filters",
        "operationId": "postCreditPatientInvoiceRemainingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit remaining for patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Credit remaining for patient-invoice",
                      "properties": {
                        "verification_date": {
                          "description": "Credit remaining for patient-invoice",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit remaining for patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PatientInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Credit remaining for patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/credit-remaining/": {
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Credit remaining for an animal-owner-invoice",
        "description": "Returns animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoiceCreditRemainingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Credit remaining for an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Credit remaining for an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/delete": {
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Delete an animal-owner-invoice",
        "description": "Returns deleted animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoiceDeleteDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete an animal-owner-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Delete an animal-owner-invoice",
                      "properties": {
                        "verification_date": {
                          "description": "Delete an animal-owner-invoice",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete an animal-owner-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete an animal-owner-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-invoices/{id}/send-to-invoice-service": {
      "post": {
        "tags": [
          "animal-owner-invoices"
        ],
        "summary": "Send an animal-owner-invoice to invoice-service",
        "description": "Returns animal owner invoice based on the given filters",
        "operationId": "postAnimalOwnerInvoiceSendAnimalOwnToInvoiceService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Send an animal-owner-invoice to invoice-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Send an animal-owner-invoice to invoice-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-payments": {
      "get": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "List animal-owner-payments",
        "description": "Returns a list of animal owner payments based on the given filters",
        "operationId": "getAnimalOwnerPayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner', 'payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "payment_type_id",
            "in": "query",
            "description": "'payment_type_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "animal_owner_id",
            "in": "query",
            "description": "'animal_owner_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "succeeded",
            "in": "query",
            "description": "'succeeded' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_payment_per_invoice",
            "in": "query",
            "description": "'has_payment_per_invoice' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_uninvoiced_amount",
            "in": "query",
            "description": "'has_uninvoiced_amount' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-owner-payments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-owner-payments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "Create an animal-owner-payment",
        "description": "Returns created animal owner payment based on the given filters",
        "operationId": "postAnimalOwnerPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-payment",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-owner-payment",
                      "properties": {
                        "currency_id": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "payment_type_id": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "custom_payment_type_id": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 223
                        },
                        "vat_amount": {
                          "description": "Create an animal-owner-payment",
                          "type": "number",
                          "example": 120
                        },
                        "description": {
                          "description": "Create an animal-owner-payment",
                          "type": "string",
                          "example": "Test description"
                        },
                        "paid_at": {
                          "description": "Create an animal-owner-payment",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "created_at": {
                          "description": "Create an animal-owner-payment",
                          "type": "string",
                          "example": "2024-08-11T23:59:59+02:00"
                        },
                        "updated_at": {
                          "description": "Create an animal-owner-payment",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "advance_payment": {
                          "description": "Create an animal-owner-payment",
                          "type": "boolean",
                          "example": false
                        },
                        "deleted": {
                          "description": "Create an animal-owner-payment",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-owner-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-payments/destroy": {
      "delete": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "Destroy an animal-owner-payment",
        "description": "Returns destroyed animal owner payment based on the given filters",
        "operationId": "postAnimalOwnerPaymentDestroyDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "animal_owner_payment_id",
            "in": "query",
            "description": "'animal_owner_payment_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Destroy an animal-owner-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Destroy an animal-owner-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-payments/{id}": {
      "get": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "Retrieve an animal-owner-payment",
        "description": "Returns certain animal owner payment based on the given filters",
        "operationId": "getAnimalOwnerPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner', 'payments_per_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-owner-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-owner-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "Edit an animal-owner-payment",
        "description": "Returns edited animal owner payment based on the given filters",
        "operationId": "patchAnimalOwnerPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-payment",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-owner-payment",
                      "properties": {
                        "currency_id": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "payment_type_id": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "custom_payment_type_id": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 223
                        },
                        "vat_amount": {
                          "description": "Edit an animal-owner-payment",
                          "type": "number",
                          "example": 120
                        },
                        "description": {
                          "description": "Edit an animal-owner-payment",
                          "type": "string",
                          "example": "Test description"
                        },
                        "paid_at": {
                          "description": "Edit an animal-owner-payment",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "created_at": {
                          "description": "Edit an animal-owner-payment",
                          "type": "string",
                          "example": "2024-08-11T23:59:59+02:00"
                        },
                        "updated_at": {
                          "description": "Edit an animal-owner-payment",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "advance_payment": {
                          "description": "Edit an animal-owner-payment",
                          "type": "boolean",
                          "example": false
                        },
                        "deleted": {
                          "description": "Edit an animal-owner-payment",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-owner-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owner-payments/{id}/delete": {
      "post": {
        "tags": [
          "animal-owner-payments"
        ],
        "summary": "Delete an animal-owner-payment",
        "description": "Returns deleted animal owner payment based on the given filters",
        "operationId": "postAnimalOwnerPaymentDeleteDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete an animal-owner-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete an animal-owner-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owners": {
      "get": {
        "tags": [
          "animal-owners"
        ],
        "summary": "List animal-owners",
        "description": "Returns list of animal owners based on the given filters",
        "operationId": "getAnimalOwners",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'legal_entity', 'person', 'animals', 'animal_prescriptions'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "organization_number",
            "in": "query",
            "description": "'organization_number' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "social_security_number",
            "in": "query",
            "description": "'social_security_number' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-owners",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-owners",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-owners"
        ],
        "summary": "Create an animal-owner",
        "description": "Returns created animal owner based on the given filters",
        "operationId": "postAnimalOwner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-owner",
                      "properties": {
                        "legal_entity_id": {
                          "description": "Create an animal-owner",
                          "type": "number",
                          "example": "The legal entity id field is required when person id is empty."
                        },
                        "person_id": {
                          "description": "Create an animal-owner",
                          "type": "number",
                          "example": "The person id field is required when legal entity id is empty."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-owner",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-owner",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-owners/{id}": {
      "get": {
        "tags": [
          "animal-owners"
        ],
        "summary": "Retrieve an animal-owner",
        "description": "Returns certain animal owner based on the given filters",
        "operationId": "getAnimalOwner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-owner",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-owner",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-owners"
        ],
        "summary": "Edit an animal-owner",
        "description": "Returns edited animal owner based on the given filters",
        "operationId": "patchAnimalOwner",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-owner",
                      "properties": {
                        "legal_entity_id": {
                          "description": "Edit an animal-owner",
                          "type": "number",
                          "example": "The legal entity id field is required when person id is empty."
                        },
                        "person_id": {
                          "description": "Edit an animal-owner",
                          "type": "number",
                          "example": "The person id field is required when legal entity id is empty."
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-owner",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalOwnerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-owner",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescription-row-waiting-times": {
      "get": {
        "tags": [
          "animal-prescription-row-waiting-times"
        ],
        "summary": "List animal-prescription-row-waiting-times",
        "description": "Returns list of animal prescription row waiting times based on the given filters",
        "operationId": "getAnimalPrescriptionRowWaitingTimes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_prescription_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "animal_prescription_row_id",
            "in": "query",
            "description": "'animal_prescription_row_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-prescription-row-waiting-times",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-prescription-row-waiting-times",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-prescription-row-waiting-times"
        ],
        "summary": "Create an animal-prescription-row-waiting-time",
        "description": "Returns created animal prescription row waiting time based on the given filters",
        "operationId": "postAnimalPrescriptionRowWaitingTime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription-row-waiting-time",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-prescription-row-waiting-time",
                      "properties": {
                        "animal_prescription_row_id": {
                          "description": "Create an animal-prescription-row-waiting-time",
                          "type": "number",
                          "example": 1
                        },
                        "number_of_days": {
                          "description": "Create an animal-prescription-row-waiting-time",
                          "type": "number",
                          "example": 2
                        },
                        "type": {
                          "description": "Create an animal-prescription-row-waiting-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription-row-waiting-time",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-prescription-row-waiting-time",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescription-row-waiting-times/{id}": {
      "get": {
        "tags": [
          "animal-prescription-row-waiting-times"
        ],
        "summary": "Retrieve an animal-prescription-row-waiting-time",
        "description": "Returns certain animal prescription row waiting times based on the given filters",
        "operationId": "getAnimalPrescriptionRowWaitingTime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_prescription_row'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-prescription-row-waiting-time",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-prescription-row-waiting-time",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-prescription-row-waiting-times"
        ],
        "summary": "Edit an animal-prescription-row-waiting-time",
        "description": "Returns edited animal prescription row waiting time based on the given filters",
        "operationId": "patchAnimalPrescriptionRowWaitingTime",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription-row-waiting-time",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-prescription-row-waiting-time",
                      "properties": {
                        "animal_prescription_row_id": {
                          "description": "Edit an animal-prescription-row-waiting-time",
                          "type": "number",
                          "example": 1
                        },
                        "number_of_days": {
                          "description": "Edit an animal-prescription-row-waiting-time",
                          "type": "number",
                          "example": 2
                        },
                        "type": {
                          "description": "Edit an animal-prescription-row-waiting-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription-row-waiting-time",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowWaitingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-prescription-row-waiting-time",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescription-rows": {
      "get": {
        "tags": [
          "animal-prescription-rows"
        ],
        "summary": "List animal-prescription-rows",
        "description": "Returns a list of animal prescription rows based on the given filters",
        "operationId": "getAnimalPrescriptionRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_prescription', 'animal', 'license_pharmacy', 'animal_prescription_row_waiting_times'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-prescription-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-prescription-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-prescription-rows"
        ],
        "summary": "Create an animal-prescription-row",
        "description": "Returns created animal prescription row based on the given filters",
        "operationId": "postAnimalPrescriptionRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription-row",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-prescription-row",
                      "properties": {
                        "animal_prescription_id": {
                          "description": "Create an animal-prescription-row",
                          "type": "number",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-prescription-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescription-rows/{id}": {
      "get": {
        "tags": [
          "animal-prescription-rows"
        ],
        "summary": "Retrieve an animal-prescription-row",
        "description": "Returns certain animal prescription rows based on the given filters",
        "operationId": "getAnimalPrescriptionRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_prescription', 'animal', 'license_pharmacy', 'animal_prescription_row_waiting_times'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-prescription-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-prescription-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-prescription-rows"
        ],
        "summary": "Edit an animal-prescription-row",
        "description": "Returns edited animal prescription rows based on the given filters",
        "operationId": "patchAnimalPrescriptionRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-prescription-row",
                      "properties": {
                        "animal_prescription_id": {
                          "description": "Edit an animal-prescription-row",
                          "type": "number",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-prescription-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions": {
      "get": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "List animal-prescriptions",
        "description": "Returns a list of animal prescriptions based on the given filters",
        "operationId": "getAnimalPrescriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'animal_owner', 'animal_prescription_rows', 'animal_journal_entries', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "animal_owner_id",
            "in": "query",
            "description": "'animal_owner_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "animal_id",
            "in": "query",
            "description": "'animal_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-prescriptions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-prescriptions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Create an animal-prescription",
        "description": "Returns created animal prescription based on the given filters",
        "operationId": "postAnimalPrescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_line_id",
            "in": "query",
            "description": "'order_line_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal-prescription",
                      "properties": {
                        "accepted": {
                          "description": "Create an animal-prescription",
                          "type": "boolean",
                          "example": true
                        },
                        "date": {
                          "description": "Create an animal-prescription",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "delivery_method": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_cit": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_code": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_name": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_number_or_name_of_house": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_postal_code": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_qualification_code": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_telecommunication": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "prescribers_comment": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_city": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_family_name": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_first_given_name": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_id_scheme": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_id_value": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_postal_code": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_street_name": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_phone_number": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "test_indicator": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "callback_url": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "uuid": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_city": {
                          "description": "Create an animal-prescription",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "delivery_location_id": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_postal_code": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_street_name": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_telecommunication": {
                          "description": "Create an animal-prescription",
                          "type": "string"
                        },
                        "include_prescription_fee": {
                          "description": "Create an animal-prescription",
                          "type": "boolean",
                          "example": true
                        },
                        "prescription_fee_including_vat": {
                          "description": "Create an animal-prescription",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions/shortcut": {
      "post": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Create an animal-prescription and all required relations",
        "description": "Returns created animal prescription, animal prescription rows and the following objects that are created if they don't already exist: animal, animal-owner, person, legal entity, pharmacy (based on designated_message_receiver) and pharmaceutical article (based on article_code, npl_pack_id or npl_id).",
        "operationId": "postAnimalPrescriptionShortcut",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription and all required relations",
                  "properties": {
                    "type": {
                      "description": "Create an animal-prescription and all required relations",
                      "type": "string",
                      "example": "animal_prescription"
                    },
                    "attributes": {
                      "description": "Create an animal-prescription and all required relations",
                      "properties": {
                        "designated_message_receiver": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "7350045514448"
                        },
                        "delivery_method": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "ADR"
                        },
                        "delivery_location_city": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "Testort"
                        },
                        "delivery_location_id": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string"
                        },
                        "delivery_location_postal_code": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "12345"
                        },
                        "delivery_location_street_name": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "Testgatan 1034"
                        },
                        "delivery_location_telecommunication": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string"
                        },
                        "prescribers_comment": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string"
                        },
                        "include_prescription_fee": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "boolean",
                          "example": true
                        },
                        "prescription_fee_including_vat": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "number",
                          "example": 100
                        },
                        "test_indicator": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "false"
                        },
                        "callback_url": {
                          "description": "Create an animal-prescription and all required relations",
                          "type": "string",
                          "example": "https://vetmanager.se/erecetps/253/approved"
                        }
                      },
                      "type": "object"
                    },
                    "relationships": {
                      "description": "Create an animal-prescription and all required relations",
                      "properties": {
                        "animal_owner": {
                          "description": "Create an animal-prescription and all required relations",
                          "properties": {
                            "data": {
                              "description": "Create an animal-prescription and all required relations",
                              "properties": {
                                "type": {
                                  "description": "Create an animal-prescription and all required relations",
                                  "type": "string",
                                  "example": "animal_owner"
                                },
                                "relationships": {
                                  "description": "Create an animal-prescription and all required relations",
                                  "properties": {
                                    "legal_entity": {
                                      "description": "Create an animal-prescription and all required relations",
                                      "properties": {
                                        "data": {
                                          "description": "Create an animal-prescription and all required relations",
                                          "properties": {
                                            "type": {
                                              "description": "Create an animal-prescription and all required relations",
                                              "type": "string",
                                              "example": "legal_entity"
                                            },
                                            "attributes": {
                                              "description": "Create an animal-prescription and all required relations",
                                              "properties": {
                                                "organization_number": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "1234123415"
                                                },
                                                "organization_name": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "Test AB"
                                                },
                                                "invoice_address_1": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "Katarinavägen 15"
                                                },
                                                "invoice_address_2": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string"
                                                },
                                                "invoice_postal_code": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "11645"
                                                },
                                                "invoice_city": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "STOCKHOLM"
                                                },
                                                "invoice_email_address": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "test@emailtest.com"
                                                },
                                                "invoice_phone_number": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string"
                                                },
                                                "invoice_phone_number_2": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string"
                                                },
                                                "invoice_phone_mobile": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "46734100450"
                                                },
                                                "invoice_fax": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          },
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "person": {
                                      "description": "Create an animal-prescription and all required relations",
                                      "properties": {
                                        "data": {
                                          "description": "Create an animal-prescription and all required relations",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "animal_prescription_rows": {
                          "description": "Create an animal-prescription and all required relations",
                          "properties": {
                            "data": {
                              "description": "Create an animal-prescription and all required relations",
                              "type": "array",
                              "items": {
                                "properties": {
                                  "type": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "type": "string",
                                    "example": "animal_prescription_row"
                                  },
                                  "attributes": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "properties": {
                                      "dispensing_repeat_number": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "dispensing_repeat_time_unit": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "Mn"
                                      },
                                      "dispensing_repeat_time_value": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 12
                                      },
                                      "latest_requested_time_for_dispensing": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "2029-10-12T00:00:00+02:00"
                                      },
                                      "nvn": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 640000
                                      },
                                      "number_of_packages": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "unstructured_dosage_admin": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "Injiceras subcutant enligt schema. Mot allergi."
                                      },
                                      "dosage_form": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "injektionslösning"
                                      },
                                      "license_id": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 2018320512
                                      },
                                      "package_content": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "quantity": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "number",
                                        "example": 1
                                      },
                                      "quantity_unit": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "st"
                                      },
                                      "strength": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "individuell"
                                      },
                                      "supplementary_information": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "string",
                                        "example": "immucept"
                                      },
                                      "delegated": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "type": "boolean",
                                        "example": true
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "relationships": {
                                    "description": "Create an animal-prescription and all required relations",
                                    "properties": {
                                      "journal_pharmaceutical_article": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "properties": {
                                          "data": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "properties": {
                                              "type": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "type": "string",
                                                "example": "journal_pharmaceutical_article"
                                              },
                                              "attributes": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "properties": {
                                                  "npl_pack_id": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "20101220100540"
                                                  },
                                                  "npl_id": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "20050505000030"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "animal": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "properties": {
                                          "data": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "properties": {
                                              "type": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "type": "string",
                                                "example": "animal"
                                              },
                                              "attributes": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "properties": {
                                                  "animal_identification": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "Nytt test2"
                                                  },
                                                  "animal_id_qualifier": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "IND2"
                                                  }
                                                },
                                                "type": "object"
                                              },
                                              "relationships": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "properties": {
                                                  "animal_species": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "properties": {
                                                      "data": {
                                                        "description": "Create an animal-prescription and all required relations",
                                                        "properties": {
                                                          "type": {
                                                            "description": "Create an animal-prescription and all required relations",
                                                            "type": "string",
                                                            "example": "animal_species"
                                                          },
                                                          "attributes": {
                                                            "description": "Create an animal-prescription and all required relations",
                                                            "properties": {
                                                              "code": {
                                                                "description": "Create an animal-prescription and all required relations",
                                                                "type": "string",
                                                                "example": "051"
                                                              }
                                                            },
                                                            "type": "object"
                                                          }
                                                        },
                                                        "type": "object"
                                                      }
                                                    },
                                                    "type": "object"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "object"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "animal_prescription_row_waiting_times": {
                                        "description": "Create an animal-prescription and all required relations",
                                        "properties": {
                                          "data": {
                                            "description": "Create an animal-prescription and all required relations",
                                            "properties": {
                                              "type": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "type": "string",
                                                "example": "animal_prescription_row_waiting_time"
                                              },
                                              "attributes": {
                                                "description": "Create an animal-prescription and all required relations",
                                                "properties": {
                                                  "number_of_days": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "number",
                                                    "example": 0
                                                  },
                                                  "type": {
                                                    "description": "Create an animal-prescription and all required relations",
                                                    "type": "string",
                                                    "example": "SLAKT"
                                                  }
                                                },
                                                "type": "object"
                                              }
                                            },
                                            "type": "array",
                                            "items": {
                                              "properties": {
                                                "type": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "type": "string",
                                                  "example": "animal_prescription_row_waiting_time"
                                                },
                                                "attributes": {
                                                  "description": "Create an animal-prescription and all required relations",
                                                  "properties": {
                                                    "number_of_days": {
                                                      "description": "Create an animal-prescription and all required relations",
                                                      "type": "number",
                                                      "example": 1
                                                    },
                                                    "type": {
                                                      "description": "Create an animal-prescription and all required relations",
                                                      "type": "string",
                                                      "example": "MJOLK"
                                                    }
                                                  },
                                                  "type": "object"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "type": "object"
                                      }
                                    },
                                    "type": "object"
                                  }
                                }
                              }
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal-prescription and all required relations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal-prescription and all required relations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions/{id}": {
      "get": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Retrieve an animal-prescription",
        "description": "Returns certain animal prescription based on the given filters",
        "operationId": "getAnimalPrescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'language', 'journal_pharmacy', 'journal_entry', 'animal_owner', 'animal_prescription_rows', 'animal_journal_entries', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Edit an animal-prescription",
        "description": "Returns edited animal prescription based on the given filters",
        "operationId": "patchAnimalPrescription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "order_line_id",
            "in": "query",
            "description": "'order_line_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription",
                  "properties": {
                    "attributes": {
                      "description": "Edit an animal-prescription",
                      "properties": {
                        "accepted": {
                          "description": "Edit an animal-prescription",
                          "type": "boolean",
                          "example": true
                        },
                        "date": {
                          "description": "Edit an animal-prescription",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "delivery_method": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_cit": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_code": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_name": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_number_or_name_of_house": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_postal_code": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_qualification_code": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescriber_telecommunication": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "prescribers_comment": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_city": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_family_name": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_first_given_name": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_id_scheme": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_id_value": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_postal_code": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_street_name": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "subject_of_care_phone_number": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "test_indicator": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "callback_url": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "uuid": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_city": {
                          "description": "Edit an animal-prescription",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "delivery_location_id": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_postal_code": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_street_name": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "delivery_location_telecommunication": {
                          "description": "Edit an animal-prescription",
                          "type": "string"
                        },
                        "include_prescription_fee": {
                          "description": "Edit an animal-prescription",
                          "type": "boolean",
                          "example": true
                        },
                        "prescription_fee_including_vat": {
                          "description": "Edit an animal-prescription",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions/{id}/invoice": {
      "post": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Invoice an animal-prescription",
        "description": "Returns invoice for animal-prescription based on the given filters",
        "operationId": "postAnimalPrescriptionInvoiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Invoice an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Invoice an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions/{id}/send": {
      "post": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Send an animal-prescription",
        "description": "Returns sent animal prescription based on the given filters",
        "operationId": "postAnimalPrescriptionSent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Send an animal-prescription",
                  "properties": {
                    "attributes": {
                      "description": "Send an animal-prescription",
                      "properties": {
                        "user_id": {
                          "description": "Send an animal-prescription",
                          "type": "number",
                          "example": 123
                        },
                        "animal_owner_id": {
                          "description": "Send an animal-prescription",
                          "type": "number",
                          "example": 101
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Send an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Send an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-prescriptions/{id}/submit-and-invoice": {
      "post": {
        "tags": [
          "animal-prescriptions"
        ],
        "summary": "Submit and invoice an animal-prescription",
        "description": "Returns animal prescription based on the given filters",
        "operationId": "postAnimalPrescriptionSubmitAndInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Submit and invoice an animal-prescription",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalPrescriptionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Submit and invoice an animal-prescription",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-species": {
      "get": {
        "tags": [
          "animal-species"
        ],
        "summary": "List animal-species",
        "description": "Returns list of animal species based on the given filters",
        "operationId": "getAnimalSpecies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "code",
            "in": "query",
            "description": "'code' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List animal-species",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalSpeciesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List animal-species",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animal-species/{id}": {
      "get": {
        "tags": [
          "animal-species"
        ],
        "summary": "Retrieve an animal-species",
        "description": "Returns certain animal species based on the given filters",
        "operationId": "getAnimalSpeciesById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal-species",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalSpeciesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal-species",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animals": {
      "get": {
        "tags": [
          "animals"
        ],
        "summary": "List an animals",
        "description": "Returns a list of animals based on the given filters",
        "operationId": "getAnimals",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner', 'animal_species'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "animal_owner_id",
            "in": "query",
            "description": "'animal_owner_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List an animals",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List an animals",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "animals"
        ],
        "summary": "Create an animal",
        "description": "Returns created animal based on the given filters",
        "operationId": "postAnimal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal",
                  "properties": {
                    "attributes": {
                      "description": "Create an animal",
                      "properties": {
                        "animal_owner_id": {
                          "description": "Create an animal",
                          "type": "number",
                          "example": 1
                        },
                        "animal_species_id": {
                          "description": "Create an animal",
                          "type": "number",
                          "example": 2
                        },
                        "animal_identification": {
                          "description": "Create an animal",
                          "type": "number",
                          "example": 3
                        },
                        "animal_id_qualifier": {
                          "description": "Create an animal",
                          "type": "number",
                          "example": 4
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an animal",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an animal",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/animals/{id}": {
      "get": {
        "tags": [
          "animals"
        ],
        "summary": "Retrieve an animal",
        "description": "Returns certain animal based on the given filters",
        "operationId": "getAnimal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner', 'animal_species'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an animal",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an animal",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "animals"
        ],
        "summary": "Edit an animal",
        "description": "Returns edited animal based on the given filters",
        "operationId": "patchAnimal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'animal_owner', 'animal_species'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an animal",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnimalResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an animal",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-claim-payments": {
      "get": {
        "tags": [
          "anonymous-claim-payments"
        ],
        "summary": "List anonymous-claim-payments",
        "description": "Returns list of anonymous claim payments based on the given filters",
        "operationId": "getAnonymousClaimPayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_payment_specification', 'claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "claim_payment_specification_id",
            "in": "query",
            "description": "'claim_payment_specification_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-claim-payments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-claim-payments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-claim-payments/{id}": {
      "get": {
        "tags": [
          "anonymous-claim-payments"
        ],
        "summary": "Retrieve a anonymous-claim-payment",
        "description": "Returns certain anonymous claim payment based on the given filters",
        "operationId": "getAnonymousClaimPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_payment_specification', 'claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a anonymous-claim-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a anonymous-claim-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-claims": {
      "get": {
        "tags": [
          "anonymous-claims"
        ],
        "summary": "List anonymous-claims",
        "description": "Returns list of anonymous claims based on the given filters",
        "operationId": "getAnonymousClaims",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "submitted",
            "in": "query",
            "description": "'submitted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "validated",
            "in": "query",
            "description": "'validated' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-claims",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-claims",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-claims/{id}": {
      "get": {
        "tags": [
          "anonymous-claims"
        ],
        "summary": "Retrieve a anonymous-claim",
        "description": "Returns certain anonymous claim based on the given filters",
        "operationId": "getAnonymousClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a anonymous-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a anonymous-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "anonymous-claims"
        ],
        "summary": "Edit a anonymous-claim",
        "description": "Returns edited anonymous claim based on the given filters",
        "operationId": "patchAnonymousClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a anonymous-claim",
                  "properties": {
                    "attributes": {
                      "description": "Edit a anonymous-claim",
                      "properties": {
                        "verification_id": {
                          "description": "Edit a anonymous-claim",
                          "type": "number",
                          "example": "1"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a anonymous-claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a anonymous-claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-customer-receivable-report-rows": {
      "get": {
        "tags": [
          "anonymous-customer-receivable-report-rows"
        ],
        "summary": "List anonymous-customer-receivable-report-rows",
        "description": "Returns a list of anonymous customer receivable report rows based on the given filters",
        "operationId": "getAnonymousCustomerReceivableReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-customer-receivable-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomerReceivableReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-customer-receivable-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-invoice-payments": {
      "get": {
        "tags": [
          "anonymous-invoice-payments"
        ],
        "summary": "List anonymous-invoice-payments",
        "description": "Returns a list of anonymous invoice payments based on the given filters",
        "operationId": "ListAnonymouseInvoicePayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'patient_invoice', 'payments_per_invoices', 'patient_payment_method', 'daily_reconciliation', 'payment_service'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-invoice-payments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-invoice-payments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "anonymous-invoice-payments"
        ],
        "summary": "Create an anonymous-invoice-payment",
        "description": "Returns created anonymous invoice payment based on the given filters",
        "operationId": "postAnonymouseInvoicePayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an anonymous-invoice-payment",
                  "properties": {
                    "attributes": {
                      "description": "Create an anonymous-invoice-payment",
                      "properties": {
                        "currency_id": {
                          "description": "Create an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "payment_type_id": {
                          "description": "Create an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Create an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "custom_payment_type_id": {
                          "description": "Create an anonymous-invoice-payment",
                          "type": "number",
                          "example": 333
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an anonymous-invoice-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an anonymous-invoice-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-invoice-payments/{id}": {
      "patch": {
        "tags": [
          "anonymous-invoice-payments"
        ],
        "summary": "Edit an anonymous-invoice-payment",
        "description": "Returns edited anonymous invoice payment based on the given filters",
        "operationId": "patchAnonymouseInvoicePayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an anonymous-invoice-payment",
                  "properties": {
                    "attributes": {
                      "description": "Edit an anonymous-invoice-payment",
                      "properties": {
                        "currency_id": {
                          "description": "Edit an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "payment_type_id": {
                          "description": "Edit an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "fiscal_year_id": {
                          "description": "Edit an anonymous-invoice-payment",
                          "type": "number",
                          "example": 123
                        },
                        "custom_payment_type_id": {
                          "description": "Edit an anonymous-invoice-payment",
                          "type": "number",
                          "example": 333
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an anonymous-invoice-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymouseInvoicePaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an anonymous-invoice-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-patient-invoices": {
      "get": {
        "tags": [
          "anonymous-patient-invoices"
        ],
        "summary": "List anonymous-patient-invoices",
        "description": "Returns a list of anonymous patient invoices based on the given filters",
        "operationId": "getAnonymousPatientInvoices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'county_council'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "invoice_type_ids",
            "in": "query",
            "description": "'invoice_type_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "category",
            "in": "query",
            "description": "'category' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "only_third_party_tags",
            "in": "query",
            "description": "'only_third_party_tags' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "exclude_third_party_tags",
            "in": "query",
            "description": "'exclude_third_party_tags' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "printed",
            "in": "query",
            "description": "'printed' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "only_include_unbooked_patients",
            "in": "query",
            "description": "'only_include_unbooked_patients' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "has_reminder",
            "in": "query",
            "description": "'has_reminder' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field (required when 'from_date' provided)",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "receipt_from_date",
            "in": "query",
            "description": "'receipt_from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "caregiver_ids",
            "in": "query",
            "description": "'caregiver_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "location_ids",
            "in": "query",
            "description": "'location_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-patient-invoices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-patient-invoices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-patient-invoices/{id}": {
      "get": {
        "tags": [
          "anonymous-patient-invoices"
        ],
        "summary": "Retrieve an anonymous-patient-invoice",
        "description": "Returns a certain anonymous patient invoice based on the given filters",
        "operationId": "getAnonymousPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'user', 'fiscal_year', 'verification', 'invoice_type', 'payment_type', 'currency', 'patient', 'county_council'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an anonymous-patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an anonymous-patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "anonymous-patient-invoices"
        ],
        "summary": "Edit an anonymous-patient-invoice",
        "description": "Returns a edited anonymous patient invoice based on the given filters",
        "operationId": "patchAnonymousPatientInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an anonymous-patient-invoice",
                  "properties": {
                    "attributes": {
                      "description": "Edit an anonymous-patient-invoice",
                      "properties": {
                        "invoice_type_id": {
                          "description": "Edit an anonymous-patient-invoice",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an anonymous-patient-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousPatientInvoicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an anonymous-patient-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-payment-report-rows": {
      "get": {
        "tags": [
          "anonymous-payment-report-rows"
        ],
        "summary": "List anonymous-payment-report-rows",
        "description": "Returns a list of anonymous payment report rows based on the given filters",
        "operationId": "getAnonymousPaymentReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-payment-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousPaymentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-payment-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-sales-per-patient-report-rows": {
      "get": {
        "tags": [
          "anonymous-sales-per-patient-report-rows"
        ],
        "summary": "List anonymous-sales-per-patient-report-rows",
        "description": "Returns a list of anonymous sales per patient report rows based on the given filters",
        "operationId": "getAnonymousSalesPerPatientReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "'start_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "'end_date' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-sales-per-patient-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousSalesPerPatientReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-sales-per-patient-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-treatment-article-report-rows": {
      "get": {
        "tags": [
          "anonymous-treatment-article-report-rows"
        ],
        "summary": "List anonymous-treatment-article-report-rows",
        "description": "Returns a list of anonymous treatment article report rows based on the given filters",
        "operationId": "getAnonymousTreatmentArticleReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-treatment-article-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TreatmentArticleReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-treatment-article-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/anonymous-treatment-report-rows": {
      "get": {
        "tags": [
          "anonymous-treatment-report-rows"
        ],
        "summary": "List anonymous-treatment-report-rows",
        "description": "Returns a list of anonymous treatment report rows based on the given filters",
        "operationId": "getAnonymousTreatmentReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency', 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List anonymous-treatment-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnonymousTreatmentReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List anonymous-treatment-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/answers": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "List answers",
        "description": "Returns list of answers based on the given filters",
        "operationId": "getAnswers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'question', 'question_that_has_accepted'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "question_id",
            "in": "query",
            "description": "'question_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List answers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List answers",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Create an answer",
        "description": "Returns created answer based on the given filters",
        "operationId": "postAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an answer",
                  "properties": {
                    "attributes": {
                      "description": "Create an answer",
                      "properties": {
                        "body": {
                          "description": "Create an answer",
                          "type": "string"
                        },
                        "accepted": {
                          "description": "Create an answer",
                          "type": "boolean",
                          "example": true
                        },
                        "up_vote_count": {
                          "description": "Create an answer",
                          "type": "number",
                          "example": 2
                        },
                        "down_vote_count": {
                          "description": "Create an answer",
                          "type": "number",
                          "example": 3
                        },
                        "question_id": {
                          "description": "Create an answer",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/answers/{id}": {
      "get": {
        "tags": [
          "answers"
        ],
        "summary": "Retrieve an answer",
        "description": "Returns certain answer based on the given filters",
        "operationId": "getAnswerById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'question', 'question_that_has_accepted'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "answers"
        ],
        "summary": "Edit an answer",
        "description": "Returns edited answer based on the given filters",
        "operationId": "patchAnswer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an answer",
                  "properties": {
                    "attributes": {
                      "description": "Edit an answer",
                      "properties": {
                        "body": {
                          "description": "Edit an answer",
                          "type": "string"
                        },
                        "accepted": {
                          "description": "Edit an answer",
                          "type": "boolean",
                          "example": true
                        },
                        "up_vote_count": {
                          "description": "Edit an answer",
                          "type": "number",
                          "example": 2
                        },
                        "down_vote_count": {
                          "description": "Edit an answer",
                          "type": "number",
                          "example": 3
                        },
                        "question_id": {
                          "description": "Edit an answer",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/answers/{id}/accept": {
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Accept an answer",
        "description": "Returns answer that marked as accepted based on the given filters",
        "operationId": "postAnswerAccept",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Accept an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Accept an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/answers/{id}/down": {
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Down-vote an answer",
        "description": "Returns answer that marked as down-vote based on the given filters",
        "operationId": "postAnswerDownVote",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Down-vote an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Down-vote an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/answers/{id}/up": {
      "post": {
        "tags": [
          "answers"
        ],
        "summary": "Up-vote an answer",
        "description": "Returns answer that marked as up-vote based on the given filters",
        "operationId": "postAnswerUp",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Up-vote an answer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AnswerResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Up-vote an answer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/articles": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "List articles",
        "description": "Returns a list of articles based on the given filters",
        "operationId": "getArticles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_articles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "article_code",
            "in": "query",
            "description": "'article_code' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List articles",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ArticleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List articles",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/articles/{id}": {
      "get": {
        "tags": [
          "articles"
        ],
        "summary": "Retrieve an article",
        "description": "Returns certain article based on the given filters",
        "operationId": "getArticle",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_articles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an article",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ArticleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an article",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/atb-check-report-rows": {
      "get": {
        "tags": [
          "atb-check-report-rows"
        ],
        "summary": "List atb-check-report-rows",
        "description": "Returns a list of atb check report rows based on the given filters",
        "operationId": "getAtbCheckReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List atb-check-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AtbCheckReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List atb-check-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/autostarttokens": {
      "post": {
        "tags": [
          "autostarttokens"
        ],
        "summary": "Create an autostarttokens",
        "description": "Returns created autostarttoken on the given filters",
        "operationId": "postAutostarttokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an autostarttokens",
                  "properties": {
                    "attributes": {
                      "description": "Create an autostarttokens",
                      "properties": {
                        "id_service_id": {
                          "description": "Create an autostarttokens",
                          "type": "number"
                        },
                        "email": {
                          "description": "Create an autostarttokens",
                          "type": "string"
                        },
                        "password": {
                          "description": "Create an autostarttokens",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an autostarttokens",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AutostarttokenResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an autostarttokens",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/balance-report-rows": {
      "get": {
        "tags": [
          "balance-report-rows"
        ],
        "summary": "List balance-report-rows",
        "description": "Returns a list of balance report rows based on the given filters",
        "operationId": "getBalanceReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List balance-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BalanceReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List balance-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-attendee-external-bindings": {
      "post": {
        "tags": [
          "booking-attendee-external-bindings"
        ],
        "summary": "Create a booking-attendee-external-binding",
        "description": "Returns created booking attendee external binding based on the given filters",
        "operationId": "postBookingAttendeeExternalBinding",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-attendee-external-binding",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-attendee-external-binding",
                      "properties": {
                        "booking_attendee_id": {
                          "description": "Create a booking-attendee-external-binding",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-attendee-external-binding",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingAttendeeExternalBindingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-attendee-external-binding",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-attendees": {
      "get": {
        "tags": [
          "booking-attendees"
        ],
        "summary": "List booking attendees",
        "description": "Returns a list of booking attendees based on the given filters",
        "operationId": "getBookingAttendees",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking', 'user', 'patient', 'room', 'resource', 'emails', 'email_ics', 'declaration_emails', 'sms_invitations', 'sms_reminders', 'declaration_sms', 'snail_mails', 'booking_attendee_external_binding'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_id",
            "in": "query",
            "description": "Booking id field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking attendees",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingAttendeeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking attendees",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-attendees"
        ],
        "summary": "Create a booking attendee",
        "description": "Returns created booking attendee based on the given filters",
        "operationId": "postBookingAttendee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking attendee",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking attendee",
                      "properties": {
                        "booking_id": {
                          "description": "Create a booking attendee",
                          "type": "number",
                          "example": "1"
                        },
                        "dtstart": {
                          "description": "Create a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "dtend": {
                          "description": "Create a booking attendee",
                          "type": "string",
                          "example": "2024-10-01T22:28:33+02:00"
                        },
                        "partstat": {
                          "description": "Create a booking attendee",
                          "type": "string",
                          "example": "ACCEPTED"
                        },
                        "rsvp": {
                          "description": "Create a booking attendee",
                          "type": "boolean",
                          "example": false
                        },
                        "arrived_at": {
                          "description": "Create a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "first_sendout_on": {
                          "description": "Create a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingAttendeeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-attendees/{id}": {
      "get": {
        "tags": [
          "booking-attendees"
        ],
        "summary": "Retrieve a booking attendee",
        "description": "Returns certain booking attendee based on the given filters",
        "operationId": "getBookingAttendee",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking', 'user', 'patient', 'room', 'resource', 'emails', 'email_ics', 'declaration_emails', 'sms_invitations', 'sms_reminders', 'declaration_sms', 'snail_mails', 'booking_attendee_external_binding'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingAttendeeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-attendees"
        ],
        "summary": "Edit a booking attendee",
        "description": "Returns edited booking attendee based on the given filters",
        "operationId": "patchBookingAttendees",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking attendee",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking attendee",
                      "properties": {
                        "booking_id": {
                          "description": "Edit a booking attendee",
                          "type": "number",
                          "example": "1"
                        },
                        "dtstart": {
                          "description": "Edit a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "dtend": {
                          "description": "Edit a booking attendee",
                          "type": "string",
                          "example": "2024-10-01T22:28:33+02:00"
                        },
                        "partstat": {
                          "description": "Edit a booking attendee",
                          "type": "string",
                          "example": "ACCEPTED"
                        },
                        "rsvp": {
                          "description": "Edit a booking attendee",
                          "type": "boolean",
                          "example": false
                        },
                        "arrived_at": {
                          "description": "Edit a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "first_sendout_on": {
                          "description": "Edit a booking attendee",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking attendee",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingAttendeeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking attendee",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-conversion-report-rows": {
      "get": {
        "tags": [
          "booking-conversion-report-rows"
        ],
        "summary": "List booking-conversion-report-rows",
        "description": "Returns a list of booking conversion report rows based on the given filters",
        "operationId": "getBookingConversionReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-conversion-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingConversationReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-conversion-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-exdates": {
      "get": {
        "tags": [
          "booking-exdates"
        ],
        "summary": "List booking-exdates",
        "description": "Returns a list of booking exdates based on the given filters",
        "operationId": "getBookingExdates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "booking_id",
            "in": "query",
            "description": "'booking_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-exdates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExdateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-exdates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-exdates"
        ],
        "summary": "Create a booking-exdate",
        "description": "Returns certain booking exdate based on the given filters",
        "operationId": "postBookingExdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-exdate",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-exdate",
                      "properties": {
                        "booking_id": {
                          "description": "Create a booking-exdate",
                          "type": "number",
                          "example": 12
                        },
                        "date": {
                          "description": "Create a booking-exdate",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-exdate",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExdateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-exdate",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-exdates/{id}": {
      "get": {
        "tags": [
          "booking-exdates"
        ],
        "summary": "Retrieve a booking-exdate",
        "description": "Returns certain booking exdate based on the given filters",
        "operationId": "getBookingExdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-exdate",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExdateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-exdate",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "booking-exdates"
        ],
        "summary": "Delete a booking-exdate",
        "description": "Returns deleted booking exdate based on the given filters",
        "operationId": "deletedBookingExdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a booking-exdate",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExdateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a booking-exdate",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-exdates"
        ],
        "summary": "Edit a booking-exdate",
        "description": "Returns edited booking exdate based on the given filters",
        "operationId": "patchBookingExdate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-exdate",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking-exdate",
                      "properties": {
                        "booking_id": {
                          "description": "Edit a booking-exdate",
                          "type": "number",
                          "example": 12
                        },
                        "date": {
                          "description": "Edit a booking-exdate",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-exdate",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExdateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-exdate",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-external-bindings": {
      "post": {
        "tags": [
          "booking-external-bindings"
        ],
        "summary": "Create a booking-external-binding",
        "description": "Returns created booking external binding based on the given filters",
        "operationId": "postBookingExternalBinding",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-external-binding",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-external-binding",
                      "properties": {
                        "booking_id": {
                          "description": "Create a booking-external-binding",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-external-binding",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingExternalBindingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-external-binding",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-policies": {
      "get": {
        "tags": [
          "booking-policies"
        ],
        "summary": "List booking-policies",
        "description": "Returns a list of booking policies based on the given filters",
        "operationId": "getBookingPolicies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-policies",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPolicyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-policies",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-policies"
        ],
        "summary": "Create a booking-policy",
        "description": "Returns created booking policy based on the given filters",
        "operationId": "postBookingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'name' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-policy",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-policy",
                      "properties": {
                        "name": {
                          "description": "Create a booking-policy",
                          "type": "string",
                          "example": "Test name"
                        },
                        "rescheduling_lock_period_in_hours": {
                          "description": "Create a booking-policy",
                          "type": "number",
                          "example": 10
                        },
                        "reschedulable": {
                          "description": "Create a booking-policy",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_declaration_allowed": {
                          "description": "Create a booking-policy",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-policy",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPolicyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-policy",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-policies/{id}": {
      "get": {
        "tags": [
          "booking-policies"
        ],
        "summary": "Retrieve a booking-policy",
        "description": "Returns certain booking policy based on the given filters",
        "operationId": "getBookingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-policy",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPolicyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-policy",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "booking-policies"
        ],
        "summary": "Delete a booking-policy",
        "description": "Returns result of delition of booking policy based on the given filters",
        "operationId": "deleteBookingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a booking-policy",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-policies"
        ],
        "summary": "Edit a booking-policy",
        "description": "Returns edited booking policy based on the given filters",
        "operationId": "patchBookingPolicy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'name' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-policy",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking-policy",
                      "properties": {
                        "name": {
                          "description": "Edit a booking-policy",
                          "type": "string",
                          "example": "Test name"
                        },
                        "rescheduling_lock_period_in_hours": {
                          "description": "Edit a booking-policy",
                          "type": "number",
                          "example": 10
                        },
                        "reschedulable": {
                          "description": "Edit a booking-policy",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_declaration_allowed": {
                          "description": "Edit a booking-policy",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-policy",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPolicyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-policy",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-preferences": {
      "get": {
        "tags": [
          "booking-preferences"
        ],
        "summary": "List booking-preferences",
        "description": "Returns list of booking preferences based on the given filters",
        "operationId": "getBookingPreferences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'user_procedure_at_clinic', 'weekdays'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_procedure_at_clinic_id",
            "in": "query",
            "description": "'user_procedure_at_clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-preferences",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPreferenceDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-preferences",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-preferences"
        ],
        "summary": "Create a booking-preference",
        "description": "Returns created booking preference based on the given filters",
        "operationId": "postBookingPreference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-preference",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-preference",
                      "properties": {
                        "user_procedure_at_clinic_id": {
                          "description": "Create a booking-preference",
                          "type": "number",
                          "example": 421
                        },
                        "dtstart_in_minutes": {
                          "description": "Create a booking-preference",
                          "type": "number",
                          "example": 1
                        },
                        "dtend_in_minutes": {
                          "description": "Create a booking-preference",
                          "type": "number",
                          "example": 5
                        },
                        "fit": {
                          "description": "Create a booking-preference",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_id": {
                          "description": "Create a booking-preference",
                          "type": "number",
                          "example": 125
                        },
                        "weekdays": {
                          "description": "Create a booking-preference",
                          "type": "number",
                          "example": 5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-preference",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPreferenceDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-preference",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-preferences/{id}": {
      "get": {
        "tags": [
          "booking-preferences"
        ],
        "summary": "Retrieve a booking-preference",
        "description": "Returns certain booking preference based on the given filters",
        "operationId": "getBookingPreferenceById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'user_procedure_at_clinic', 'weekdays'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-preference",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPreferenceDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-preference",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-preferences"
        ],
        "summary": "Edit a booking-preference",
        "description": "Returns edited booking preference based on the given filters",
        "operationId": "patchBookingPreference",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-preference",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking-preference",
                      "properties": {
                        "user_procedure_at_clinic_id": {
                          "description": "Edit a booking-preference",
                          "type": "number",
                          "example": 421
                        },
                        "dtstart_in_minutes": {
                          "description": "Edit a booking-preference",
                          "type": "number",
                          "example": 1
                        },
                        "dtend_in_minutes": {
                          "description": "Edit a booking-preference",
                          "type": "number",
                          "example": 5
                        },
                        "fit": {
                          "description": "Edit a booking-preference",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_id": {
                          "description": "Edit a booking-preference",
                          "type": "number",
                          "example": 125
                        },
                        "weekdays": {
                          "description": "Edit a booking-preference",
                          "type": "number",
                          "example": 5
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-preference",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingPreferenceDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-preference",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-rrule-by-days": {
      "get": {
        "tags": [
          "booking-rrule-by-days"
        ],
        "summary": "List booking-rrule-by-days",
        "description": "Returns a list of booking rrule by days based on the given filters",
        "operationId": "getBookingRruleByDays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_rrule'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_rrule_id",
            "in": "query",
            "description": "'booking_rrule_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-rrule-by-days",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleByDayResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-rrule-by-days",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-rrule-by-days"
        ],
        "summary": "Create a booking-rrule-by-day",
        "description": "Returns created booking rrule by day based on the given filters",
        "operationId": "postBookingRruleByDay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-rrule-by-day",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-rrule-by-day",
                      "properties": {
                        "booking_rrule_id": {
                          "description": "Create a booking-rrule-by-day",
                          "type": "number",
                          "example": 1211
                        },
                        "day": {
                          "description": "Create a booking-rrule-by-day",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-rrule-by-day",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleByDayResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-rrule-by-day",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-rrule-by-days/{id}": {
      "get": {
        "tags": [
          "booking-rrule-by-days"
        ],
        "summary": "Retrieve a booking-rrule-by-day",
        "description": "Returns certain booking rrule by day based on the given filters",
        "operationId": "getBookingRruleByDay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_rrule'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-rrule-by-day",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleByDayResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-rrule-by-day",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "booking-rrule-by-days"
        ],
        "summary": "Delete a booking-rrule-by-day",
        "description": "Returns result of deletion for booking rrule by day based on the given filters",
        "operationId": "deleteBookingRruleByDayDeletion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a booking-rrule-by-day",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-rrule-by-days"
        ],
        "summary": "Edit a booking-rrule-by-day",
        "description": "Returns edited booking rrule by day based on the given filters",
        "operationId": "patchBookingRruleByDay",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-rrule-by-day",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking-rrule-by-day",
                      "properties": {
                        "booking_rrule_id": {
                          "description": "Edit a booking-rrule-by-day",
                          "type": "number",
                          "example": 1211
                        },
                        "day": {
                          "description": "Edit a booking-rrule-by-day",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-rrule-by-day",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleByDayResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-rrule-by-day",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-rrules": {
      "get": {
        "tags": [
          "booking-rrules"
        ],
        "summary": "List booking-rrules",
        "description": "Returns a list of booking rrules based on the given filters",
        "operationId": "getBookingRrules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_id",
            "in": "query",
            "description": "'booking_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-rrules",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-rrules",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-rrules"
        ],
        "summary": "Create a booking-rrule",
        "description": "Returns a created booking rrule based on the given filters",
        "operationId": "postBookingRrule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-rrule",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-rrule",
                      "properties": {
                        "booking_id": {
                          "description": "Create a booking-rrule",
                          "type": "number",
                          "example": 12
                        },
                        "freq": {
                          "description": "Create a booking-rrule",
                          "type": "string"
                        },
                        "interval": {
                          "description": "Create a booking-rrule",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-rrule",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-rrule",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-rrules/{id}": {
      "get": {
        "tags": [
          "booking-rrules"
        ],
        "summary": "Retrieve a booking-rrule",
        "description": "Returns certain booking rrule based on the given filters",
        "operationId": "getBookingRrule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-rrule",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-rrule",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-rrules"
        ],
        "summary": "Edit a booking-rrule",
        "description": "Returns edited booking rrule based on the given filters",
        "operationId": "patchBookingRrule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-rrule",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking-rrule",
                      "properties": {
                        "booking_id": {
                          "description": "Edit a booking-rrule",
                          "type": "number",
                          "example": 12
                        },
                        "freq": {
                          "description": "Edit a booking-rrule",
                          "type": "string"
                        },
                        "interval": {
                          "description": "Edit a booking-rrule",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-rrule",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingRruleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-rrule",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-types": {
      "get": {
        "tags": [
          "booking-types"
        ],
        "summary": "List booking-types",
        "description": "Returns a list of booking types based on the given filters",
        "operationId": "getBookingTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'booking_policy'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List booking-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List booking-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "booking-types"
        ],
        "summary": "Create a booking-type",
        "description": "Returns created booking type based on the given filters",
        "operationId": "postBookingType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-type",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking-type",
                      "properties": {
                        "name": {
                          "description": "Create a booking-type",
                          "type": "string",
                          "example": "Test name"
                        },
                        "text": {
                          "description": "Create a booking-type",
                          "type": "string",
                          "example": "Test text"
                        },
                        "color": {
                          "description": "Create a booking-type",
                          "type": "string",
                          "example": "#9FC6E7"
                        },
                        "text_color": {
                          "description": "Create a booking-type",
                          "type": "string",
                          "example": "#000000"
                        },
                        "color_order": {
                          "description": "Create a booking-type",
                          "type": "number",
                          "example": 0
                        },
                        "duration_in_minutes": {
                          "description": "Create a booking-type",
                          "type": "number",
                          "example": 10
                        },
                        "reschedulable": {
                          "description": "Create a booking-type",
                          "type": "boolean",
                          "example": true
                        },
                        "patient_declaration_allowed": {
                          "description": "Create a booking-type",
                          "type": "boolean",
                          "example": false
                        },
                        "default": {
                          "description": "Create a booking-type",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/booking-types/{id}": {
      "get": {
        "tags": [
          "booking-types"
        ],
        "summary": "Retrieve a booking-type",
        "description": "Returns certain booking type based on the given filters",
        "operationId": "getBookingType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-type",
                  "properties": {
                    "attributes": {
                      "description": "Retrieve a booking-type",
                      "properties": {
                        "name": {
                          "description": "Retrieve a booking-type",
                          "type": "string",
                          "example": "Test name"
                        },
                        "text": {
                          "description": "Retrieve a booking-type",
                          "type": "string",
                          "example": "Test text"
                        },
                        "color": {
                          "description": "Retrieve a booking-type",
                          "type": "string",
                          "example": "#9FC6E7"
                        },
                        "text_color": {
                          "description": "Retrieve a booking-type",
                          "type": "string",
                          "example": "#000000"
                        },
                        "color_order": {
                          "description": "Retrieve a booking-type",
                          "type": "number",
                          "example": 0
                        },
                        "duration_in_minutes": {
                          "description": "Retrieve a booking-type",
                          "type": "number",
                          "example": 10
                        },
                        "reschedulable": {
                          "description": "Retrieve a booking-type",
                          "type": "boolean",
                          "example": true
                        },
                        "patient_declaration_allowed": {
                          "description": "Retrieve a booking-type",
                          "type": "boolean",
                          "example": false
                        },
                        "default": {
                          "description": "Retrieve a booking-type",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "booking-types"
        ],
        "summary": "Edit a booking-type",
        "description": "Returns edited booking type based on the given filters",
        "operationId": "patchBookingType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'booking_policy'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "List bookings",
        "description": "Returns a list of bookings based on the given filters",
        "operationId": "getBookings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'organizer', 'booking_type', 'booking_policy', 'procedure', 'rebooking', 'promo_code', 'declaration', 'booking_attendees', 'booking_rrules', 'booking_exdates', 'booking_external_binding'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "dtstart",
            "in": "query",
            "description": "'dtstart' field (format: '2024-08-01 11:35:33')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "dtend",
            "in": "query",
            "description": "'dtend' field (format: '2024-08-02 13:46:43')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field (format: '2024-08-01')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field (format: '2024-08-02')",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organizer_id",
            "in": "query",
            "description": "'organizer_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "caregiver_id",
            "in": "query",
            "description": "Caregiver id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_partstat",
            "in": "query",
            "description": "'patient_partstat' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "room_ids",
            "in": "query",
            "description": "'room_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_type_ids",
            "in": "query",
            "description": "'booking_type_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_failed_to_appear",
            "in": "query",
            "description": "'patient_failed_to_appear' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_failed_to_appear_handled",
            "in": "query",
            "description": "'patient_failed_to_appear_handled' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_wants_earlier_slot",
            "in": "query",
            "description": "'patient_wants_earlier_slot' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_made_late_cancellation",
            "in": "query",
            "description": "'patient_made_late_cancellation' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "done",
            "in": "query",
            "description": "'done' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List bookings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List bookings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create a booking",
        "description": "Returns a created booking based on the given filters",
        "operationId": "postBooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "room_ids",
            "in": "query",
            "description": "'room_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "resource_ids",
            "in": "query",
            "description": "'resource_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_ids",
            "in": "query",
            "description": "'patient_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking",
                      "properties": {
                        "organizer_id": {
                          "description": "Create a booking",
                          "type": "number",
                          "example": 123
                        },
                        "clinic_id": {
                          "description": "Create a booking",
                          "type": "number",
                          "example": 123
                        },
                        "booking_type_id": {
                          "description": "Create a booking",
                          "type": "number",
                          "example": 123
                        },
                        "class": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": "PUBLIC"
                        },
                        "summary": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": "Test summary"
                        },
                        "text": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": false
                        },
                        "dtstart": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": "2024-01-01T00:00:00+01:00"
                        },
                        "dtend": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": "2024-01-01T08:00:00+01:00"
                        },
                        "reschedulable": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "duration_in_minutes": {
                          "description": "Create a booking",
                          "type": "number",
                          "example": 10
                        },
                        "description": {
                          "description": "Create a booking",
                          "type": "string"
                        },
                        "location": {
                          "description": "Create a booking",
                          "type": "string"
                        },
                        "transparent": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": true
                        },
                        "status": {
                          "description": "Create a booking",
                          "type": "string",
                          "example": "CONFIRMED"
                        },
                        "price": {
                          "description": "Create a booking",
                          "type": "number",
                          "example": 111
                        },
                        "new_patient": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_wants_earlier_slot": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_made_late_cancellation": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_failed_to_appear": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_failed_to_appear_handled": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_declaration_allowed": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "done": {
                          "description": "Create a booking",
                          "type": "boolean",
                          "example": false
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/book": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create a booking, but don't invite patient",
        "description": "Returns created booking with non-invited patient based on the given filters",
        "operationId": "postBookingBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all properties is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking, but don't invite patient",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking, but don't invite patient",
                      "properties": {
                        "patient_ids": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clinic_id": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "number",
                          "example": 8551
                        },
                        "user_ids": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "room_ids": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "resource_ids": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "booking_type_id": {
                          "description": "Create a booking, but don't invite patient",
                          "type": "number",
                          "example": 12
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking, but don't invite patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking, but don't invite patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/move-between-days": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Move bookings between a days",
        "description": "Returns moved bookings between days based on the given filters",
        "operationId": "postBookingMoveBetweenDaysDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "'user_ids' field",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Move bookings between a days",
                  "properties": {
                    "attributes": {
                      "description": "Move bookings between a days",
                      "properties": {
                        "from_date": {
                          "description": "Move bookings between a days",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "to_date": {
                          "description": "Move bookings between a days",
                          "type": "string",
                          "example": "2024-11-22T19:25:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Move bookings between a days",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Move bookings between a days",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/rebook": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create a booking and invite patient",
        "description": "Returns created booking and invited patient based on the given filters",
        "operationId": "postBookingRebook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all properties is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking and invite patient",
                  "properties": {
                    "attributes": {
                      "description": "Create a booking and invite patient",
                      "properties": {
                        "patient_ids": {
                          "description": "Create a booking and invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clinic_id": {
                          "description": "Create a booking and invite patient",
                          "type": "number",
                          "example": 8551
                        },
                        "user_ids": {
                          "description": "Create a booking and invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "room_ids": {
                          "description": "Create a booking and invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "resource_ids": {
                          "description": "Create a booking and invite patient",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "booking_type_id": {
                          "description": "Create a booking and invite patient",
                          "type": "number",
                          "example": 12
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a booking and invite patient",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a booking and invite patient",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/set-booking-type": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Set type for a booking",
        "description": "Returns set type for bookings based on the given filters",
        "operationId": "postBookingSetTypeDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "'booking_ids' field",
            "in": "query",
            "description": "'booking_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Set type for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Set type for a booking",
                      "properties": {
                        "booking_type_id": {
                          "description": "Set type for a booking",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set type for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set type for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/set-clinic": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Set clinic for bookings",
        "description": "Returns set clinic for bookings based on the given filters",
        "operationId": "postBookingSetClinicDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "'booking_ids' field",
            "in": "query",
            "description": "'booking_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Set clinic for bookings",
                  "properties": {
                    "attributes": {
                      "description": "Set clinic for bookings",
                      "properties": {
                        "clinic_id": {
                          "description": "Set clinic for bookings",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set clinic for bookings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "204": {
            "description": "No Content"
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set clinic for bookings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}": {
      "get": {
        "tags": [
          "bookings"
        ],
        "summary": "Retrieve a booking",
        "description": "Returns certain booking based on the given filters",
        "operationId": "getBookingById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'organizer', 'booking_type', 'booking_policy', 'procedure', 'rebooking', 'promo_code', 'declaration', 'booking_attendees', 'booking_rrules', 'booking_exdates', 'booking_external_binding'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "bookings"
        ],
        "summary": "Edit a booking",
        "description": "Returns edited booking based on the given filters",
        "operationId": "patchBooking",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (list of properties that can be patched)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking",
                  "properties": {
                    "attributes": {
                      "description": "Edit a booking",
                      "properties": {
                        "class": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "PUBLIC"
                        },
                        "summary": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "Test summary"
                        },
                        "text": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "Test text"
                        },
                        "dtstart": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "2024-01-01T00:00:00+01:00"
                        },
                        "dtend": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "2024-01-01T08:00:00+01:00"
                        },
                        "reschedulable": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "duration_in_minutes": {
                          "description": "Edit a booking",
                          "type": "number",
                          "example": 10
                        },
                        "description": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "Test description"
                        },
                        "location": {
                          "description": "Edit a booking",
                          "type": "string"
                        },
                        "transparent": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": true
                        },
                        "status": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "CONFIRMED"
                        },
                        "price": {
                          "description": "Edit a booking",
                          "type": "number",
                          "example": 111
                        },
                        "new_patient": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_wants_earlier_slot": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_made_late_cancellation": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_failed_to_appear": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_failed_to_appear_handled": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_declaration_allowed": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "done": {
                          "description": "Edit a booking",
                          "type": "boolean",
                          "example": false
                        },
                        "archived_at": {
                          "description": "Edit a booking",
                          "type": "string",
                          "example": "2024-02-01T09:11:00+01:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/cancel": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Cancel a booking",
        "description": "Returns cancelled booking based on the given filters",
        "operationId": "postBookingCancelByIdDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "'booking_ids' field",
            "in": "query",
            "description": "'booking_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Cancel a booking",
                  "properties": {
                    "attributes": {
                      "description": "Cancel a booking",
                      "properties": {
                        "journal_entry_text": {
                          "description": "Cancel a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Cancel a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Cancel a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/change": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Change a booking",
        "description": "Returns changed booking based on the given filters",
        "operationId": "postBookingChange",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "caregiver_ids",
            "in": "query",
            "description": "'caregiver_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "room_ids",
            "in": "query",
            "description": "'room_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "resource_ids",
            "in": "query",
            "description": "'resource_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_ids",
            "in": "query",
            "description": "'patient_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (body is not obligatory, below you can see few examples what can be added)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Change a booking",
                  "properties": {
                    "attributes": {
                      "description": "Change a booking",
                      "properties": {
                        "dtstart": {
                          "description": "Change a booking",
                          "type": "string",
                          "example": "2024-08-01 11:35:33"
                        },
                        "dtend": {
                          "description": "Change a booking",
                          "type": "string",
                          "example": "2024-08-02 12:55:53"
                        },
                        "booking_type_id": {
                          "description": "Change a booking",
                          "type": "number",
                          "example": 12
                        },
                        "clinic_id": {
                          "description": "Change a booking",
                          "type": "number",
                          "example": 312
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Change a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Change a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-declaration-sms": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule a declaration-sms for a booking",
        "description": "Returns created and scheduled declaration sms for booking based on the given filters",
        "operationId": "postCreateAndScheduleDeclarationSmsForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule a declaration-sms for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create and schedule a declaration-sms for a booking",
                      "properties": {
                        "clinic_phone_mobile": {
                          "description": "Create and schedule a declaration-sms for a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule a declaration-sms for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule a declaration-sms for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-email": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule an email for a booking",
        "description": "Returns created and scheduled email for booking based on the given filters",
        "operationId": "postCreateAndScheduleEmailForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an email for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule an email for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-email-ics": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule an email-ics for a booking",
        "description": "Returns created and scheduled email-ics for booking based on the given filters",
        "operationId": "postCreateAndScheduleEmailIcsForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an email-ics for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule an email-ics for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-sms-invitation": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule an sms-invitation for a booking",
        "description": "Returns created and scheduled sms invitation for booking based on the given filters",
        "operationId": "postCreateAndScheduleSmsInvitationForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an sms-invitation for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create and schedule an sms-invitation for a booking",
                      "properties": {
                        "clinic_phone_mobile": {
                          "description": "Create and schedule an sms-invitation for a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an sms-invitation for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule an sms-invitation for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-sms-reminder": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule an sms-reminder for a booking",
        "description": "Returns created and scheduled sms reminder for booking based on the given filters",
        "operationId": "postCreateAndScheduleSmsReminderForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an sms-reminder for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create and schedule an sms-reminder for a booking",
                      "properties": {
                        "clinic_phone_mobile": {
                          "description": "Create and schedule an sms-reminder for a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule an sms-reminder for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule an sms-reminder for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-and-schedule-snail-mail": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create and schedule a snail-mail for a booking",
        "description": "Returns created and scheduled snail-mail for booking based on the given filters",
        "operationId": "postCreateAndScheduleSnailMailForBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule a snail-mail for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create and schedule a snail-mail for a booking",
                      "properties": {
                        "patient_id": {
                          "description": "Create and schedule a snail-mail for a booking",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and schedule a snail-mail for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and schedule a snail-mail for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-email": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create an email for a booking",
        "description": "Returns created email for booking based on the given filters",
        "operationId": "postCreatedEmailforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an email for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-email-ics": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create an email-ics for a booking",
        "description": "Returns created email-ics for booking based on the given filters",
        "operationId": "postCreatedEmailIcsforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email-ics for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an email-ics for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-sms-invitation": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create an sms-invitation for a booking",
        "description": "Returns created sms-invitation for booking based on the given filters",
        "operationId": "postCreateSmsInvitationforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an sms-invitation for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create an sms-invitation for a booking",
                      "properties": {
                        "clinic_phone_mobile": {
                          "description": "Create an sms-invitation for a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an sms-invitation for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an sms-invitation for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-sms-reminder": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create an sms-reminder for a booking",
        "description": "Returns created sms-reminder for booking based on the given filters",
        "operationId": "postCreateSmsReminderforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an sms reminder for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create an sms reminder for a booking",
                      "properties": {
                        "clinic_phone_mobile": {
                          "description": "Create an sms reminder for a booking",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an sms reminder for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an sms reminder for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/create-snail-mail": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Create a snail-mail for a booking",
        "description": "Returns created snail-mail for booking based on the given filters",
        "operationId": "postCreateSnailMailforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (optional)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a snail-mail for a booking",
                  "properties": {
                    "attributes": {
                      "description": "Create a snail-mail for a booking",
                      "properties": {
                        "patient_id": {
                          "description": "Create a snail-mail for a booking",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a snail-mail for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a snail-mail for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/patient-failed-to-appear": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Set that the patient was a no-show for a booking",
        "description": "Returns created patient failed to appear for booking based on the given filters",
        "operationId": "postPatientFailedToAppearforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set that the patient was a no-show for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set that the patient was a no-show for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/patient-made-late-cancellation": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Set that the patient made a late cancellation for a booking",
        "description": "Returns created patient made late cancellation for booking based on the given filters",
        "operationId": "postPatientMadeLateCancellationforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set that the patient made a late cancellation for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set that the patient made a late cancellation for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/remove-sendouts": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Remove a sendouts for a booking",
        "description": "Returns removed sendouts for booking based on the given filters",
        "operationId": "postRemovedSendOutsforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove a sendouts for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove a sendouts for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookings/{id}/set-patient-partstat": {
      "post": {
        "tags": [
          "bookings"
        ],
        "summary": "Set patient partstat for a booking",
        "description": "Returns set patient partstat for booking based on the given filters",
        "operationId": "postSetPatientPartstatforBookingDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Set patient partstat for a booking",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookingResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Set patient partstat for a booking",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-allocation-rules": {
      "get": {
        "tags": [
          "bookkeeping-allocation-rules"
        ],
        "summary": "List bookkeeping-allocation-rules",
        "description": "Returns list of bookkeeping allocation rules based on the given filters",
        "operationId": "getBookkeepingAllocationRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "'account_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true
          },
          {
            "name": "role_ids",
            "in": "query",
            "description": "List of role ids for filtering",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List bookkeeping-allocation-rules",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookkeepingAllocationRulesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List bookkeeping-allocation-rules",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bookkeeping-allocation-rules"
        ],
        "summary": "Store a newly created resource in storage",
        "description": "Store a newly created resource in storage",
        "operationId": "storeBookkeepingAllocationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "account_id",
            "in": "formData",
            "description": "'account_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "fiscal_year_id",
            "in": "formData",
            "description": "'fiscal_year_id' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": false
          },
          {
            "name": "role_ids",
            "in": "formData",
            "description": "List of role ids for filtering",
            "required": true,
            "type": "array",
            "allowEmptyValue": false,
            "items": {
              "type": "integer"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Store a newly created resource in storage.",
                  "$ref": "#/definitions/BookkeepingAllocationRulesResponse"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Store a newly created resource in storage.",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-allocation-rules/{id}": {
      "delete": {
        "tags": [
          "bookkeeping-allocation-rules"
        ],
        "summary": "Delete the specified resource in storage",
        "description": "Delete the specified resource in storage",
        "operationId": "deleteBookkeepingAllocationRule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the resource",
            "required": true,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/bookkeeping-files": {
      "get": {
        "tags": [
          "bookkeeping-files"
        ],
        "summary": "List bookkeeping-files",
        "description": "Returns list of bookkeeping files based on the given filters",
        "operationId": "getBookkeepingFilesList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'verifications'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List bookkeeping-files",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List bookkeeping-files",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "bookkeeping-files"
        ],
        "summary": "Create a bookkeeping-file",
        "description": "Returns created bookkeeping file based on the given filters",
        "operationId": "postBookkeepingFile",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a bookkeeping-file",
                  "properties": {
                    "attributes": {
                      "description": "Create a bookkeeping-file",
                      "properties": {
                        "from_date": {
                          "description": "Create a bookkeeping-file",
                          "type": "string"
                        },
                        "to_date": {
                          "description": "Create a bookkeeping-file",
                          "type": "string"
                        },
                        "include_already_exported": {
                          "description": "Create a bookkeeping-file",
                          "type": "boolean",
                          "example": false
                        },
                        "number_of_verifications": {
                          "description": "Create a bookkeeping-file",
                          "type": "number",
                          "example": 3
                        },
                        "fiscal_year_id": {
                          "description": "Create a bookkeeping-file",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a bookkeeping-file",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a bookkeeping-file",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-files/{id}": {
      "get": {
        "tags": [
          "bookkeeping-files"
        ],
        "summary": "Retrieve a bookkeeping-file",
        "description": "Returns certain bookkeeping file based on the given filters",
        "operationId": "getBookkeepingFileById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'verifications'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a bookkeeping-file",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingFileResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a bookkeeping-file",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-locks": {
      "get": {
        "tags": [
          "bookkeeping-locks"
        ],
        "summary": "List bookkeeping-locks",
        "description": "Returns a list of bookkeeping locks based on the given filters",
        "operationId": "getBookKeepingLocks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'signer'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List bookkeeping-locks",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingLockResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List bookkeeping-locks",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-locks/sign": {
      "post": {
        "tags": [
          "bookkeeping-locks"
        ],
        "summary": "Create and sign a bookkeeping-lock",
        "description": "Returns created and signed bookkeeping lock based on the given filters",
        "operationId": "postBookKeepingLockSignAndCreate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and sign a bookkeeping-lock",
                  "properties": {
                    "attributes": {
                      "description": "Create and sign a bookkeeping-lock",
                      "properties": {
                        "organization_id": {
                          "description": "Create and sign a bookkeeping-lock",
                          "type": "number",
                          "example": 123
                        },
                        "to_date": {
                          "description": "Create and sign a bookkeeping-lock",
                          "type": "string",
                          "example": "2024-07-28T00:00:00+02:00"
                        },
                        "signer_id": {
                          "description": "Create and sign a bookkeeping-lock",
                          "type": "number",
                          "example": 254
                        },
                        "signing_password": {
                          "description": "Create and sign a bookkeeping-lock",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create and sign a bookkeeping-lock",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingLockResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create and sign a bookkeeping-lock",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-locks/{id}": {
      "get": {
        "tags": [
          "bookkeeping-locks"
        ],
        "summary": "Retrieve a bookkeeping-lock",
        "description": "Returns certain of bookkeeping lock based on the given filters",
        "operationId": "getBookKeepingLock",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'signer'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a bookkeeping-lock",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingLockResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a bookkeeping-lock",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/bookkeeping-locks/{id}/delete": {
      "post": {
        "tags": [
          "bookkeeping-locks"
        ],
        "summary": "Delete a bookkeeping-lock",
        "description": "Returns deleted bookkeeping lock based on the given filters",
        "operationId": "postBookKeepingLockDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a bookkeeping-lock",
                  "properties": {
                    "attributes": {
                      "description": "Delete a bookkeeping-lock",
                      "properties": {
                        "deleted_at": {
                          "description": "Delete a bookkeeping-lock",
                          "type": "string",
                          "example": "2024-07-28T00:00:00+02:00"
                        },
                        "signing_password": {
                          "description": "Delete a bookkeeping-lock",
                          "type": "string"
                        },
                        "signer_id": {
                          "description": "Delete a bookkeeping-lock",
                          "type": "number",
                          "example": 254
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a bookkeeping-lock",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BookKeepingLockResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a bookkeeping-lock",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/boxes": {
      "get": {
        "tags": [
          "boxes"
        ],
        "summary": "List boxes",
        "description": "Returns list of boxes based on the given filters",
        "operationId": "getBoxesList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List boxes",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BoxResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List boxes",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "boxes"
        ],
        "summary": "Create a box",
        "description": "Returns created box based on the given filters",
        "operationId": "postBox",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a box",
                  "properties": {
                    "attributes": {
                      "description": "Create a box",
                      "properties": {
                        "number": {
                          "description": "Create a box",
                          "type": "number",
                          "example": 42334100450
                        },
                        "last_treatment_date": {
                          "description": "Create a box",
                          "type": "string"
                        },
                        "patient_id": {
                          "description": "Create a box",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a box",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BoxResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a box",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/boxes/{id}": {
      "get": {
        "tags": [
          "boxes"
        ],
        "summary": "Retrieve a box",
        "description": "Returns certain box based on the given filters",
        "operationId": "getBoxById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a box",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BoxResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a box",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "boxes"
        ],
        "summary": "Edit a box",
        "description": "Returns edited box based on the given filters",
        "operationId": "patchBox",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a box",
                  "properties": {
                    "attributes": {
                      "description": "Edit a box",
                      "properties": {
                        "number": {
                          "description": "Edit a box",
                          "type": "number",
                          "example": 42334100450
                        },
                        "last_treatment_date": {
                          "description": "Edit a box",
                          "type": "string"
                        },
                        "patient_id": {
                          "description": "Edit a box",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a box",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/BoxResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a box",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/calendar-views": {
      "get": {
        "tags": [
          "calendar-views"
        ],
        "summary": "List calendar-views",
        "description": "Returns list of calendar views based on the given filters",
        "operationId": "getCalendarViews",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'clinics', 'users', 'rooms', 'hidden_weekdays'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List calendar-views",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CalendarViewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List calendar-views",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "calendar-views"
        ],
        "summary": "Create a calendar-view",
        "description": "Returns created calendar view based on the given filters",
        "operationId": "postCalendarView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a calendar-view",
                  "properties": {
                    "attributes": {
                      "description": "Create a calendar-view",
                      "properties": {
                        "name": {
                          "description": "Create a calendar-view",
                          "type": "string",
                          "example": "Test name"
                        },
                        "days": {
                          "description": "Create a calendar-view",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "clinics",
            "in": "query",
            "description": "'clinics' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "users",
            "in": "query",
            "description": "'users' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "rooms",
            "in": "query",
            "description": "'rooms' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "display_weekends",
            "in": "query",
            "description": "'display_weekends' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a calendar-view",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CalendarViewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a calendar-view",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/calendar-views/{id}": {
      "get": {
        "tags": [
          "calendar-views"
        ],
        "summary": "Retrieve a calendar-view",
        "description": "Returns certain calendar view based on the given filters",
        "operationId": "getCalendarView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'clinics', 'users', 'rooms', 'hidden_weekdays'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a calendar-view",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CalendarViewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a calendar-view",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "calendar-views"
        ],
        "summary": "Edit a calendar-view",
        "description": "Returns edited calendar view based on the given filters",
        "operationId": "patchCalendarViewById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a calendar-view",
                  "properties": {
                    "attributes": {
                      "description": "Edit a calendar-view",
                      "properties": {
                        "name": {
                          "description": "Edit a calendar-view",
                          "type": "string",
                          "example": "Test name"
                        },
                        "days": {
                          "description": "Edit a calendar-view",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "clinics",
            "in": "query",
            "description": "'clinics' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "users",
            "in": "query",
            "description": "'users' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "rooms",
            "in": "query",
            "description": "'rooms' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "display_weekends",
            "in": "query",
            "description": "'display_weekends' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a calendar-view",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CalendarViewResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a calendar-view",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/caries": {
      "get": {
        "tags": [
          "caries"
        ],
        "summary": "List caries",
        "description": "Returns list of carieses based on the given filters",
        "operationId": "getCariesMany",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'image'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field, can contain 'source'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "image_id",
            "in": "query",
            "description": "'image_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List caries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CariesDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List caries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "caries"
        ],
        "summary": "Create a caries",
        "description": "Returns created caries based on the given filters",
        "operationId": "postCaries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a caries",
                  "properties": {
                    "attributes": {
                      "description": "Create a caries",
                      "properties": {
                        "image_id": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 123
                        },
                        "source": {
                          "description": "Create a caries",
                          "type": "string"
                        },
                        "score": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 22.5
                        },
                        "image_height": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 33
                        },
                        "image_width": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 25
                        },
                        "xmax": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 10
                        },
                        "xmin": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 10
                        },
                        "ymax": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 10
                        },
                        "ymin": {
                          "description": "Create a caries",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a caries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CariesDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a caries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/caries/{id}": {
      "get": {
        "tags": [
          "caries"
        ],
        "summary": "Retrieve a caries",
        "description": "Returns certain caries based on the given filters",
        "operationId": "getCariesById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'image'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a caries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CariesDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a caries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "caries"
        ],
        "summary": "Edit a caries",
        "description": "Returns edited caries based on the given filters",
        "operationId": "patchCariesById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a caries",
                  "properties": {
                    "attributes": {
                      "description": "Edit a caries",
                      "properties": {
                        "source": {
                          "description": "Edit a caries",
                          "type": "string"
                        },
                        "score": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 22.5
                        },
                        "image_height": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 33
                        },
                        "image_width": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 25
                        },
                        "xmax": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 10
                        },
                        "xmin": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 10
                        },
                        "ymax": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 10
                        },
                        "ymin": {
                          "description": "Edit a caries",
                          "type": "number",
                          "example": 10
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a caries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CariesDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a caries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/certificates/upload": {
      "post": {
        "tags": [
          "certificates"
        ],
        "summary": "Upload a certificate",
        "description": "Returns uploaded certificate based on the given filters",
        "operationId": "postCertificateUpload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Upload a certificate",
                  "properties": {
                    "attributes": {
                      "description": "Upload a certificate",
                      "properties": {
                        "organization_id": {
                          "description": "Upload a certificate",
                          "type": "number",
                          "example": 123
                        },
                        "password": {
                          "description": "Upload a certificate",
                          "type": "string"
                        },
                        "signing_password": {
                          "description": "Upload a certificate",
                          "type": "string"
                        },
                        "file": {
                          "description": "Upload a certificate",
                          "type": "string"
                        },
                        "issuer": {
                          "description": "Upload a certificate",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Upload a certificate",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CertificateUploadDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Upload a certificate",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/change-logs": {
      "get": {
        "tags": [
          "change-logs"
        ],
        "summary": "List change-logs",
        "description": "Returns list of change logs based on the given filters",
        "operationId": "getChangeLogs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "'user_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "record_id",
            "in": "query",
            "description": "'record_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "route_name",
            "in": "query",
            "description": "'route_name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List change-logs",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChangeLogsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List change-logs",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "change-logs"
        ],
        "summary": "Create a change-log",
        "description": "Returns created change log based on the given filters",
        "operationId": "postChangeLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a change-log",
                  "properties": {
                    "attributes": {
                      "description": "Create a change-log",
                      "properties": {
                        "user_id": {
                          "description": "Create a change-log",
                          "type": "number",
                          "example": "2024"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a change-log",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChangeLogsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a change-log",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/change-logs/{id}": {
      "get": {
        "tags": [
          "change-logs"
        ],
        "summary": "Retrieve a change-log",
        "description": "Returns certain change log based on the given filters",
        "operationId": "getChangeLog",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'patient', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a change-log",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ChangeLogsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a change-log",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/checkout-services/{id}/cancel": {
      "post": {
        "tags": [
          "checkout-services"
        ],
        "summary": "Cancel of checkout service",
        "description": "Returns cancelled checkout service based on the given filters",
        "operationId": "postCheckoutServiceCancel",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_article', 'organization', 'order_line', 'invoice', 'api_responses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Cancel of checkout service",
                  "properties": {
                    "attributes": {
                      "description": "Cancel of checkout service",
                      "properties": {
                        "deleted": {
                          "description": "Cancel of checkout service",
                          "type": "boolean",
                          "example": false
                        },
                        "order_line_id": {
                          "description": "Cancel of checkout service",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Cancel of checkout service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CheckoutServiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Cancel of checkout service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payment-specifications": {
      "get": {
        "tags": [
          "claim-payment-specifications"
        ],
        "summary": "List claim-payment-specifications",
        "description": "Returns list of claim payment specifications based on the given filters",
        "operationId": "getClaimPaymentSpecifications",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List claim-payment-specifications",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentSpecificationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List claim-payment-specifications",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payment-specifications/{id}": {
      "get": {
        "tags": [
          "claim-payment-specifications"
        ],
        "summary": "Retrieve a claim-payment-specification",
        "description": "Returns certain claim payment specification based on the given filters",
        "operationId": "getClaimPaymentSpecificationById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a claim-payment-specification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentSpecificationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a claim-payment-specification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payments": {
      "get": {
        "tags": [
          "claim-payments"
        ],
        "summary": "List claim-payments",
        "description": "Returns list of claim payments based on the given filters",
        "operationId": "getClaimPayments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_payment_specification', 'claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "claim_payment_specification_id",
            "in": "query",
            "description": "'claim_payment_specification_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deviating",
            "in": "query",
            "description": "'deviating' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "done",
            "in": "query",
            "description": "'done' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List claim-payments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List claim-payments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "claim-payments"
        ],
        "summary": "Create a claim-payment",
        "description": "Returns created claim payment based on the given filters",
        "operationId": "postClaimPayment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim-payment",
                  "properties": {
                    "attributes": {
                      "description": "Create a claim-payment",
                      "properties": {
                        "deviating": {
                          "description": "Create a claim-payment",
                          "type": "boolean",
                          "example": true
                        },
                        "done": {
                          "description": "Create a claim-payment",
                          "type": "boolean",
                          "example": false
                        },
                        "organization_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 2
                        },
                        "currency_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 3
                        },
                        "payment_type_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 4
                        },
                        "paid_at": {
                          "description": "Create a claim-payment",
                          "type": "string"
                        },
                        "fiscal_year_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 5
                        },
                        "custom_payment_type_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 6
                        },
                        "claim_id": {
                          "description": "Create a claim-payment",
                          "type": "number",
                          "example": 7
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a claim-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payments/{id}": {
      "get": {
        "tags": [
          "claim-payments"
        ],
        "summary": "Retrieve a claim-payment",
        "description": "Returns certain claim payment based on the given filters",
        "operationId": "getClaimPaymentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_payment_specification', 'claim'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a claim-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a claim-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payments/{id}/book": {
      "post": {
        "tags": [
          "claim-payments"
        ],
        "summary": "Book a claim-payment",
        "description": "Returns booked of claim payment based on the given filters",
        "operationId": "postClaimPaymentUnBook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "verification_date",
            "in": "query",
            "description": "'verification_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Book a claim-payment",
                  "properties": {
                    "attributes": {
                      "description": "Book a claim-payment",
                      "properties": {
                        "verification_date": {
                          "description": "Book a claim-payment",
                          "type": "string",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Book a claim-payment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Book a claim-payment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payments/{id}/done": {
      "post": {
        "tags": [
          "claim-payments"
        ],
        "summary": "Mark a claim-payment as done",
        "description": "Returns marked as done claim payment based on the given filters",
        "operationId": "postClaimPaymentAsDone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Mark a claim-payment as done",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Mark a claim-payment as done",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-payments/{id}/undone": {
      "post": {
        "tags": [
          "claim-payments"
        ],
        "summary": "Mark a claim-payment as undone",
        "description": "Returns marked as undone claim payment based on the given filters",
        "operationId": "postClaimPaymentUnDone",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Mark a claim-payment as undone",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimPaymentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Mark a claim-payment as undone",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-rows": {
      "get": {
        "tags": [
          "claim-rows"
        ],
        "summary": "List claim-rows",
        "description": "Returns list of claim rows based on the given filters",
        "operationId": "getClaimRowsList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claims', 'journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "claim_id",
            "in": "query",
            "description": "'claim_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List claim-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List claim-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "claim-rows"
        ],
        "summary": "Create a claim-row",
        "description": "Returns created claim row based on the given filters",
        "operationId": "postClaimRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim-row",
                  "properties": {
                    "attributes": {
                      "description": "Create a claim-row",
                      "properties": {
                        "claims": {
                          "description": "Create a claim-row",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "FK_claim_amount": {
                          "description": "Create a claim-row",
                          "type": "number",
                          "example": 1
                        },
                        "FK_claim_status": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "FK_submitted_amount": {
                          "description": "Create a claim-row",
                          "type": "number",
                          "example": 3
                        },
                        "FK_reverse_claim_status": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "late_sending_reason": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "submitted": {
                          "description": "Create a claim-row",
                          "type": "boolean",
                          "example": true
                        },
                        "submitted_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "answered_at": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "reversed": {
                          "description": "Create a claim-row",
                          "type": "boolean",
                          "example": true
                        },
                        "reversed_at": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "reversal_error_code": {
                          "description": "Create a claim-row",
                          "type": "number",
                          "example": 4
                        },
                        "reversal_error_text": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "reversal_error_details": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "FK_validate_claim_status": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "FK_validate_claim_amount": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "care_provider_org_number": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Create a claim-row",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Create a claim-row",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Create a claim-row",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Create a claim-row",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Create a claim-row",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Create a claim-row",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Create a claim-row",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Create a claim-row",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a claim-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claim-rows/{id}": {
      "get": {
        "tags": [
          "claim-rows"
        ],
        "summary": "Retrieve a claim-row",
        "description": "Returns certain claim row based on the given filters",
        "operationId": "getClaimRowById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claims', 'journal_entry'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a claim-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a claim-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "claim-rows"
        ],
        "summary": "Edit a claim-row",
        "description": "Returns edited claim row based on the given filters",
        "operationId": "patchClaimRowById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a claim-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit a claim-row",
                      "properties": {
                        "claims": {
                          "description": "Edit a claim-row",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "FK_claim_amount": {
                          "description": "Edit a claim-row",
                          "type": "number",
                          "example": 1
                        },
                        "FK_claim_status": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "FK_submitted_amount": {
                          "description": "Edit a claim-row",
                          "type": "number",
                          "example": 3
                        },
                        "FK_reverse_claim_status": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "late_sending_reason": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "submitted": {
                          "description": "Edit a claim-row",
                          "type": "boolean",
                          "example": true
                        },
                        "submitted_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "answered_at": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "reversed": {
                          "description": "Edit a claim-row",
                          "type": "boolean",
                          "example": true
                        },
                        "reversed_at": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "reversal_error_code": {
                          "description": "Edit a claim-row",
                          "type": "number",
                          "example": 4
                        },
                        "reversal_error_text": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "reversal_error_details": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "FK_validate_claim_status": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "FK_validate_claim_amount": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "care_provider_org_number": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Edit a claim-row",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Edit a claim-row",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Edit a claim-row",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Edit a claim-row",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Edit a claim-row",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Edit a claim-row",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Edit a claim-row",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a claim-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a claim-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims": {
      "get": {
        "tags": [
          "claims"
        ],
        "summary": "List claims",
        "description": "Returns list of claims based on the given filters",
        "operationId": "getClaims",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_rows', 'fiscal_year', 'verification', 'signer', 'patient_invoices', 'claim_payments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "submitted",
            "in": "query",
            "description": "'submitted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "validated",
            "in": "query",
            "description": "'validated' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List claims",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List claims",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Create a claim",
        "description": "Returns created claim based on the given filters",
        "operationId": "postClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim",
                  "properties": {
                    "attributes": {
                      "description": "Create a claim",
                      "properties": {
                        "FK_claim_status": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "FK_submitted_amount": {
                          "description": "Create a claim",
                          "type": "number",
                          "example": 3
                        },
                        "FK_reverse_claim_status": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "late_sending_reason": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "submitted": {
                          "description": "Create a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "submitted_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "answered_at": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "reversed": {
                          "description": "Create a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "reversed_at": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "reversal_error_code": {
                          "description": "Create a claim",
                          "type": "number",
                          "example": 4
                        },
                        "reversal_error_text": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "reversal_error_details": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "FK_validate_claim_status": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "care_provider_org_number": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Create a claim",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Create a claim",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Create a claim",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Create a claim",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Create a claim",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Create a claim",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "organization_id": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "user_id": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "patient_id": {
                          "description": "Create a claim",
                          "type": "number"
                        },
                        "journal_entry_ids": {
                          "description": "Create a claim",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}": {
      "get": {
        "tags": [
          "claims"
        ],
        "summary": "Retrieve a claim",
        "description": "Returns certain claim based on the given filters",
        "operationId": "getClaimById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_rows', 'fiscal_year', 'verification', 'signer', 'patient_invoices', 'claim_payments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "claims"
        ],
        "summary": "Edit a claim",
        "description": "Returns edited claim based on the given filters",
        "operationId": "patchClaim",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a claim",
                  "properties": {
                    "attributes": {
                      "description": "Edit a claim",
                      "properties": {
                        "FK_claim_status": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "FK_submitted_amount": {
                          "description": "Edit a claim",
                          "type": "number",
                          "example": 3
                        },
                        "FK_reverse_claim_status": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "late_sending_reason": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "submitted": {
                          "description": "Edit a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "submitted_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "answered_at": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "reversed": {
                          "description": "Edit a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "reversed_at": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "reversal_error_code": {
                          "description": "Edit a claim",
                          "type": "number",
                          "example": 4
                        },
                        "reversal_error_text": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "reversal_error_details": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "FK_validate_claim_status": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "care_provider_org_number": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "government_organization_id": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "user_ssn": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "patient_ssn": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "patient_fin": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "dentist_ssn": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "treatment_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "eligible_from_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "high_cost_amount_before_treatments": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "atb_usage_atb_number": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "atb_usage_teeth_count": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "atb_usage_untreated_teeth_count": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "new_atb_start_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "new_atb_amount_before_claim": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "was_new_atb_used_before_claim": {
                          "description": "Edit a claim",
                          "type": "boolean"
                        },
                        "old_atb_start_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "old_atb_amount_before_claim": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "was_old_atb_used_before_claim": {
                          "description": "Edit a claim",
                          "type": "boolean"
                        },
                        "stb_disease_code": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "stb_amount_claimed": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "stb_amount_available": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "high_cost_reset": {
                          "description": "Edit a claim",
                          "type": "boolean"
                        },
                        "disregard_subscription": {
                          "description": "Edit a claim",
                          "type": "boolean"
                        },
                        "FK_claim_id": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "validated": {
                          "description": "Edit a claim",
                          "type": "boolean"
                        },
                        "validation_sent_date": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "error_text": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "error_details": {
                          "description": "Edit a claim",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a claim",
                          "type": "boolean",
                          "example": true
                        },
                        "organization_id": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "user_id": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "patient_id": {
                          "description": "Edit a claim",
                          "type": "number"
                        },
                        "journal_entry_ids": {
                          "description": "Edit a claim",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/delete": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Delete a claim",
        "description": "Returns deleted claim based on the given filters",
        "operationId": "postClaimDeletedDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/force-delete": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Force-delete claim",
        "description": "Returns force deleted claim response based on the given filters",
        "operationId": "postClaimForceDeletedDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Force-delete claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Force-delete claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/message": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Get Försäkringskassan messages for a claim",
        "description": "Returns Försäkringskassan messages for a claim based on the given filters",
        "operationId": "postClaimMessageDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Get Försäkringskassan messages for a claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Get Försäkringskassan messages for a claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/reverse": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Reverse claim at Försäkringskassan",
        "description": "Returns reversed claim at Försäkringskassan based on the given filters",
        "operationId": "postClaimReversedDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Reverse claim at Försäkringskassan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Reverse claim at Försäkringskassan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/sign": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Sign claim",
        "description": "Returns signed claim based on the given filters",
        "operationId": "postClaimSignRequestDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign claim",
                  "properties": {
                    "attributes": {
                      "description": "Sign claim",
                      "properties": {
                        "signer_id": {
                          "description": "Sign claim",
                          "type": "number"
                        },
                        "signing_password": {
                          "description": "Sign claim",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/submit": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Submit claim to Försäkringskassan",
        "description": "Returns submitted claim to Försäkringskassan based on the given filters",
        "operationId": "postClaimSubmitRequestDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_rows', fiscal_year', 'verification', 'signer', 'patient_invoices', 'claim_payments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Submit claim to Försäkringskassan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Submit claim to Försäkringskassan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/unsign": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Unsign claim",
        "description": "Returns unsigned claim based on the given filters",
        "operationId": "postClaimUnSignRequestDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign claim",
                  "properties": {
                    "attributes": {
                      "description": "Unsign claim",
                      "properties": {
                        "unsigner_id": {
                          "description": "Unsign claim",
                          "type": "number"
                        },
                        "signing_password": {
                          "description": "Unsign claim",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign claim",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unsign claim",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/claims/{id}/validate": {
      "post": {
        "tags": [
          "claims"
        ],
        "summary": "Validate claim with Försäkringskassan",
        "description": "Returns validated claim with Försäkringskassan based on the given filters",
        "operationId": "postClaimUnValidateRequestDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'claim_rows', fiscal_year', 'verification', 'signer', 'patient_invoices', 'claim_payments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Validate claim with Försäkringskassan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClaimResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Validate claim with Försäkringskassan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-account-types": {
      "get": {
        "tags": [
          "clinic-account-types"
        ],
        "summary": "List clinic-account-types",
        "description": "Returns a list of clinic account types based on the given filters",
        "operationId": "getClinicAccountType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'account', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "name",
            "in": "query",
            "description": "'name' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List clinic-account-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicAccountTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List clinic-account-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-account-types/{id}": {
      "patch": {
        "tags": [
          "clinic-account-types"
        ],
        "summary": "Edit a clinic-account-type",
        "description": "Returns edited clinic account type based on the given filters",
        "operationId": "patchClinicAccountType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-account-type",
                  "properties": {
                    "attributes": {
                      "description": "Edit a clinic-account-type",
                      "properties": {
                        "name": {
                          "description": "Edit a clinic-account-type",
                          "type": "string"
                        },
                        "custom_payment_type": {
                          "description": "Edit a clinic-account-type",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-account-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicAccountTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a clinic-account-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-images/upload": {
      "post": {
        "tags": [
          "clinic-images"
        ],
        "summary": "Upload clinic-image",
        "description": "Returns uploaded clinic image based on the given filters",
        "operationId": "postClinicImageUpload",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "formData",
            "description": "'clinic_id' field",
            "required": true,
            "type": "number"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Field for image (file should be uploaded)",
            "required": true,
            "type": "string",
            "format": "binary"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Upload clinic-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Upload clinic-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-images/{id}": {
      "get": {
        "tags": [
          "clinic-images"
        ],
        "summary": "Retrieve a clinic-image",
        "description": "Returns certain clinic image based on the given filters",
        "operationId": "getClinicImage",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a clinic-image",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicImageResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a clinic-image",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-price-lists": {
      "get": {
        "tags": [
          "clinic-price-lists"
        ],
        "summary": "List clinic-price-lists",
        "description": "Returns list of clinic price lists based on the given filters",
        "operationId": "getClinicPriceLists",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'clinic_uses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "reimbursement_type_id",
            "in": "query",
            "description": "'reimbursement_type_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "used",
            "in": "query",
            "description": "'used' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List clinic-price-lists",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List clinic-price-lists",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "clinic-price-lists"
        ],
        "summary": "Create a clinic-price-list",
        "description": "Returns created clinic price list based on the given filters",
        "operationId": "postClinicPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-price-list",
                  "properties": {
                    "attributes": {
                      "description": "Create a clinic-price-list",
                      "properties": {
                        "reimbursement_type_id": {
                          "description": "Create a clinic-price-list",
                          "type": "number"
                        },
                        "name": {
                          "description": "Create a clinic-price-list",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a clinic-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-price-lists/{id}": {
      "get": {
        "tags": [
          "clinic-price-lists"
        ],
        "summary": "Retrieve a clinic-price-list",
        "description": "Returns certain clinic price list based on the given filters",
        "operationId": "getClinicPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'clinic_uses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a clinic-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a clinic-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "clinic-price-lists"
        ],
        "summary": "Edit a clinic-price-list",
        "description": "Returns edited clinic price list based on the given filters",
        "operationId": "patchClinicPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-price-list",
                  "properties": {
                    "attributes": {
                      "description": "Edit a clinic-price-list",
                      "properties": {
                        "reimbursement_type_id": {
                          "description": "Edit a clinic-price-list",
                          "type": "number"
                        },
                        "name": {
                          "description": "Edit a clinic-price-list",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a clinic-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-xray-system-string-arguments": {
      "get": {
        "tags": [
          "clinic-xray-system-string-arguments"
        ],
        "summary": "List clinic-xray-system-string-arguments",
        "description": "Returns list of clinic xray system string arguments based on the given filters",
        "operationId": "getClinicXraySystemStringArguments",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic_xray_system'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_xray_system_id",
            "in": "query",
            "description": "'clinic_xray_system_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List clinic-xray-system-string-arguments",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List clinic-xray-system-string-arguments",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "clinic-xray-system-string-arguments"
        ],
        "summary": "Create a clinic-xray-system-string-argument",
        "description": "Returns created of clinic xray system string argument based on the given filters",
        "operationId": "postClinicXraySystemStringArgument",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-xray-system-string-argument",
                  "properties": {
                    "attributes": {
                      "description": "Create a clinic-xray-system-string-argument",
                      "properties": {
                        "clinic_xray_system_id": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "number"
                        },
                        "order": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "number"
                        },
                        "label": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "model": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "column_name": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "regular_expression": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "substitution": {
                          "description": "Create a clinic-xray-system-string-argument",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-xray-system-string-argument",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a clinic-xray-system-string-argument",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-xray-system-string-arguments/{id}": {
      "get": {
        "tags": [
          "clinic-xray-system-string-arguments"
        ],
        "summary": "Retrieve a clinic-xray-system-string-argument",
        "description": "Returns certain of clinic xray system string argument based on the given filters",
        "operationId": "getClinicXraySystemStringArgumentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic_xray_system'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_xray_system_id",
            "in": "query",
            "description": "'clinic_xray_system_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a clinic-xray-system-string-argument",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a clinic-xray-system-string-argument",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "clinic-xray-system-string-arguments"
        ],
        "summary": "Edit a clinic-xray-system-string-argument",
        "description": "Returns edited of clinic xray system string argument based on the given filters",
        "operationId": "patchClinicXraySystemStringArgumentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-xray-system-string-argument",
                  "properties": {
                    "attributes": {
                      "description": "Edit a clinic-xray-system-string-argument",
                      "properties": {
                        "clinic_xray_system_id": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "number"
                        },
                        "order": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "number"
                        },
                        "label": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "model": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "column_name": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "regular_expression": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "string"
                        },
                        "substitution": {
                          "description": "Edit a clinic-xray-system-string-argument",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-xray-system-string-argument",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemStringArgumentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a clinic-xray-system-string-argument",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-xray-systems": {
      "get": {
        "tags": [
          "clinic-xray-systems"
        ],
        "summary": "List clinic-xray-systems",
        "description": "Returns list of clinic xray systems based on the given filters",
        "operationId": "getClinicXraySystems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'xray_system', string_arguments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List clinic-xray-systems",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List clinic-xray-systems",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "clinic-xray-systems"
        ],
        "summary": "Create a clinic-xray-system",
        "description": "Returns created clinic xray system based on the given filters",
        "operationId": "postClinicXraySystem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-xray-system",
                  "properties": {
                    "attributes": {
                      "description": "Create a clinic-xray-system",
                      "properties": {
                        "xray_system_id": {
                          "description": "Create a clinic-xray-system",
                          "type": "number"
                        },
                        "clinic_id": {
                          "description": "Create a clinic-xray-system",
                          "type": "number"
                        },
                        "system_supplier": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "system_brand": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "system_version": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "separator": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "integration_type": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_executable": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_files": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_write_file": {
                          "description": "Create a clinic-xray-system",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a clinic-xray-system",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a clinic-xray-system",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinic-xray-systems/{id}": {
      "get": {
        "tags": [
          "clinic-xray-systems"
        ],
        "summary": "Retrieve a clinic-xray-system",
        "description": "Returns certain clinic xray system based on the given filters",
        "operationId": "getClinicXraySystemById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'xray_system', string_arguments'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a clinic-xray-system",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a clinic-xray-system",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "clinic-xray-systems"
        ],
        "summary": "Edit a clinic-xray-system",
        "description": "Returns edited clinic xray system based on the given filters",
        "operationId": "patchClinicXraySystemById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-xray-system",
                  "properties": {
                    "attributes": {
                      "description": "Edit a clinic-xray-system",
                      "properties": {
                        "xray_system_id": {
                          "description": "Edit a clinic-xray-system",
                          "type": "number"
                        },
                        "clinic_id": {
                          "description": "Edit a clinic-xray-system",
                          "type": "number"
                        },
                        "system_supplier": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "system_brand": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "system_version": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "separator": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "integration_type": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_executable": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_files": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        },
                        "path_to_write_file": {
                          "description": "Edit a clinic-xray-system",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic-xray-system",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicXraySystemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a clinic-xray-system",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinics": {
      "get": {
        "tags": [
          "clinics"
        ],
        "summary": "List clinics",
        "description": "List clinics based on the given filters",
        "operationId": "getMuntraClinics",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including used state price list id with 'country.used_state_price_list' or state price list with 'state_price_list' in response. We also have varios list of include such as: backup_computer,clinic_images,clinic_xray_systems.string_arguments,country.official_languages,country.reimbursement_types,currency,default_clinic_image,default_county_council,default_invoice_type.default_payment_type,default_xray_system,locale.language,logotype,main_caregiver.default_email_address,main_caregiver.default_user_image,main_caregiver.role,organization.organization_clinic_settings.cash_registers,organization.organization_clinic_settings.clinic,organization.organization_clinic_settings.payment_terminals.supplier,organization.supplier_settings_for_organizations etc.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": "country.used_state_price_list,used_clinic_price_list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List clinics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List clinics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinics/current": {
      "get": {
        "tags": [
          "clinics"
        ],
        "summary": "Retrieve the current clinic",
        "description": "Retrieve the clinic currently selected in the user's session",
        "operationId": "getMuntraClinicCurrent",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including used state price list id with 'country.used_state_price_list' or state price list with 'state_price_list' in response. We also have varios list of include such as: backup_computer,clinic_images,clinic_xray_systems.string_arguments,country.official_languages,country.reimbursement_types,currency,default_clinic_image,default_county_council,default_invoice_type.default_payment_type,default_xray_system,locale.language,logotype,main_caregiver.default_email_address,main_caregiver.default_user_image,main_caregiver.role,organization.organization_clinic_settings.cash_registers,organization.organization_clinic_settings.clinic,organization.organization_clinic_settings.payment_terminals.supplier,organization.supplier_settings_for_organizations etc.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": "country.used_state_price_list,used_clinic_price_list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinics/current-tenant-database": {
      "get": {
        "tags": [
          "clinics"
        ],
        "summary": "Retrieve the current clinic",
        "description": "Retrieve the current clinic tenant database based on the given filters",
        "operationId": "getClinicCurrentTenantDatabaseDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including used state price list id with 'country.used_state_price_list' or state price list with 'state_price_list' in response. We also have varios list of include such as: backup_computer,clinic_images,clinic_xray_systems.string_arguments,country.official_languages,country.reimbursement_types,currency,default_clinic_image,default_county_council,default_invoice_type.default_payment_type,default_xray_system,locale.language,logotype,main_caregiver.default_email_address,main_caregiver.default_user_image,main_caregiver.role,organization.organization_clinic_settings.cash_registers,organization.organization_clinic_settings.clinic,organization.organization_clinic_settings.payment_terminals.supplier,organization.supplier_settings_for_organizations etc.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": "country.used_state_price_list,used_clinic_price_list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve the current clinic tenant database",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve the current clinic tenant database",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinics/{id}": {
      "get": {
        "tags": [
          "clinics"
        ],
        "summary": "Retrieve a clinic",
        "description": "Returns certain clinic based on the given filters",
        "operationId": "getMuntraClinicById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including used state price list id with 'country.used_state_price_list' or state price list with 'state_price_list' in response. We also have varios list of include such as: backup_computer,clinic_images,clinic_xray_systems.string_arguments,country.official_languages,country.reimbursement_types,currency,default_clinic_image,default_county_council,default_invoice_type.default_payment_type,default_xray_system,locale.language,logotype,main_caregiver.default_email_address,main_caregiver.default_user_image,main_caregiver.role,organization.organization_clinic_settings.cash_registers,organization.organization_clinic_settings.clinic,organization.organization_clinic_settings.payment_terminals.supplier,organization.supplier_settings_for_organizations etc.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": "country.used_state_price_list,used_clinic_price_list"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "clinics"
        ],
        "summary": "Edit a clinic",
        "description": "Returns edited clinic based on the given filters",
        "operationId": "patchMuntraClinicById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic",
                  "properties": {
                    "attributes": {
                      "description": "Edit a clinic",
                      "properties": {
                        "default_booking_type_id": {
                          "description": "Edit a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "used_clinic_price_list_id": {
                          "description": "Edit a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "backup_computer_id": {
                          "description": "Edit a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "default_xray_system_id": {
                          "description": "Edit a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "contact_person_id": {
                          "description": "Edit a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "clinic_name": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Test Sverige"
                        },
                        "clinic_address_1": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Testvägen 1"
                        },
                        "clinic_address_2": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Testvägen 2"
                        },
                        "clinic_postal_code": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "12345"
                        },
                        "clinic_city": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "clinic_reference": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_email_address": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_phone_number": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_phone_number_2": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_phone_mobile": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_fax": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "clinic_professional_statement": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "workplace_code": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "website_address": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "booking_requires_two_factor_authentication": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        },
                        "show_user_in_invoice_clinic_reference": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        },
                        "timezone": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Europe/Stockholm"
                        },
                        "latitude": {
                          "description": "Edit a clinic",
                          "type": "integer",
                          "format": "float"
                        },
                        "longitude": {
                          "description": "Edit a clinic",
                          "type": "integer",
                          "format": "float"
                        },
                        "google_places_description": {
                          "description": "Edit a clinic",
                          "type": "string"
                        },
                        "default_sms_invitation_text": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Hej [patient_first_name]! Välkommen [booking_datetime] [clinic_address_1]. Bekräfta tiden via [booking_confirmation_link]. Mvh, [caregiver_title] [caregiver_first_name] [caregiver_last_name] (OBS! det går inte att svara på detta meddelande)"
                        },
                        "default_sms_reminder_text": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Hej [patient_first_name]! Här är en påminnelse om din tid på [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date]. Mvh, [caregiver_first_name] [caregiver_last_name], [caregiver_title]"
                        },
                        "default_snail_mail_invitation_text": {
                          "description": "Edit a clinic",
                          "type": "string",
                          "example": "Hej [patient_first_name]!\\r\\n\\r\\nNu är det dags att besöka oss.\\r\\n\\r\\nVälkommen till [clinic_name] på [clinic_address_1] kl. [booking_time] den [booking_date].\\r\\n\\r\\nBekräfta gärna tiden genom att gå till följande länk: [booking_confirmation_link]\\r\\n\\r\\nMed vänlig hälsning,\\r\\n[caregiver_first_name] [caregiver_last_name], [caregiver_title]"
                        },
                        "default_hours_until_sms_invitation_sent": {
                          "description": "Edit a clinic",
                          "type": "integer",
                          "example": 48
                        },
                        "default_hours_before_sms_reminder_sent": {
                          "description": "Edit a clinic",
                          "type": "integer",
                          "example": 48
                        },
                        "default_hours_until_snail_mail_invitation_sent": {
                          "description": "Edit a clinic",
                          "type": "integer",
                          "example": 48
                        },
                        "allow_remittance_without_individual_recipient": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        },
                        "accepts_digital_remittance": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        },
                        "has_cbct": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        },
                        "has_music": {
                          "description": "Edit a clinic",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/clinics/{id}/add": {
      "post": {
        "tags": [
          "clinics"
        ],
        "summary": "Add user to clinic",
        "description": "Returns added user to clinic based on the given filters",
        "operationId": "postAddUserToClinicById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Add user to a clinic",
                  "properties": {
                    "attributes": {
                      "description": "Add user to a clinic",
                      "properties": {
                        "user_id": {
                          "description": "Add user to a clinic",
                          "type": "number",
                          "example": 123
                        },
                        "signing_password": {
                          "description": "Add user to a clinic",
                          "type": "string"
                        },
                        "permission_policy_id": {
                          "description": "Add user to a clinic",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Add user to a clinic",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClinicCurrentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Add user to a clinic",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/computers": {
      "get": {
        "tags": [
          "computers"
        ],
        "summary": "List computers",
        "description": "Returns a list of computers based on the given filters",
        "operationId": "getComputers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'default_printer', 'default_payment_terminal', 'default_device', 'twain_data_sources', 'wia_data_sources'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "mac_address",
            "in": "query",
            "description": "'mac_address' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List computers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ComputersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List computers",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "computers"
        ],
        "summary": "Create a computer",
        "description": "Returns created computer based on the given filters",
        "operationId": "postComputer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a computer",
                  "properties": {
                    "attributes": {
                      "description": "Create a computer",
                      "properties": {
                        "clinic_id": {
                          "description": "Create a computer",
                          "type": "number",
                          "example": 123
                        },
                        "mac_address": {
                          "description": "Create a computer",
                          "type": "string"
                        },
                        "backup_folder": {
                          "description": "Create a computer",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a computer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ComputersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a computer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/computers/{id}": {
      "get": {
        "tags": [
          "computers"
        ],
        "summary": "Retrieve a computer",
        "description": "Returns certain computer based on the given filters",
        "operationId": "getComputer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'default_printer', 'default_payment_terminal', 'default_device', 'twain_data_sources', 'wia_data_sources'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a computer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ComputersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a computer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "computers"
        ],
        "summary": "Edit a computer",
        "description": "Returns edited computer based on the given filters",
        "operationId": "patchComputer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a computer",
                  "properties": {
                    "attributes": {
                      "description": "Edit a computer",
                      "properties": {
                        "clinic_id": {
                          "description": "Edit a computer",
                          "type": "number",
                          "example": 123
                        },
                        "mac_address": {
                          "description": "Edit a computer",
                          "type": "string"
                        },
                        "backup_folder": {
                          "description": "Edit a computer",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a computer",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ComputersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a computer",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cors-proxies": {
      "post": {
        "tags": [
          "cors-proxies"
        ],
        "summary": "Create a cors-proxy",
        "description": "Returns created cors proxy based on the given filters",
        "operationId": "postCorsProxy",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a cors-proxy",
                  "properties": {
                    "attributes": {
                      "description": "Create a cors-proxy",
                      "properties": {
                        "destination": {
                          "description": "Create a cors-proxy",
                          "type": "string",
                          "example": "Test body"
                        },
                        "parameters": {
                          "description": "Create a cors-proxy",
                          "type": "string",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a cors-proxy",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CorsProxyResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a cors-proxy",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cost-centers": {
      "get": {
        "tags": [
          "cost-centers"
        ],
        "summary": "List cost-centers",
        "description": "Returns list of cost centers based on the given filters",
        "operationId": "getCostCenters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'organization_with_default'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List cost-centers",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CostCentersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List cost-centers",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "cost-centers"
        ],
        "summary": "Create a cost-center",
        "description": "Returns created cost center based on the given filters",
        "operationId": "postCostCenter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a cost-center",
                  "properties": {
                    "attributes": {
                      "description": "Create a cost-center",
                      "properties": {
                        "organization_id": {
                          "description": "Create a cost-center",
                          "type": "number",
                          "example": 7
                        },
                        "code": {
                          "description": "Create a cost-center",
                          "type": "number",
                          "example": 123
                        },
                        "name": {
                          "description": "Create a cost-center",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a cost-center",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CostCentersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a cost-center",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/cost-centers/{id}": {
      "get": {
        "tags": [
          "cost-centers"
        ],
        "summary": "Retrieve a cost-center",
        "description": "Returns certain cost center based on the given filters",
        "operationId": "getCostCenter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'organization_with_default'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a cost-center",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CostCentersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a cost-center",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "cost-centers"
        ],
        "summary": "Edit a cost-center",
        "description": "Returns edited cost center based on the given filters",
        "operationId": "patchCostCenter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a cost-center",
                  "properties": {
                    "attributes": {
                      "description": "Edit a cost-center",
                      "properties": {
                        "organization_id": {
                          "description": "Edit a cost-center",
                          "type": "number",
                          "example": 7
                        },
                        "code": {
                          "description": "Edit a cost-center",
                          "type": "number",
                          "example": 123
                        },
                        "name": {
                          "description": "Edit a cost-center",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a cost-center",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CostCentersResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a cost-center",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/count-of-treatment-plans": {
      "get": {
        "tags": [
          "count-of-treatment-plans"
        ],
        "summary": "Retrieve a count-of-treatment-plan",
        "description": "Returns certain count of treatment plan based on the given filters",
        "operationId": "countOfTreatmentPlansCertain",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a count-of-treatment-plan",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountOfTreatmentPlansResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a count-of-treatment-plan",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/countries": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "List countries",
        "description": "Returns list of countries based on the given filters",
        "operationId": "getCountries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_id_service', 'location_of_reimbursement_organization', 'id_services', 'currencies', 'official_languages', 'reimbursement_types', 'county_councils', 'vat_codes', 'state_price_lists', 'used_state_price_list', 'roles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List countries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List countries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/countries/find-by-ip-address": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "Retrieve a country by ip address",
        "description": "Returns certain country according to current ip address based on the given filters",
        "operationId": "getCountryByIpAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_id_service', 'location_of_reimbursement_organization', 'id_services', 'currencies', 'official_languages', 'reimbursement_types', 'county_councils', 'vat_codes', 'state_price_lists', 'used_state_price_list', 'roles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a country by ip address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a country by ip address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/countries/{id}": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "Retrieve a country",
        "description": "Returns certain country based on the given filters",
        "operationId": "getCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'default_id_service', 'location_of_reimbursement_organization', 'id_services', 'currencies', 'official_languages', 'reimbursement_types', 'county_councils', 'vat_codes', 'state_price_lists', 'used_state_price_list', 'roles'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a country",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a country",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-patient-categories": {
      "get": {
        "tags": [
          "county-council-patient-categories"
        ],
        "summary": "List county-council-patient-categories",
        "description": "Returns list of county council patient categories based on the given filters",
        "operationId": "getCountyCouncilPatientCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'county_councils'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "active",
            "in": "query",
            "description": "'active' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List county-council-patient-categories",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryCouncilPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List county-council-patient-categories",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-patient-categories/{id}": {
      "get": {
        "tags": [
          "county-council-patient-categories"
        ],
        "summary": "Retrieve a county-council-patient-category",
        "description": "Returns certain county council patient category based on the given filters",
        "operationId": "getCountyCouncilPatientCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'county_councils'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a county-council-patient-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryCouncilPatientCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a county-council-patient-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-price-lists": {
      "get": {
        "tags": [
          "county-council-price-lists"
        ],
        "summary": "List county-council-price-lists",
        "description": "Returns list of county council price lists based on the given filters",
        "operationId": "getCountyCouncilPriceLists",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'county_council', 'county_council_uses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "county_council_id",
            "in": "query",
            "description": "'county_council_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "reimbursement_type_id",
            "in": "query",
            "description": "'reimbursement_type_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "used",
            "in": "query",
            "description": "'used' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List county-council-price-lists",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List county-council-price-lists",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "county-council-price-lists"
        ],
        "summary": "Create a county-council-price-list",
        "description": "Returns created county council price list based on the given filters",
        "operationId": "postCountyCouncilPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a county-council-price-list",
                  "properties": {
                    "attributes": {
                      "description": "Create a county-council-price-list",
                      "properties": {
                        "reimbursement_type_id": {
                          "description": "Create a county-council-price-list",
                          "type": "number"
                        },
                        "name": {
                          "description": "Create a county-council-price-list",
                          "type": "string"
                        },
                        "county_council_id": {
                          "description": "Create a county-council-price-list",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a county-council-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a county-council-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-price-lists/{id}": {
      "get": {
        "tags": [
          "county-council-price-lists"
        ],
        "summary": "Retrieve a county-council-price-list",
        "description": "Returns certain county council price lists based on the given filters",
        "operationId": "getCountyCouncilPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'county_council', 'county_council_uses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a county-council-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a county-council-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "county-council-price-lists"
        ],
        "summary": "Edit a county-council-price-list",
        "description": "Returns edited county council price list based on the given filters",
        "operationId": "patchCountyCouncilPriceList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a county-council-price-list",
                  "properties": {
                    "attributes": {
                      "description": "Edit a county-council-price-list",
                      "properties": {
                        "reimbursement_type_id": {
                          "description": "Edit a county-council-price-list",
                          "type": "number"
                        },
                        "name": {
                          "description": "Edit a county-council-price-list",
                          "type": "string"
                        },
                        "county_council_id": {
                          "description": "Edit a county-council-price-list",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a county-council-price-list",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceListResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a county-council-price-list",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-prices": {
      "get": {
        "tags": [
          "county-council-prices"
        ],
        "summary": "List county-council-prices",
        "description": "Returns a list of county council price based on the given filters",
        "operationId": "getCountyCouncilPrices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'price_list', 'currency', 'vat_code', 'default_treatment'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "list_id",
            "in": "query",
            "description": "'list_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "list_ids",
            "in": "query",
            "description": "'list_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "county_council_id",
            "in": "query",
            "description": "'county_council_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "price_code",
            "in": "query",
            "description": "'price_code' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "elements",
            "in": "query",
            "description": "'elements' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "query",
            "in": "query",
            "description": "'query' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "county_council_patient_category_ids",
            "in": "query",
            "description": "'county_council_patient_category_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List county-council-prices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List county-council-prices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "county-council-prices"
        ],
        "summary": "Create a county-council-price",
        "description": "Returns created county council price based on the given filters",
        "operationId": "postCountyCouncilPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a county-council-price",
                  "properties": {
                    "attributes": {
                      "description": "Create a county-council-price",
                      "properties": {
                        "description": {
                          "description": "Create a county-council-price",
                          "type": "string"
                        },
                        "price_list_id": {
                          "description": "Create a county-council-price",
                          "type": "number",
                          "example": 22
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "default_treatment_id",
            "in": "query",
            "description": "'default_treatment_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a county-council-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a county-council-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-council-prices/{id}": {
      "get": {
        "tags": [
          "county-council-prices"
        ],
        "summary": "Retrieve a county-council-price",
        "description": "Returns certain county council price based on the given filters",
        "operationId": "getCountyCouncilPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'price_list', 'currency', 'vat_code', 'default_treatment'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a county-council-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a county-council-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "county-council-prices"
        ],
        "summary": "Edit a county-council-price",
        "description": "Returns edited county council price based on the given filters",
        "operationId": "patchCountyCouncilPrice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a county-council-price",
                  "properties": {
                    "attributes": {
                      "description": "Edit a county-council-price",
                      "properties": {
                        "description": {
                          "description": "Edit a county-council-price",
                          "type": "string"
                        },
                        "price_list_id": {
                          "description": "Edit a county-council-price",
                          "type": "number",
                          "example": 22
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "default_treatment_id",
            "in": "query",
            "description": "'default_treatment_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a county-council-price",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountyCouncilPriceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a county-council-price",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-councils": {
      "get": {
        "tags": [
          "county-councils"
        ],
        "summary": "List county-councils",
        "description": "Returns a list of country councils based on the given filters",
        "operationId": "getCountryCouncils",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'county_council_price_lists', 'used_county_council_price_list', 'county_council_patient_categories'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "country_id",
            "in": "query",
            "description": "'country_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List county-councils",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryCouncilResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List county-councils",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/county-councils/{id}": {
      "get": {
        "tags": [
          "county-councils"
        ],
        "summary": "Retrieve a county-council",
        "description": "Returns certain country council based on the given filters",
        "operationId": "getCountryCouncil",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'county_council_price_lists', 'used_county_council_price_list', 'county_council_patient_categories'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a county-council",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CountryCouncilResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a county-council",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/course-items": {
      "get": {
        "tags": [
          "course-items"
        ],
        "summary": "List course-items",
        "description": "Returns a list of course items based on the given filters",
        "operationId": "getCourseItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'course'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "course_id",
            "in": "query",
            "description": "'course_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List course-items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CourseItemsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List course-items",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/course-items/{id}": {
      "get": {
        "tags": [
          "course-items"
        ],
        "summary": "Retrieve a course-item",
        "description": "Returns certain course item based on the given filters",
        "operationId": "getCourseItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'course'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a course-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CourseItemsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a course-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/courses": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "List courses",
        "description": "Returns a list of courses based on the given filters",
        "operationId": "getCourses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'course_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List courses",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CoursesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List courses",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/courses/{id}": {
      "get": {
        "tags": [
          "courses"
        ],
        "summary": "Retrieve a course",
        "description": "Returns certain course based on the given filters",
        "operationId": "getCourse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'course_items'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a course",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CoursesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a course",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/credentials": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "List credentials",
        "description": "Returns a list of credentials based on the given filters",
        "operationId": "getCredentials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'clinic_xray_system'",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_at_clinic_id",
            "in": "query",
            "description": "'user_at_clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_xray_system_id",
            "in": "query",
            "description": "'clinic_xray_system_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List credentials",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List credentials",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "credentials"
        ],
        "summary": "Create a credential",
        "description": "Returns created credential based on the given filters",
        "operationId": "postCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a credential",
                  "properties": {
                    "attributes": {
                      "description": "Create a credential",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Create a credential",
                          "type": "number",
                          "example": 1
                        },
                        "username": {
                          "description": "Create a credential",
                          "type": "string",
                          "example": "Test username"
                        },
                        "password": {
                          "description": "Create a credential",
                          "type": "string"
                        },
                        "clinic_xray_system_id": {
                          "description": "Create a credential",
                          "type": "number",
                          "example": 2
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a credential",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a credential",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/credentials/{id}": {
      "get": {
        "tags": [
          "credentials"
        ],
        "summary": "Retrieve a credential",
        "description": "Returns certain credential based on the given filters",
        "operationId": "getCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinic', 'clinic_xray_system'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a credential",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a credential",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "credentials"
        ],
        "summary": "Edit a credential",
        "description": "Returns edited credential based on the given filters",
        "operationId": "patchCredential",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a credential",
                  "properties": {
                    "attributes": {
                      "description": "Edit a credential",
                      "properties": {
                        "user_at_clinic_id": {
                          "description": "Edit a credential",
                          "type": "number",
                          "example": 1
                        },
                        "username": {
                          "description": "Edit a credential",
                          "type": "string",
                          "example": "Test username"
                        },
                        "password": {
                          "description": "Edit a credential",
                          "type": "string"
                        },
                        "clinic_xray_system_id": {
                          "description": "Edit a credential",
                          "type": "number",
                          "example": 2
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a credential",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CredentialsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a credential",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/credit-checks": {
      "post": {
        "tags": [
          "credit-checks"
        ],
        "summary": "Create a credit-check",
        "description": "Returns created credit check based on the given filters",
        "operationId": "postCreditCheck",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'organization', 'supplier', 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "valid_until",
            "in": "query",
            "description": "'valid_until' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "'supplier_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a credit-check",
                  "properties": {
                    "attributes": {
                      "description": "Create a credit-check",
                      "properties": {
                        "patient_id": {
                          "description": "Create a credit-check",
                          "type": "number",
                          "example": 1
                        },
                        "organization_id": {
                          "description": "Create a credit-check",
                          "type": "number",
                          "example": 124
                        },
                        "amount": {
                          "description": "Create a credit-check",
                          "type": "number",
                          "example": 100
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a credit-check",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CreditChecksResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a credit-check",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/currencies": {
      "get": {
        "tags": [
          "currencies"
        ],
        "summary": "List currencies",
        "description": "Returns list of currencies based on the given filters",
        "operationId": "getCurrencies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'countries'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List currencies",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CurrencyWebhookRequest"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List currencies",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/custom-payment-types": {
      "get": {
        "tags": [
          "custom-payment-types"
        ],
        "summary": "List custom-payment-types",
        "description": "Returns list of custom payment types based on the given filters",
        "operationId": "getCustomPaymentTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'payment_type', 'account', 'clinics'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List custom-payment-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomPaymentTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List custom-payment-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "custom-payment-types"
        ],
        "summary": "Create a custom-payment-type",
        "description": "Returns created custom payment type based on the given filters",
        "operationId": "postCustomPaymentType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a custom-payment-type",
                  "properties": {
                    "attributes": {
                      "description": "Create a custom-payment-type",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Create a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "payment_type_id": {
                          "description": "Create a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "account_id": {
                          "description": "Create a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "label": {
                          "description": "Create a custom-payment-type",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "clinics",
            "in": "query",
            "description": "'clinics' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a custom-payment-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomPaymentTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a custom-payment-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/custom-payment-types/{id}": {
      "get": {
        "tags": [
          "custom-payment-types"
        ],
        "summary": "Retrieve a custom-payment-type",
        "description": "Returns certain custom payment type based on the given filters",
        "operationId": "getCustomPaymentType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'fiscal_year', 'payment_type', 'account', 'clinics'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a custom-payment-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomPaymentTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a custom-payment-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "custom-payment-types"
        ],
        "summary": "Edit a custom-payment-type",
        "description": "Returns edited custom payment type based on the given filters",
        "operationId": "patchCustomPaymentType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a custom-payment-type",
                  "properties": {
                    "attributes": {
                      "description": "Edit a custom-payment-type",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Edit a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "payment_type_id": {
                          "description": "Edit a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "account_id": {
                          "description": "Edit a custom-payment-type",
                          "type": "number",
                          "example": 1
                        },
                        "label": {
                          "description": "Edit a custom-payment-type",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a custom-payment-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomPaymentTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a custom-payment-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customer-credit-report-rows": {
      "get": {
        "tags": [
          "customer-credit-report-rows"
        ],
        "summary": "List customer-credit-report-rows",
        "description": "Returns a list of customer credit report rows based on the given filters",
        "operationId": "getCustomerCreditReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List customer-credit-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AccountingTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List customer-credit-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customer-losses/book": {
      "post": {
        "tags": [
          "customer-losses"
        ],
        "summary": "Book a customer-loss",
        "description": "Returns booked customer loss based on the given filters",
        "operationId": "postCustomerLossesDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'invoice', 'verification'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "amount",
            "in": "query",
            "description": "'amount' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "comment",
            "in": "query",
            "description": "'comment' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "date",
            "in": "query",
            "description": "'date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Book a customer-loss",
                  "properties": {
                    "attributes": {
                      "description": "Book a customer-loss",
                      "properties": {
                        "invoice_id": {
                          "description": "Book a customer-loss",
                          "type": "number",
                          "example": 123
                        },
                        "amount": {
                          "description": "Book a customer-loss",
                          "type": "number",
                          "example": 123
                        },
                        "date": {
                          "description": "Book a customer-loss",
                          "type": "string",
                          "example": "2024-11-08T18:48:44+00:00"
                        },
                        "comment": {
                          "description": "Book a customer-loss",
                          "type": "string",
                          "example": "Test comment"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Book a customer-loss",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomerLossResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Book a customer-loss",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/customer-receivable-report-rows": {
      "get": {
        "tags": [
          "customer-receivable-report-rows"
        ],
        "summary": "List customer-receivable-report-rows",
        "description": "Returns a list of customer receivable report rows based on the given filters",
        "operationId": "getCustomerReceivableReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'currency'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List customer-receivable-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CustomerReceivableRepRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List customer-receivable-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/daily-reconciliations": {
      "get": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "List daily-reconciliations",
        "description": "Returns list of daily reconciliations based on the given filters",
        "operationId": "ListDailyReconciliations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'fiscal_year', 'clinic', 'currency', 'cash_register', 'signer', 'card_invoice_payments', 'cash_invoice_payments', 'mobile_invoice_payments', 'depositions', 'cash_supplier_payments', 'patient_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "fiscal_year_id",
            "in": "query",
            "description": "'fiscal_year_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List daily-reconciliations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List daily-reconciliations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Create a daily-reconciliation",
        "description": "Returns created daily reconciliation based on the given filters",
        "operationId": "postDailyReconciliation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a daily-reconciliation",
                  "properties": {
                    "attributes": {
                      "description": "Create a daily-reconciliation",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Create a daily-reconciliation",
                          "type": "number"
                        },
                        "clinic_id": {
                          "description": "Create a daily-reconciliation",
                          "type": "number"
                        },
                        "currency_id": {
                          "description": "Create a daily-reconciliation",
                          "type": "number"
                        },
                        "date": {
                          "description": "Create a daily-reconciliation",
                          "type": "string",
                          "example": "2024-08-02T09:16:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/daily-reconciliations/{id}": {
      "get": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Retrieve a daily-reconciliation",
        "description": "Returns certain daily reconciliation based on the given filters",
        "operationId": "getDailyReconciliation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'organization', 'fiscal_year', 'clinic', 'currency', 'cash_register', 'signer', 'card_invoice_payments', 'cash_invoice_payments', 'mobile_invoice_payments', 'depositions', 'cash_supplier_payments', 'patient_invoices'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Edit a daily-reconciliation",
        "description": "Returns edited daily reconciliation based on the given filters",
        "operationId": "patchDailyReconciliation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a daily-reconciliation",
                  "properties": {
                    "attributes": {
                      "description": "Edit a daily-reconciliation",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Edit a daily-reconciliation",
                          "type": "number"
                        },
                        "clinic_id": {
                          "description": "Edit a daily-reconciliation",
                          "type": "number"
                        },
                        "currency_id": {
                          "description": "Edit a daily-reconciliation",
                          "type": "number"
                        },
                        "date": {
                          "description": "Edit a daily-reconciliation",
                          "type": "string",
                          "example": "2024-08-02T09:16:31+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/daily-reconciliations/{id}/delete": {
      "post": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Delete a daily-reconciliation",
        "description": "Returns deleted daily reconciliation based on the given filters",
        "operationId": "postDailyReconciliationUnDeletion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a daily-reconciliation",
                  "properties": {
                    "attributes": {
                      "description": "Delete a daily-reconciliation",
                      "properties": {
                        "signing_password": {
                          "description": "Delete a daily-reconciliation",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/daily-reconciliations/{id}/sign": {
      "post": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Sign a daily-reconciliation",
        "description": "Returns signed daily reconciliation based on the given filters",
        "operationId": "postDailyReconciliationSign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a daily-reconciliation",
                  "properties": {
                    "attributes": {
                      "description": "Sign a daily-reconciliation",
                      "properties": {
                        "signing_password": {
                          "description": "Sign a daily-reconciliation",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/daily-reconciliations/{id}/unsign": {
      "post": {
        "tags": [
          "daily-reconciliations"
        ],
        "summary": "Unsign a daily-reconciliation",
        "description": "Returns unsigned daily reconciliation based on the given filters",
        "operationId": "postDailyReconciliationUnSign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign a daily-reconciliation",
                  "properties": {
                    "attributes": {
                      "description": "Unsign a daily-reconciliation",
                      "properties": {
                        "signing_password": {
                          "description": "Unsign a daily-reconciliation",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unsign a daily-reconciliation",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DailyReconciliationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unsign a daily-reconciliation",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dashboard-reports": {
      "get": {
        "tags": [
          "dashboard-reports"
        ],
        "summary": "List dashboard-reports",
        "description": "Returns a list of dashboard reports based on the given filters",
        "operationId": "getDashboardReports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user_at_clinics'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_at_clinic_id",
            "in": "query",
            "description": "'user_at_clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dashboard-reports",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardReportResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dashboard-reports",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dashboard-reports/{id}/add": {
      "post": {
        "tags": [
          "dashboard-reports"
        ],
        "summary": "Add a dashboard-report",
        "description": "Returns added dashboard report based on the given filters",
        "operationId": "postAddDashboardReport",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Add a dashboard-report",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardReportResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Add a dashboard-report",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dashboard-reports/{id}/remove": {
      "post": {
        "tags": [
          "dashboard-reports"
        ],
        "summary": "Remove a dashboard-report",
        "description": "Returns removed dashboard report based on the given filters",
        "operationId": "postRemoveDashboardReportDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Remove a dashboard-report",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DashboardReportResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Remove a dashboard-report",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/debt-collection-services": {
      "get": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "List debt-collection-services",
        "description": "Returns a list of debt collection services based on the given filters",
        "operationId": "getDebtCollectionServices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_article', 'organization', 'order_line', 'invoice', 'api_responses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "'organization_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "invoice_id",
            "in": "query",
            "description": "'invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List debt-collection-services",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List debt-collection-services",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "Create a debt-collection-service",
        "description": "Returns created debt collection service based on the given filters",
        "operationId": "postDebtCollectionService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a debt-collection-service",
                  "properties": {
                    "attributes": {
                      "description": "Create a debt-collection-service",
                      "properties": {
                        "invoice_url": {
                          "description": "Create a debt-collection-service",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create a debt-collection-service",
                          "type": "boolean",
                          "example": true
                        },
                        "supplier_article_id": {
                          "description": "Create a debt-collection-service",
                          "type": "number"
                        },
                        "invoice_id": {
                          "description": "Create a debt-collection-service",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a debt-collection-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a debt-collection-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/debt-collection-services/{id}": {
      "get": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "Retrieve a debt-collection-service",
        "description": "Returns certain debt collection service based on the given filters",
        "operationId": "getDebtCollectionService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_article', 'organization', 'order_line', 'invoice', 'api_responses'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a debt-collection-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a debt-collection-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "Edit a debt-collection-service",
        "description": "Returns edited debt collection service based on the given filters",
        "operationId": "patchEditDebtCollectionService",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a debt-collection-service",
                  "properties": {
                    "attributes": {
                      "description": "Edit a debt-collection-service",
                      "properties": {
                        "invoice_url": {
                          "description": "Edit a debt-collection-service",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a debt-collection-service",
                          "type": "boolean",
                          "example": true
                        },
                        "supplier_article_id": {
                          "description": "Edit a debt-collection-service",
                          "type": "number"
                        },
                        "invoice_id": {
                          "description": "Edit a debt-collection-service",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a debt-collection-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a debt-collection-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/debt-collection-services/{id}/cancel": {
      "post": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "Cancel a debt-collection-service",
        "description": "Returns cancelled debt collection service based on the given filters",
        "operationId": "postCancelDebtCollectionServiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Cancel a debt-collection-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Cancel a debt-collection-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/debt-collection-services/{id}/send": {
      "post": {
        "tags": [
          "debt-collection-services"
        ],
        "summary": "Send debt-collection-service",
        "description": "Returns sent debt collection service based on the given filters",
        "operationId": "postSendDebtCollectionServiceDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Send debt-collection-service",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DebtCollectionServicesResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Send debt-collection-service",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-emails": {
      "get": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "List declaration-emails",
        "description": "Returns list of declaration emails based on the given filters",
        "operationId": "getDeclarationEmails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_attendee_id",
            "in": "query",
            "description": "'booking_attendee_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List declaration-emails",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List declaration-emails",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "Create a declaration-email",
        "description": "Returns created declaration email based on the given filters",
        "operationId": "postDeclarationEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-email",
                  "properties": {
                    "attributes": {
                      "description": "Create a declaration-email",
                      "properties": {
                        "subject": {
                          "description": "Create a declaration-email",
                          "type": "string"
                        },
                        "booking_attendee_id": {
                          "description": "Create a declaration-email",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "sent_at",
            "in": "query",
            "description": "'sent_at' field. Example: '2024-10-12T15:20:00'.",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a declaration-email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-emails/{id}": {
      "get": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "Retrieve a declaration-email",
        "description": "Returns certain declaration email based on the given filters",
        "operationId": "getDeclarationEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a declaration-email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a declaration-email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "Edit a declaration-email",
        "description": "Returns edited declaration email based on the given filters",
        "operationId": "patchDeclarationEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-email",
                  "properties": {
                    "attributes": {
                      "description": "Edit a declaration-email",
                      "properties": {
                        "subject": {
                          "description": "Edit a declaration-email",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit a declaration-email",
                          "type": "boolean",
                          "example": false
                        },
                        "sent_at": {
                          "description": "Edit a declaration-email",
                          "type": "string"
                        },
                        "booking_attendee_id": {
                          "description": "Edit a declaration-email",
                          "type": "number",
                          "example": 123
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a declaration-email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-emails/{id}/schedule": {
      "post": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "Schedule a declaration-email",
        "description": "Returns scheduled declaration email based on the given filters",
        "operationId": "postDeclarationEmailSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Schedule a declaration-email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Schedule a declaration-email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-emails/{id}/unschedule": {
      "post": {
        "tags": [
          "declaration-emails"
        ],
        "summary": "Unschedule a declaration-email",
        "description": "Returns unscheduled declaration email based on the given filters",
        "operationId": "postDeclarationEmailUnSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unschedule a declaration-email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationEmailResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unschedule a declaration-email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-categories": {
      "get": {
        "tags": [
          "declaration-item-categories"
        ],
        "summary": "List declaration-item-categories",
        "description": "Returns a list of declaration item categories based on the given filters",
        "operationId": "getDeclarationItemCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration_item_templates'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List declaration-item-categories",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List declaration-item-categories",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-categories/{id}": {
      "get": {
        "tags": [
          "declaration-item-categories"
        ],
        "summary": "Retrieve a declaration-item-category",
        "description": "Returns certain declaration item category based on the given filters",
        "operationId": "getDeclarationItemCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration_item_templates'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a declaration-item-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a declaration-item-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "declaration-item-categories"
        ],
        "summary": "Edit a declaration-item-category",
        "description": "Returns certain declaration item category based on the given filters",
        "operationId": "patchDeclarationItemCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'label' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-item-category",
                  "properties": {
                    "attributes": {
                      "description": "Edit a declaration-item-category",
                      "properties": {
                        "label": {
                          "description": "Edit a declaration-item-category",
                          "type": "string",
                          "example": "Allmän information"
                        },
                        "order": {
                          "description": "Edit a declaration-item-category",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-item-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a declaration-item-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-templates": {
      "get": {
        "tags": [
          "declaration-item-templates"
        ],
        "summary": "List declaration-item-templates",
        "description": "Returns list of declaration item templates based on the given filters",
        "operationId": "getDeclarationItemTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration_item_category'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "declaration_item_category_id",
            "in": "query",
            "description": "'declaration_item_category_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List declaration-item-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List declaration-item-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "declaration-item-templates"
        ],
        "summary": "Create a declaration-item-template",
        "description": "Returns created declaration item templates based on the given filters",
        "operationId": "postDeclarationItemTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-item-template",
                  "properties": {
                    "attributes": {
                      "description": "Create a declaration-item-template",
                      "properties": {
                        "declaration_item_category_id": {
                          "description": "Create a declaration-item-template",
                          "type": "number",
                          "example": 1
                        },
                        "label": {
                          "description": "Create a declaration-item-template",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-item-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a declaration-item-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-templates/{id}": {
      "get": {
        "tags": [
          "declaration-item-templates"
        ],
        "summary": "Retrieve a declaration-item-template",
        "description": "Returns certain declaration item templates based on the given filters",
        "operationId": "getDeclarationItemTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration_item_category'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a declaration-item-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a declaration-item-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-templates/{id}/delete": {
      "post": {
        "tags": [
          "declaration-item-templates"
        ],
        "summary": "Delete a declaration-item-template",
        "description": "Returns deleted declaration item template based on the given filters",
        "operationId": "postDeclarationItemTemplateDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a declaration-item-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a declaration-item-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-item-templates/{id}/toggle-cave": {
      "post": {
        "tags": [
          "declaration-item-templates"
        ],
        "summary": "Toggle whether a declaration-item-template is cave",
        "description": "Returns declaration item template based on the given filters",
        "operationId": "postToggleCaveDeclarationItemTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Toggle whether a declaration-item-template is cave",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Toggle whether a declaration-item-template is cave",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-items": {
      "get": {
        "tags": [
          "declaration-items"
        ],
        "summary": "List declaration-items",
        "description": "Returns a list of declaration items based on the given filters",
        "operationId": "getDeclarationItems",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration', 'declaration_item_template'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "declaration_id",
            "in": "query",
            "description": "'declaration_id' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List declaration-items",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List declaration-items",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-items/{id}": {
      "get": {
        "tags": [
          "declaration-items"
        ],
        "summary": "Retrieve a declaration-item",
        "description": "Returns certain declaration item based on the given filters",
        "operationId": "getDeclarationItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'declaration', 'declaration_item_template'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a declaration-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a declaration-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "declaration-items"
        ],
        "summary": "Edit a declaration-item",
        "description": "Returns edited declaration item based on the given filters",
        "operationId": "patchDeclarationItem",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-item",
                  "properties": {
                    "attributes": {
                      "description": "Edit a declaration-item",
                      "properties": {
                        "value": {
                          "description": "Edit a declaration-item",
                          "type": "boolean",
                          "example": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-item",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationItemResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a declaration-item",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-sms": {
      "get": {
        "tags": [
          "declaration-sms"
        ],
        "summary": "List declaration-sms",
        "description": "Returns list of declaration sms based on the given filters",
        "operationId": "getListDeclarationSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_article', 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_attendee_id",
            "in": "query",
            "description": "'booking_attendee_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "'scheduled' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List declaration-sms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationSmsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List declaration-sms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "declaration-sms"
        ],
        "summary": "Create a declaration-sms",
        "description": "Returns created declaration sms based on the given filters",
        "operationId": "postDeclarationSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-sms",
                  "properties": {
                    "attributes": {
                      "description": "Create a declaration-sms",
                      "properties": {
                        "from": {
                          "description": "Create a declaration-sms",
                          "type": "string"
                        },
                        "to": {
                          "description": "Create a declaration-sms",
                          "type": "string"
                        },
                        "body": {
                          "description": "Create a declaration-sms",
                          "type": "string"
                        },
                        "sent_at": {
                          "description": "Create a declaration-sms",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "supplier_article_id": {
                          "description": "Create a declaration-sms",
                          "type": "number"
                        },
                        "booking_attendee_id": {
                          "description": "Create a declaration-sms",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "booking_attendee_id",
            "in": "query",
            "description": "'booking_attendee_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "scheduled",
            "in": "query",
            "description": "'scheduled' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a declaration-sms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationSmsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a declaration-sms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declaration-sms/{id}": {
      "get": {
        "tags": [
          "declaration-sms"
        ],
        "summary": "Retrieve a declaration-sms",
        "description": "Returns certain declaration sms based on the given filters",
        "operationId": "getDeclarationSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_article', 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a declaration-sms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationSmsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a declaration-sms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "declaration-sms"
        ],
        "summary": "Edit a declaration-sms",
        "description": "Returns edited declaration sms based on the given filters",
        "operationId": "patchDeclarationSms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-sms",
                  "properties": {
                    "attributes": {
                      "description": "Edit a declaration-sms",
                      "properties": {
                        "from": {
                          "description": "Edit a declaration-sms",
                          "type": "string"
                        },
                        "to": {
                          "description": "Edit a declaration-sms",
                          "type": "string"
                        },
                        "body": {
                          "description": "Edit a declaration-sms",
                          "type": "string"
                        },
                        "sent_at": {
                          "description": "Edit a declaration-sms",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "supplier_article_id": {
                          "description": "Edit a declaration-sms",
                          "type": "number"
                        },
                        "booking_attendee_id": {
                          "description": "Edit a declaration-sms",
                          "type": "number"
                        },
                        "deleted": {
                          "description": "Edit a declaration-sms",
                          "type": "boolean"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a declaration-sms",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationSmsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a declaration-sms",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declarations": {
      "get": {
        "tags": [
          "declarations"
        ],
        "summary": "List health declarations",
        "description": "Returns a list of health declarations based on the given filters",
        "operationId": "getDeclarations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient', 'declaration_items', 'journal_pharmaceutical_articles', 'updater', 'signer'",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "Patient id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "history_id",
            "in": "query",
            "description": "History id field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List health declarations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List health declarations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "declarations"
        ],
        "summary": "Create a health declaration",
        "description": "Returns created health declaration based on the given filters",
        "operationId": "postDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'patiend_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a health declaration",
                  "properties": {
                    "attributes": {
                      "description": "Create a health declaration",
                      "properties": {
                        "patient_id": {
                          "description": "Create a health declaration",
                          "type": "number",
                          "example": 1
                        },
                        "journal_pharmaceutical_articles": {
                          "description": "Create a health declaration",
                          "type": "number",
                          "example": 1
                        },
                        "asthma": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "blood_infection": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "hemophilia": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cancer": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "diabetes": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "epilepsy": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "hiv_aids": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cerebral_haemorrhage": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cardiovascular_diseases": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "high_blood_pressure": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "immunological_disease": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "supplement_for_dental_treatment": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "nutrition_diet": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "respiratory_disease": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "parkinsons": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mental_health_problems": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "rheumatic_disease": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "smokes_takes_snuff": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "gets_chemo_therapy": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "eating_disorder": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "ear_nose_throat": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_latex": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_local_anesthesia": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_edibles": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_nickel": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_penicillin": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_pollen": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_other": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_bleeding_gums": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_bruxism": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_halitosis": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_finger_sucker": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_mouth_breather": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_mouth_ulceration": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_xerostomia": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_sore_masticatory_muscles": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_other": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "osteoporosis": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_hearing": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_reduced_mobility": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_vision": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_speech": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pacemaker": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "bisphosphonate": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pain_in_face_jaw_or_temple": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pain_when_opening_or_chewing": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "locks_jaw": {
                          "description": "Create a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_health_evaluation": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "pregnant_due_date": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "last_dental_treatment": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "registration_date": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "special_notes": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "complementary_information": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medications": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medications_free_text": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medical_treatment_past_two_years": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medical_treatment": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "reason_patient_visits": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "submitted_by_patient_at": {
                          "description": "Create a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "signed_at": {
                          "description": "Create a health declaration",
                          "type": "string"
                        },
                        "prev_history_id": {
                          "description": "Create a health declaration",
                          "type": "string"
                        },
                        "next_history_id": {
                          "description": "Create a health declaration",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a health declaration",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a health declaration",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "declarations"
        ],
        "summary": "Edit a health declaration",
        "description": "Returns edited health declaration based on the given filters",
        "operationId": "patchDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'patiend_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a health declaration",
                  "properties": {
                    "attributes": {
                      "description": "Edit a health declaration",
                      "properties": {
                        "patient_id": {
                          "description": "Edit a health declaration",
                          "type": "number",
                          "example": 1
                        },
                        "journal_pharmaceutical_articles": {
                          "description": "Edit a health declaration",
                          "type": "number",
                          "example": 1
                        },
                        "asthma": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "blood_infection": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "hemophilia": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cancer": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "diabetes": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "epilepsy": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "hiv_aids": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cerebral_haemorrhage": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "cardiovascular_diseases": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "high_blood_pressure": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "immunological_disease": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "supplement_for_dental_treatment": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "nutrition_diet": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "respiratory_disease": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "parkinsons": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mental_health_problems": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "rheumatic_disease": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "smokes_takes_snuff": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "gets_chemo_therapy": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "eating_disorder": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "ear_nose_throat": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_latex": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_local_anesthesia": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_edibles": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_nickel": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_penicillin": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_pollen": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "allergy_other": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_bleeding_gums": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_bruxism": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_halitosis": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_finger_sucker": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_mouth_breather": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_mouth_ulceration": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_xerostomia": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_sore_masticatory_muscles": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "mouth_other": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "osteoporosis": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_hearing": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_reduced_mobility": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_vision": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "other_impaired_speech": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pacemaker": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "bisphosphonate": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pain_in_face_jaw_or_temple": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "pain_when_opening_or_chewing": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "locks_jaw": {
                          "description": "Edit a health declaration",
                          "type": "boolean",
                          "example": false
                        },
                        "patient_health_evaluation": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "pregnant_due_date": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "last_dental_treatment": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "registration_date": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "special_notes": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "complementary_information": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medications": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medications_free_text": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medical_treatment_past_two_years": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "medical_treatment": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "reason_patient_visits": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "submitted_by_patient_at": {
                          "description": "Edit a health declaration",
                          "type": "string",
                          "example": false
                        },
                        "signed_at": {
                          "description": "Edit a health declaration",
                          "type": "string"
                        },
                        "prev_history_id": {
                          "description": "Edit a health declaration",
                          "type": "string"
                        },
                        "next_history_id": {
                          "description": "Edit a health declaration",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a health declaration",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a health declaration",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declarations/{id}/create-new-version": {
      "post": {
        "tags": [
          "declarations"
        ],
        "summary": "Create new version of health declaration",
        "description": "Returns newly created version of health declaration based on the given filters",
        "operationId": "postCreateNewVersionHealthDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create new version of health declaration",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create new version of health declaration",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/declarations/{id}/sign": {
      "post": {
        "tags": [
          "declarations"
        ],
        "summary": "Sign health declaration",
        "description": "Returns signed health declaration based on the given filters",
        "operationId": "postSignHealthDeclaration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign health declaration",
                  "properties": {
                    "attributes": {
                      "description": "Sign health declaration",
                      "properties": {
                        "signer_id": {
                          "description": "Sign health declaration",
                          "type": "number",
                          "example": 1
                        },
                        "signing_password": {
                          "description": "Sign health declaration",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign health declaration",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeclarationsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign health declaration",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deductions/{id}": {
      "patch": {
        "tags": [
          "deductions"
        ],
        "summary": "Edit a deduction",
        "description": "Returns edited deduction based on the given filters",
        "operationId": "patchDeducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a deduction",
                  "properties": {
                    "attributes": {
                      "description": "Edit a deduction",
                      "properties": {
                        "deducted_from_invoice": {
                          "description": "Edit a deduction",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a deduction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeductionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a deduction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveries": {
      "get": {
        "tags": [
          "deliveries"
        ],
        "summary": "List deliveries",
        "description": "Returns list of deliveries based on the given filters",
        "operationId": "getDeliveries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'signer', 'delivery_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "Clinic id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List deliveries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List deliveries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "deliveries"
        ],
        "summary": "Create a delivery",
        "description": "Returns created delivery based on the given filters",
        "operationId": "postDelivery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a delivery",
                  "properties": {
                    "attributes": {
                      "description": "Create a delivery",
                      "properties": {
                        "date": {
                          "description": "Create a delivery",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a delivery",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a delivery",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/deliveries/{id}": {
      "get": {
        "tags": [
          "deliveries"
        ],
        "summary": "Retrieve a delivery",
        "description": "Returns certain delivery based on the given filters",
        "operationId": "getDeliveryById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'signer', 'delivery_rows'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a delivery",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a delivery",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "deliveries"
        ],
        "summary": "Edit a delivery",
        "description": "Returns edited delivery based on the given filters",
        "operationId": "patchDelivery",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a delivery",
                  "properties": {
                    "attributes": {
                      "description": "Edit a delivery",
                      "properties": {
                        "date": {
                          "description": "Edit a delivery",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a delivery",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a delivery",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/delivery-rows": {
      "get": {
        "tags": [
          "delivery-rows"
        ],
        "summary": "List delivery-rows",
        "description": "Returns list of delivery rows based on the given filters",
        "operationId": "getDeliveryRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'delivery', 'price'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "delivery_ids",
            "in": "query",
            "description": "Delivery id(s) field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "default": ""
          },
          {
            "name": "delivery_id",
            "in": "query",
            "description": "'delivery_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "price_id",
            "in": "query",
            "description": "'price_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List delivery-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List delivery-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "delivery-rows"
        ],
        "summary": "Create a delivery-row",
        "description": "Returns created delivery row based on the given filters",
        "operationId": "postDeliveryRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a delivery-row",
                  "properties": {
                    "attributes": {
                      "description": "Create a delivery-row",
                      "properties": {
                        "price_code": {
                          "description": "Create a delivery-row",
                          "type": "string"
                        },
                        "price_name": {
                          "description": "Create a delivery-row",
                          "type": "string",
                          "example": "test name"
                        },
                        "purchase_price_excluding_vat": {
                          "description": "Create a delivery-row",
                          "type": "number",
                          "example": 2
                        },
                        "quantity": {
                          "description": "Create a delivery-row",
                          "type": "number",
                          "example": 3
                        },
                        "vat_code_id": {
                          "description": "Create a delivery-row",
                          "type": "number",
                          "example": 6
                        },
                        "price_id": {
                          "description": "Create a delivery-row",
                          "type": "number"
                        },
                        "delivery_id": {
                          "description": "Create a delivery-row",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a delivery-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a delivery-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/delivery-rows/{id}": {
      "get": {
        "tags": [
          "delivery-rows"
        ],
        "summary": "Retrieve a delivery-row",
        "description": "Returns certain delivery row based on the given filters",
        "operationId": "getDeliveryRowById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'delivery', 'price'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a delivery-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a delivery-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "delivery-rows"
        ],
        "summary": "Edit a delivery-row",
        "description": "Returns edited delivery row based on the given filters",
        "operationId": "patchDeliveryRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a delivery-row",
                  "properties": {
                    "attributes": {
                      "description": "Edit a delivery-row",
                      "properties": {
                        "price_code": {
                          "description": "Edit a delivery-row",
                          "type": "string"
                        },
                        "price_name": {
                          "description": "Edit a delivery-row",
                          "type": "string",
                          "example": "test name"
                        },
                        "purchase_price_excluding_vat": {
                          "description": "Edit a delivery-row",
                          "type": "number",
                          "example": 2
                        },
                        "quantity": {
                          "description": "Edit a delivery-row",
                          "type": "number",
                          "example": 3
                        },
                        "vat_code_id": {
                          "description": "Edit a delivery-row",
                          "type": "number",
                          "example": 6
                        },
                        "price_id": {
                          "description": "Edit a delivery-row",
                          "type": "number"
                        },
                        "delivery_id": {
                          "description": "Edit a delivery-row",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a delivery-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeliveryRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a delivery-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-anchorings": {
      "get": {
        "tags": [
          "dental-lab-anchorings"
        ],
        "summary": "List dental-lab-anchorings",
        "description": "Returns a list of dental lab anchorings based on the given filters",
        "operationId": "getDentalLabAnchorings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-anchorings",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabAnchoringResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-anchorings",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-anchorings/{id}": {
      "get": {
        "tags": [
          "dental-lab-anchorings"
        ],
        "summary": "Retrieve a dental-lab-anchoring",
        "description": "Returns certain dental lab anchoring based on the given filters",
        "operationId": "getDentalLabAnchoringById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-anchoring",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabAnchoringResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-anchoring",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-categories": {
      "get": {
        "tags": [
          "dental-lab-categories"
        ],
        "summary": "List dental-lab-categories",
        "description": "Returns dental lab categories based on the given filters",
        "operationId": "getDentalLabCategories",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'types'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-categories",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-categories",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-categories/{id}": {
      "get": {
        "tags": [
          "dental-lab-categories"
        ],
        "summary": "Retrieve a dental-lab-category",
        "description": "Returns certain lab categories based on the given filters",
        "operationId": "getDentalLabCategory",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'types'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-category",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabCategoryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-category",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-constructions": {
      "get": {
        "tags": [
          "dental-lab-constructions"
        ],
        "summary": "List dental-lab-constructions",
        "description": "Returns a list of dental lab constructions based on the given filters",
        "operationId": "getDentalLabConstructions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', type', 'anchoring', 'color', 'design', 'interproximal_contact', 'material', 'occlusion', 'pontic_design', 'process_step', 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-constructions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabConstructionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-constructions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental-lab-constructions"
        ],
        "summary": "Create a dental-lab-construction",
        "description": "Returns created dental lab construction based on the given filters",
        "operationId": "postDentalLabConstruction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-construction",
                  "properties": {
                    "attributes": {
                      "description": "Create a dental-lab-construction",
                      "properties": {
                        "dental_lab_order_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "type_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "comment": {
                          "description": "Create a dental-lab-construction",
                          "type": "string",
                          "example": "Test comment"
                        },
                        "pick_out_color_in_lab": {
                          "description": "Create a dental-lab-construction",
                          "type": "boolean",
                          "example": true
                        },
                        "splint_soft_inside": {
                          "description": "Create a dental-lab-construction",
                          "type": "boolean",
                          "example": false
                        },
                        "due_date": {
                          "description": "Create a dental-lab-construction",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "anchoring_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "color_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "design_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "interproximal_contact_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "material_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "occlusion_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "pontic_design_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        },
                        "process_step_id": {
                          "description": "Create a dental-lab-construction",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-construction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabConstructionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a dental-lab-construction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-constructions/{id}": {
      "get": {
        "tags": [
          "dental-lab-constructions"
        ],
        "summary": "Retrieve a dental-lab-construction",
        "description": "Returns certain dental lab construction based on the given filters",
        "operationId": "getDentalLabConstruction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', type', 'anchoring', 'color', 'design', 'interproximal_contact', 'material', 'occlusion', 'pontic_design', 'process_step', 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-construction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabConstructionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-construction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dental-lab-constructions"
        ],
        "summary": "Edit a dental-lab-construction",
        "description": "Returns edited dental lab construction based on the given filters",
        "operationId": "patchDentalLabConstruction",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-construction",
                  "properties": {
                    "attributes": {
                      "description": "Edit a dental-lab-construction",
                      "properties": {
                        "dental_lab_order_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "type_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "comment": {
                          "description": "Edit a dental-lab-construction",
                          "type": "string",
                          "example": "Test comment"
                        },
                        "pick_out_color_in_lab": {
                          "description": "Edit a dental-lab-construction",
                          "type": "boolean",
                          "example": true
                        },
                        "splint_soft_inside": {
                          "description": "Edit a dental-lab-construction",
                          "type": "boolean",
                          "example": false
                        },
                        "due_date": {
                          "description": "Edit a dental-lab-construction",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "anchoring_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "color_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "design_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "interproximal_contact_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "material_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "occlusion_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "pontic_design_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        },
                        "process_step_id": {
                          "description": "Edit a dental-lab-construction",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-construction",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabConstructionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a dental-lab-construction",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-deliveries": {
      "get": {
        "tags": [
          "dental-lab-deliveries"
        ],
        "summary": "List dental-lab-deliveries",
        "description": "Returns a list of dental lab deliveries based on the given filters",
        "operationId": "getDentalLabDeliveries",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', 'dental_lab_order_lines'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-deliveries",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabDeliveryResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-deliveries",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-deliveries/{id}/pdf": {
      "get": {
        "tags": [
          "dental-lab-deliveries"
        ],
        "summary": "Get pdf for dental-lab-delivery",
        "description": "Returns pdf for dental lab delivery based on the given filters",
        "operationId": "getDentalLabDeliveriesPdf",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/pdf"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Base64-encoded pdf",
            "schema": {
              "properties": {
                "file": {
                  "description": "Base64-encoded pdf file",
                  "type": "string",
                  "example": "JVBERi0xLjQKJcfs..."
                },
                "filename": {
                  "description": "Name of the pdf file",
                  "type": "string",
                  "example": "dental-lab-deliveries-1.pdf"
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Get pdf for dental-lab-delivery",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-designs": {
      "get": {
        "tags": [
          "dental-lab-designs"
        ],
        "summary": "List dental-lab-designs",
        "description": "Returns a list of dental lab designs based on the given filters",
        "operationId": "getDentalLabDesignList",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-designs",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabDesignDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-designs",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-designs/{id}": {
      "get": {
        "tags": [
          "dental-lab-designs"
        ],
        "summary": "Retrieve a dental-lab-design",
        "description": "Returns certain dental lab design based on the given filters",
        "operationId": "getDentalLabDesignById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-design",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabDesignDocResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-design",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-interproximal-contacts": {
      "get": {
        "tags": [
          "dental-lab-interproximal-contacts"
        ],
        "summary": "List dental-lab-interproximal-contacts",
        "description": "Returns a list of dental lab interproximal contacts based on the given filters",
        "operationId": "getDentalLabInterproximalContacts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-interproximal-contacts",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabInterproximalContactResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-interproximal-contacts",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-interproximal-contacts/{id}": {
      "get": {
        "tags": [
          "dental-lab-interproximal-contacts"
        ],
        "summary": "Retrieve a dental-lab-interproximal-contact",
        "description": "Returns certain dental lab interproximal contact based on the given filters",
        "operationId": "getDentalLabInterproximalContactById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-interproximal-contact",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabInterproximalContactResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-interproximal-contact",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-materials": {
      "get": {
        "tags": [
          "dental-lab-materials"
        ],
        "summary": "List dental-lab-materials",
        "description": "Returns a list of dental lab materials based on the given filters",
        "operationId": "getDentalLabMaterials",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-materials",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabMaterialResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-materials",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-materials/{id}": {
      "get": {
        "tags": [
          "dental-lab-materials"
        ],
        "summary": "Retrieve a dental-lab-material",
        "description": "Returns certain dental lab material based on the given filters",
        "operationId": "getDentalLabMaterial",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-material",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabMaterialResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-material",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-occlusions": {
      "get": {
        "tags": [
          "dental-lab-occlusions"
        ],
        "summary": "List dental-lab-occlusions",
        "description": "Returns a list of dental lab occlusions based on the given filters",
        "operationId": "getDentalLabOcclusions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-occlusions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOcclusionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-occlusions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-occlusions/{id}": {
      "get": {
        "tags": [
          "dental-lab-occlusions"
        ],
        "summary": "Retrieve a dental-lab-occlusion",
        "description": "Returns certain dental lab occlusion based on the given filters",
        "operationId": "getDentalLabOcclusion",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-occlusion",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOcclusionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-occlusion",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-lines": {
      "get": {
        "tags": [
          "dental-lab-order-lines"
        ],
        "summary": "List dental-lab-order-lines",
        "description": "Returns a list of dental lab order lines based on the given filters",
        "operationId": "getDentalLabOrderLines",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', dental_lab_supplier_invoice_row', 'dental_lab_delivery', 'vat_code'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "dental_lab_order_id",
            "in": "query",
            "description": "'dental_lab_order_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-order-lines",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-order-lines",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental-lab-order-lines"
        ],
        "summary": "Create a dental-lab-order-line",
        "description": "Returns created dental lab order lines based on the given filters",
        "operationId": "postDentalLabOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order-line",
                  "properties": {
                    "attributes": {
                      "description": "Create a dental-lab-order-line",
                      "properties": {
                        "dental_lab_order_id": {
                          "description": "Create a dental-lab-order-line",
                          "type": "number",
                          "example": 123
                        },
                        "vat_code_id": {
                          "description": "Create a dental-lab-order-line",
                          "type": "boolean",
                          "example": true
                        },
                        "text": {
                          "description": "Create a dental-lab-order-line",
                          "type": "string",
                          "example": "Test text"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Create a dental-lab-order-line",
                          "type": "number",
                          "example": 10
                        },
                        "dispatched_at": {
                          "description": "Create a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-10-01T23:59:59+02:00"
                        },
                        "received_at": {
                          "description": "Create a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "created_at": {
                          "description": "Create a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-11-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a dental-lab-order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-lines/{id}": {
      "get": {
        "tags": [
          "dental-lab-order-lines"
        ],
        "summary": "Retrieve a dental-lab-order-line",
        "description": "Returns certain dental lab order line based on the given filters",
        "operationId": "getDentalLabOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', dental_lab_supplier_invoice_row', 'dental_lab_delivery', 'vat_code'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dental-lab-order-lines"
        ],
        "summary": "Edit a dental-lab-order-line",
        "description": "Returns edited dental lab order line based on the given filters",
        "operationId": "patchDentalLabOrderLine",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order-line",
                  "properties": {
                    "attributes": {
                      "description": "Edit a dental-lab-order-line",
                      "properties": {
                        "dental_lab_order_id": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "number",
                          "example": 123
                        },
                        "vat_code_id": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "boolean",
                          "example": true
                        },
                        "text": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "string",
                          "example": "Test text"
                        },
                        "price_excluding_vat_per_quantity": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "number",
                          "example": 10
                        },
                        "dispatched_at": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-10-01T23:59:59+02:00"
                        },
                        "received_at": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-09-01T23:59:59+02:00"
                        },
                        "created_at": {
                          "description": "Edit a dental-lab-order-line",
                          "type": "string",
                          "example": "2024-11-01T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order-line",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderLineResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a dental-lab-order-line",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-responses": {
      "get": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "List dental-lab-order-responses",
        "description": "Returns a list of dental lab order responses based on the given filters",
        "operationId": "getDentalLabOrderResponses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', dental_lab_signer', 'clinic_signer', 'files'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-order-responses",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-order-responses",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Create a dental-lab-order-response",
        "description": "Returns created dental lab order response based on the given filters",
        "operationId": "postDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order-response",
                  "properties": {
                    "attributes": {
                      "description": "Create a dental-lab-order-response",
                      "properties": {
                        "signing_password": {
                          "description": "Create a dental-lab-order-response",
                          "type": "string"
                        },
                        "dental_lab_order_id": {
                          "description": "Create a dental-lab-order-response",
                          "type": "number"
                        },
                        "text": {
                          "description": "Create a dental-lab-order-response",
                          "type": "string",
                          "example": "Test text"
                        },
                        "signed_at": {
                          "description": "Create a dental-lab-order-response",
                          "type": "string",
                          "example": "2024-09-02T23:59:59+02:00"
                        },
                        "read_at": {
                          "description": "Create a dental-lab-order-response",
                          "type": "string",
                          "example": "2024-10-02T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-responses/{id}": {
      "get": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Retrieve a dental-lab-order-response",
        "description": "Returns certain dental lab order response based on the given filters",
        "operationId": "getDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab_order', dental_lab_signer', 'clinic_signer', 'files'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Delete a dental-lab-order-response",
        "description": "Returns result of deletion for dental-lab-order-response based on the given filters",
        "operationId": "postSignDentalLabOrderResponseDelete",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Delete a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Delete a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Edit a dental-lab-order-response",
        "description": "Returns edited dental lab order response based on the given filters",
        "operationId": "patchDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order-response",
                  "properties": {
                    "attributes": {
                      "description": "Edit a dental-lab-order-response",
                      "properties": {
                        "signing_password": {
                          "description": "Edit a dental-lab-order-response",
                          "type": "string"
                        },
                        "dental_lab_order_id": {
                          "description": "Edit a dental-lab-order-response",
                          "type": "number"
                        },
                        "text": {
                          "description": "Edit a dental-lab-order-response",
                          "type": "string",
                          "example": "Test text"
                        },
                        "signed_at": {
                          "description": "Edit a dental-lab-order-response",
                          "type": "string",
                          "example": "2024-09-02T23:59:59+02:00"
                        },
                        "read_at": {
                          "description": "Edit a dental-lab-order-response",
                          "type": "string",
                          "example": "2024-10-02T23:59:59+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-responses/{id}/read": {
      "post": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Read a dental-lab-order-response",
        "description": "Returns read dental lab order response based on the given filters",
        "operationId": "postReadDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Read a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Read a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-responses/{id}/sign": {
      "post": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Sign a dental-lab-order-response",
        "description": "Returns signed dental lab order response based on the given filters",
        "operationId": "postSignDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not obligatory)",
            "required": false,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a dental-lab-order-response",
                  "properties": {
                    "attributes": {
                      "description": "Sign a dental-lab-order-response",
                      "properties": {
                        "signing_password": {
                          "description": "Sign a dental-lab-order-response",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a dental-lab-order-response",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign a dental-lab-order-response",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-order-responses/{id}/unread": {
      "post": {
        "tags": [
          "dental-lab-order-responses"
        ],
        "summary": "Mark a dental-lab-order-response as unread",
        "description": "Returns unread dental lab order response based on the given filters",
        "operationId": "postUnReadDentalLabOrderResponse",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Mark a dental-lab-order-response as unread",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponseResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Mark a dental-lab-order-response as unread",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-orders": {
      "get": {
        "tags": [
          "dental-lab-orders"
        ],
        "summary": "List dental-lab-orders",
        "description": "Returns a list of dental lab orders based on the given filters",
        "operationId": "getDentalLabOrders",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab', organization', 'clinic', 'patient', 'sender_signer', 'dental_lab_order_email', 'dental_lab_accepter', 'files', 'dental_lab_constructions', 'dental_lab_order_responses', 'dental_lab_order_lines', 'dental_lab_deliveries'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "status",
            "in": "query",
            "description": "'status' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-orders",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-orders",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "dental-lab-orders"
        ],
        "summary": "Create a dental-lab-order",
        "description": "Returns created dental lab order based on the given filters",
        "operationId": "postDentalLabOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'patient_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order",
                  "properties": {
                    "attributes": {
                      "description": "Create a dental-lab-order",
                      "properties": {
                        "patient_id": {
                          "description": "Create a dental-lab-order",
                          "type": "number",
                          "example": 1
                        },
                        "organization_id": {
                          "description": "Create a dental-lab-order",
                          "type": "number",
                          "example": 1
                        },
                        "files": {
                          "description": "Create a dental-lab-order",
                          "type": "string"
                        },
                        "patient_city": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "patient_country": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "Sweden"
                        },
                        "patient_first_name": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "John"
                        },
                        "patient_last_name": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "Otto"
                        },
                        "patient_personal_id": {
                          "description": "Create a dental-lab-order",
                          "type": "string"
                        },
                        "patient_postal_code": {
                          "description": "Create a dental-lab-order",
                          "type": "string"
                        },
                        "patient_street_address_1": {
                          "description": "Create a dental-lab-order",
                          "type": "string"
                        },
                        "patient_street_address_2": {
                          "description": "Create a dental-lab-order",
                          "type": "string"
                        },
                        "sender_signed_at": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "2024-09-02T23:59:59+02:00"
                        },
                        "closed_by_lab_at": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "2024-11-02T23:59:59+02:00"
                        },
                        "accepted_at": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "2024-11-22T23:59:59+02:00"
                        },
                        "deleted": {
                          "description": "Create a dental-lab-order",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Create a dental-lab-order",
                          "type": "string",
                          "example": "2024-07-26T08:18:09+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a dental-lab-order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a dental-lab-order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-orders/{id}": {
      "get": {
        "tags": [
          "dental-lab-orders"
        ],
        "summary": "Retrieve a dental-lab-order",
        "description": "Returns certain dental lab order based on the given filters",
        "operationId": "getDentalLabOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'dental_lab', organization', 'clinic', 'patient', 'sender_signer', 'dental_lab_order_email', 'dental_lab_accepter', 'files', 'dental_lab_constructions', 'dental_lab_order_responses', 'dental_lab_order_lines', 'dental_lab_deliveries'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "dental-lab-orders"
        ],
        "summary": "Edit a dental-lab-order",
        "description": "Returns certain dental lab order based on the given filters",
        "operationId": "patchDentalLabOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (only 'patient_id' is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order",
                  "properties": {
                    "attributes": {
                      "description": "Edit a dental-lab-order",
                      "properties": {
                        "patient_id": {
                          "description": "Edit a dental-lab-order",
                          "type": "number",
                          "example": 1
                        },
                        "files": {
                          "description": "Edit a dental-lab-order",
                          "type": "string"
                        },
                        "patient_city": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "Stockholm"
                        },
                        "patient_country": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "Sweden"
                        },
                        "patient_first_name": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "John"
                        },
                        "patient_last_name": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "Otto"
                        },
                        "patient_personal_id": {
                          "description": "Edit a dental-lab-order",
                          "type": "string"
                        },
                        "patient_postal_code": {
                          "description": "Edit a dental-lab-order",
                          "type": "string"
                        },
                        "patient_street_address_1": {
                          "description": "Edit a dental-lab-order",
                          "type": "string"
                        },
                        "patient_street_address_2": {
                          "description": "Edit a dental-lab-order",
                          "type": "string"
                        },
                        "sender_signed_at": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "2024-09-02T23:59:59+02:00"
                        },
                        "closed_by_lab_at": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "2024-11-02T23:59:59+02:00"
                        },
                        "accepted_at": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "2024-11-22T23:59:59+02:00"
                        },
                        "deleted": {
                          "description": "Edit a dental-lab-order",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Edit a dental-lab-order",
                          "type": "string",
                          "example": "2024-07-26T08:18:09+02:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a dental-lab-order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a dental-lab-order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-orders/{id}/sign": {
      "post": {
        "tags": [
          "dental-lab-orders"
        ],
        "summary": "Sign a dental-lab-order",
        "description": "Returns signed dental lab order based on the given filters",
        "operationId": "postSignDentalLabOrder",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "signing_password",
            "in": "query",
            "description": "'signing_password' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a dental-lab-order",
                  "properties": {
                    "attributes": {
                      "description": "Sign a dental-lab-order",
                      "properties": {
                        "signing_password": {
                          "description": "Sign a dental-lab-order",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Sign a dental-lab-order",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabOrderResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Sign a dental-lab-order",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-pontic-designs": {
      "get": {
        "tags": [
          "dental-lab-pontic-designs"
        ],
        "summary": "List dental-lab-pontic-designs",
        "description": "Returns a list of dental lab pontic designs based on the given filters",
        "operationId": "getDentalLabPonticDesigns",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-pontic-designs",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabPonticDesignResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-pontic-designs",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-pontic-designs/{id}": {
      "get": {
        "tags": [
          "dental-lab-pontic-designs"
        ],
        "summary": "Retrieve a dental-lab-pontic-design",
        "description": "Returns certain dental lab pontic design based on the given filters",
        "operationId": "getDentalLabPonticDesign",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-pontic-design",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabPonticDesignResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-pontic-design",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-process-steps": {
      "get": {
        "tags": [
          "dental-lab-process-steps"
        ],
        "summary": "List dental-lab-process-steps",
        "description": "Returns a list of dental lab process steps based on the given filters",
        "operationId": "getDentalLabProcessSteps",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-process-steps",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabProcessStepResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-process-steps",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-process-steps/{id}": {
      "get": {
        "tags": [
          "dental-lab-process-steps"
        ],
        "summary": "Retrieve a dental-lab-process-step",
        "description": "Returns certain dental lab process step based on the given filters",
        "operationId": "getDentalLabProcessStep",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-process-step",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabProcessStepResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-process-step",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-scales": {
      "get": {
        "tags": [
          "dental-lab-scales"
        ],
        "summary": "List dental-lab-scales",
        "description": "Returns a list of dental lab scales based on the given filters",
        "operationId": "getDentalLabScales",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'colors'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-scales",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabScaleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-scales",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-scales/{id}": {
      "get": {
        "tags": [
          "dental-lab-scales"
        ],
        "summary": "Retrieve a dental-lab-scale",
        "description": "Returns certain dental lab scale based on the given filters",
        "operationId": "getDentalLabScale",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'colors'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-scale",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabScaleResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-scale",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-supplier-invoice-rows": {
      "get": {
        "tags": [
          "dental-lab-supplier-invoice-rows"
        ],
        "summary": "List dental-lab-supplier-invoice-rows",
        "description": "Returns a list of dental lab supplier invoice rows based on the given filters",
        "operationId": "getDentalLabSupplierInvoiceRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "supplier_invoice_id",
            "in": "query",
            "description": "'supplier_invoice_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": true,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": true,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-supplier-invoice-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabSupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-supplier-invoice-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-supplier-invoice-rows/{id}": {
      "get": {
        "tags": [
          "dental-lab-supplier-invoice-rows"
        ],
        "summary": "Retrieve a dental-lab-supplier-invoice-row",
        "description": "Returns certain dental lab supplier invoice row based on the given filters",
        "operationId": "getDentalLabSupplierInvoiceRow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-supplier-invoice-row",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabSupplierInvoiceRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-supplier-invoice-row",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-supplier-invoices": {
      "get": {
        "tags": [
          "dental-lab-supplier-invoices"
        ],
        "summary": "List dental-lab-supplier-invoices",
        "description": "Returns a list of dental lab supplier invoices based on the given filters",
        "operationId": "getDentalLabSupplierInvoices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_invoice', 'dental_lab_order_line'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "customer_id",
            "in": "query",
            "description": "'customer_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "dental_lab_id",
            "in": "query",
            "description": "'dental_lab_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-lab-supplier-invoices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabSupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-lab-supplier-invoices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-lab-supplier-invoices/{id}": {
      "get": {
        "tags": [
          "dental-lab-supplier-invoices"
        ],
        "summary": "Retrieve a dental-lab-supplier-invoice",
        "description": "Returns certain dental lab supplier invoice based on the given filters",
        "operationId": "getDentalLabSupplierInvoice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier_invoice', 'dental_lab_order_line'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab-supplier-invoice",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabSupplierInvoiceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab-supplier-invoice",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-labs": {
      "get": {
        "tags": [
          "dental-labs"
        ],
        "summary": "List dental-labs",
        "description": "Returns a list of dental labs based on the given filters",
        "operationId": "getDentalLabs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'supplier'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "'supplier_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_northeast_lat",
            "in": "query",
            "description": "'viewport_northeast_lat' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_southwest_lat",
            "in": "query",
            "description": "'viewport_southwest_lat' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_northeast_lng",
            "in": "query",
            "description": "'viewport_northeast_lng' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "viewport_southwest_lng",
            "in": "query",
            "description": "'viewport_southwest_lng' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List dental-labs",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List dental-labs",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/dental-labs/{id}": {
      "get": {
        "tags": [
          "dental-labs"
        ],
        "summary": "Retrieve a dental-lab",
        "description": "Returns certain dental lab based on the given filters",
        "operationId": "getDentalLab",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'country', 'supplier'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a dental-lab",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DentalLabResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a dental-lab",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/depositions": {
      "get": {
        "tags": [
          "depositions"
        ],
        "summary": "List depositions",
        "description": "Returns list of depositions based on the given filters",
        "operationId": "getDepositions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'fiscal_year', 'verification', 'currency', 'daily_reconciliation'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List depositions",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DepositionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List depositions",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "depositions"
        ],
        "summary": "Create a deposition",
        "description": "Returns created deposition based on the given filters",
        "operationId": "postDeposition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a deposition",
                  "properties": {
                    "attributes": {
                      "description": "Create a deposition",
                      "properties": {
                        "fiscal_year_id": {
                          "description": "Create a deposition",
                          "type": "number"
                        },
                        "currency_id": {
                          "description": "Create a deposition",
                          "type": "number"
                        },
                        "date": {
                          "description": "Create a deposition",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a deposition",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DepositionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a deposition",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/depositions/{id}": {
      "get": {
        "tags": [
          "depositions"
        ],
        "summary": "Retrieve a deposition",
        "description": "Returns certain deposition based on the given filters",
        "operationId": "getDeposition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'fiscal_year', 'verification', 'currency', 'daily_reconciliation'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a deposition",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DepositionResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a deposition",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/device-types": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "List device-types",
        "description": "Returns a list of device types based on the given filters",
        "operationId": "getDeviceTypes",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List device-types",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List device-types",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/device-types/{id}": {
      "get": {
        "tags": [
          "device-types"
        ],
        "summary": "Retrieve a device-type",
        "description": "Returns certain device type based on the given filters",
        "operationId": "getDeviceType",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a device-type",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceTypeResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a device-type",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "List devices",
        "description": "Returns list of devices based on the given filters",
        "operationId": "getDevices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'device_type', 'supplier', 'file_types', 'mount_templates', 'twain_data_sources', 'computers_where_default'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List devices",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List devices",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/devices/{id}": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Retrieve a device",
        "description": "Returns certain device based on the given filters",
        "operationId": "getDevice",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'device_type', 'supplier', 'file_types', 'mount_templates', 'twain_data_sources', 'computers_where_default'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a device",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a device",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/digital-mails/{id}/check-status": {
      "post": {
        "tags": [
          "digital-mails"
        ],
        "summary": "Check status of a digital-mail",
        "description": "Returns status of digital email based on the given filters",
        "operationId": "postStatusOfDigitalEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'supplier', 'digital_mail_logs'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Check status of a digital-mail",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DigitalMailCheckStatusResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "properties": {
                "message": {
                  "description": "Check status of a digital-mail",
                  "type": "string",
                  "example": "Digital mail not found"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/draft-email-report-rows": {
      "get": {
        "tags": [
          "draft-email-report-rows"
        ],
        "summary": "List draft-email-report-rows",
        "description": "Returns a list of draft email report rows report rows based on the given filters",
        "operationId": "getDraftEmailReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List draft-email-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DraftEmailReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List draft-email-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/draft-sms-report-rows": {
      "get": {
        "tags": [
          "draft-sms-report-rows"
        ],
        "summary": "List draft-sms-report-rows",
        "description": "Returns a list of draft sms report rows based on the given filters",
        "operationId": "getDraftSmsReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List draft-sms-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DraftSmsReportRowResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List draft-sms-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/draft-snail-mail-report-rows": {
      "get": {
        "tags": [
          "draft-snail-mail-report-rows"
        ],
        "summary": "List draft-snail-mail-report-rows",
        "description": "Returns a list of draft snail mail report rows based on the given filters",
        "operationId": "getDraftSnailMailReportRows",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List draft-snail-mail-report-rows",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DraftSnailMailReportResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List draft-snail-mail-report-rows",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/educations": {
      "get": {
        "tags": [
          "educations"
        ],
        "summary": "List educations",
        "description": "Returns list of educations based on the given filters",
        "operationId": "getEducations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "'user_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List educations",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EducationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List educations",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "educations"
        ],
        "summary": "Create an education",
        "description": "Returns created education based on the given filters",
        "operationId": "postEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an education",
                  "properties": {
                    "attributes": {
                      "description": "Create an education",
                      "properties": {
                        "degree": {
                          "description": "Create an education",
                          "type": "string"
                        },
                        "field_of_study": {
                          "description": "Create an education",
                          "type": "string"
                        },
                        "school": {
                          "description": "Create an education",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Create an education",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an education",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EducationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an education",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/educations/{id}": {
      "get": {
        "tags": [
          "educations"
        ],
        "summary": "Retrieve an education",
        "description": "Returns certain education based on the given filters",
        "operationId": "getEducationById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an education",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EducationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an education",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "educations"
        ],
        "summary": "Edit an education",
        "description": "Returns edited education based on the given filters",
        "operationId": "patchEducation",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an education",
                  "properties": {
                    "attributes": {
                      "description": "Edit an education",
                      "properties": {
                        "degree": {
                          "description": "Edit an education",
                          "type": "string"
                        },
                        "field_of_study": {
                          "description": "Edit an education",
                          "type": "string"
                        },
                        "school": {
                          "description": "Edit an education",
                          "type": "string"
                        },
                        "user_id": {
                          "description": "Edit an education",
                          "type": "number",
                          "example": 6
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an education",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EducationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an education",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/element-adapters": {
      "get": {
        "tags": [
          "element-adapters"
        ],
        "summary": "List element-adapters",
        "description": "Returns a list of element adapters based on the given filters",
        "operationId": "getElementAdapters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'elements'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List element-adapters",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ElementAdapterResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List element-adapters",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/elements": {
      "get": {
        "tags": [
          "elements"
        ],
        "summary": "List elements",
        "description": "Returns a list of elements based on the given filters",
        "operationId": "getElements",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'selectable'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "id",
            "in": "query",
            "description": "'id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List elements",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ElementsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List elements",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/elements/{id}": {
      "get": {
        "tags": [
          "elements"
        ],
        "summary": "Retrieve an element",
        "description": "Returns certain element based on the given filters",
        "operationId": "getElement",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'selectable'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "id",
            "in": "query",
            "description": "'id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an element",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ElementsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an element",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-addresses": {
      "get": {
        "tags": [
          "email-addresses"
        ],
        "summary": "List email-addresses",
        "description": "Returns a list of email addresses based on the given filters",
        "operationId": "getEmailAddresses",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "default",
            "in": "query",
            "description": "'default' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List email-addresses",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List email-addresses",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "email-addresses"
        ],
        "summary": "Create an email-address",
        "description": "Returns created email address based on the given filters",
        "operationId": "postEmailAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email-address",
                  "properties": {
                    "attributes": {
                      "description": "Create an email-address",
                      "properties": {
                        "email": {
                          "description": "Create an email-address",
                          "type": "string",
                          "example": "testemail@com.eu"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-addresses/{id}": {
      "get": {
        "tags": [
          "email-addresses"
        ],
        "summary": "Retrieve an email-address",
        "description": "Returns certain email address based on the given filters",
        "operationId": "getEmailAddress",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-addresses/{id}/start-verification": {
      "post": {
        "tags": [
          "email-addresses"
        ],
        "summary": "Start verification of an email-address",
        "description": "Returns email address after started verification based on the given filters",
        "operationId": "postEmailAddressVerificationStartDoc",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Start verification of an email-address",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Start verification of an email-address",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-ics": {
      "get": {
        "tags": [
          "email-ics"
        ],
        "summary": "List email-ics",
        "description": "Returns list of email ics based on the given filters",
        "operationId": "getEmailIcs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "booking_attendee_id",
            "in": "query",
            "description": "'booking_attendee_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "'from_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "'to_date' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "email-ics"
        ],
        "summary": "Create an email-ics",
        "description": "Returns created email ics based on the given filters",
        "operationId": "postEmailIcsOne",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email-ics",
                  "properties": {
                    "attributes": {
                      "description": "Create an email-ics",
                      "properties": {
                        "subject": {
                          "description": "Create an email-ics",
                          "type": "string"
                        },
                        "body": {
                          "description": "Create an email-ics",
                          "type": "string"
                        },
                        "booking_attendee_id": {
                          "description": "Create an email-ics",
                          "type": "number"
                        },
                        "to": {
                          "description": "Create an email-ics",
                          "type": "string",
                          "example": "testemail@com.is"
                        },
                        "to_name": {
                          "description": "Create an email-ics",
                          "type": "string",
                          "example": "Gordon"
                        },
                        "sent_at": {
                          "description": "Create an email-ics",
                          "type": "string",
                          "example": "2024-08-31T00:00:00+02:00"
                        },
                        "message_status": {
                          "description": "Create an email-ics",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Create an email-ics",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Create an email-ics",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Create an email-ics",
                          "type": "string",
                          "example": "2024-09-11T29:25:31+02:00"
                        },
                        "wait_number_of_hours_after_send": {
                          "description": "Create an email-ics",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-ics/{id}": {
      "get": {
        "tags": [
          "email-ics"
        ],
        "summary": "Retrineve an email-ics",
        "description": "Returns certain email ics based on the given filters",
        "operationId": "getEmailIcsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'booking_attendee'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrineve an email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrineve an email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "email-ics"
        ],
        "summary": "Edit an email-ics",
        "description": "Returns edited email ics based on the given filters",
        "operationId": "patchEmailIcsById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an email-ics",
                  "properties": {
                    "attributes": {
                      "description": "Edit an email-ics",
                      "properties": {
                        "subject": {
                          "description": "Edit an email-ics",
                          "type": "string"
                        },
                        "body": {
                          "description": "Edit an email-ics",
                          "type": "string"
                        },
                        "booking_attendee_id": {
                          "description": "Edit an email-ics",
                          "type": "number"
                        },
                        "to": {
                          "description": "Edit an email-ics",
                          "type": "string",
                          "example": "testemail@com.is"
                        },
                        "to_name": {
                          "description": "Edit an email-ics",
                          "type": "string",
                          "example": "Gordon"
                        },
                        "sent_at": {
                          "description": "Edit an email-ics",
                          "type": "string",
                          "example": "2024-08-31T00:00:00+02:00"
                        },
                        "message_status": {
                          "description": "Edit an email-ics",
                          "type": "string"
                        },
                        "error_code": {
                          "description": "Edit an email-ics",
                          "type": "string"
                        },
                        "deleted": {
                          "description": "Edit an email-ics",
                          "type": "boolean",
                          "example": false
                        },
                        "created_at": {
                          "description": "Edit an email-ics",
                          "type": "string",
                          "example": "2024-09-11T29:25:31+02:00"
                        },
                        "wait_number_of_hours_after_send": {
                          "description": "Edit an email-ics",
                          "type": "number",
                          "example": 20
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-ics/{id}/schedule": {
      "post": {
        "tags": [
          "email-ics"
        ],
        "summary": "Schedule an email-ics",
        "description": "Returns scheduled email ics based on the given filters",
        "operationId": "postEmailScheduleIcs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Schedule an email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Schedule an email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-ics/{id}/unschedule": {
      "post": {
        "tags": [
          "email-ics"
        ],
        "summary": "Unschedule an email-ics",
        "description": "Returns unscheduled email ics based on the given filters",
        "operationId": "postEmailUnscheduleIcs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unschedule an email-ics",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailIcsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unschedule an email-ics",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-templates": {
      "get": {
        "tags": [
          "email-templates"
        ],
        "summary": "List email-templates",
        "description": "Returns list of email templates based on the given filters",
        "operationId": "getEmailTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List email-templates",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List email-templates",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "email-templates"
        ],
        "summary": "Create a email-template",
        "description": "Returns created email template based on the given filters",
        "operationId": "postEmailTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a email-template",
                  "properties": {
                    "attributes": {
                      "description": "Create a email-template",
                      "properties": {
                        "name": {
                          "description": "Create a email-template",
                          "type": "string",
                          "example": "Test name"
                        },
                        "text": {
                          "description": "Create a email-template",
                          "type": "string",
                          "example": "Test text"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create a email-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create a email-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/email-templates/{id}": {
      "get": {
        "tags": [
          "email-templates"
        ],
        "summary": "Retrieve a email-template",
        "description": "Returns certain email template based on the given filters",
        "operationId": "getEmailTemplate",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve a email-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve a email-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "email-templates"
        ],
        "summary": "Edit a email-template",
        "description": "Returns edited email template based on the given filters",
        "operationId": "patchCalendarView",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a email-template",
                  "properties": {
                    "attributes": {
                      "description": "Edit a email-template",
                      "properties": {
                        "name": {
                          "description": "Edit a email-template",
                          "type": "string",
                          "example": "Test name"
                        },
                        "text": {
                          "description": "Edit a email-template",
                          "type": "string",
                          "example": "Test text"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit a email-template",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplateResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit a email-template",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/emails": {
      "get": {
        "tags": [
          "emails"
        ],
        "summary": "List emails",
        "description": "Returns a list of emails based on the given filters",
        "operationId": "getEmails",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_ids",
            "in": "query",
            "description": "'clinic_ids' field",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "patient_id",
            "in": "query",
            "description": "'patient_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List emails",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List emails",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "emails"
        ],
        "summary": "Create an email",
        "description": "Returns created email based on the given filters",
        "operationId": "postEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email",
                  "properties": {
                    "attributes": {
                      "description": "Create an email",
                      "properties": {
                        "subject": {
                          "description": "Create an email",
                          "type": "string",
                          "example": "Test subject"
                        },
                        "body": {
                          "description": "Create an email",
                          "type": "string",
                          "example": "Test body"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/emails/{id}": {
      "get": {
        "tags": [
          "emails"
        ],
        "summary": "Retrieve an email",
        "description": "Returns certain email based on the given filters",
        "operationId": "getEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'patient'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "emails"
        ],
        "summary": "Edit an email",
        "description": "Returns edited email based on the given filters",
        "operationId": "patchEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an email",
                  "properties": {
                    "attributes": {
                      "description": "Edit an email",
                      "properties": {
                        "subject": {
                          "description": "Edit an email",
                          "type": "string",
                          "example": "Test subject"
                        },
                        "body": {
                          "description": "Edit an email",
                          "type": "string",
                          "example": "Test body"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          {
            "name": "deleted",
            "in": "query",
            "description": "'deleted' field",
            "required": false,
            "type": "boolean",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/emails/{id}/schedule": {
      "post": {
        "tags": [
          "emails"
        ],
        "summary": "Schedule an email",
        "description": "Returns scheduled email based on the given filters",
        "operationId": "postEmailSchedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Schedule an email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Schedule an email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/emails/{id}/unschedule": {
      "post": {
        "tags": [
          "emails"
        ],
        "summary": "Unschedule an email",
        "description": "Returns unscheduled email based on the given filters",
        "operationId": "postEmailUnschedule",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Unschedule an email",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailsResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Unschedule an email",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/equipment": {
      "get": {
        "tags": [
          "equipment"
        ],
        "summary": "List an equipment",
        "description": "Returns list of equipment based on the given filters",
        "operationId": "getEquipment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'room', 'supplier'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "clinic_id",
            "in": "query",
            "description": "'clinic_id' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "sort_by",
            "in": "query",
            "description": "'sort_by' field",
            "required": false,
            "type": "string",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "page",
            "in": "query",
            "description": "'page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "'per_page' field",
            "required": false,
            "type": "number",
            "allowEmptyValue": true,
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "List an equipment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "List an equipment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "post": {
        "tags": [
          "equipment"
        ],
        "summary": "Create an equipment",
        "description": "Returns created equipment based on the given filters",
        "operationId": "postEquipment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an equipment",
                  "properties": {
                    "attributes": {
                      "description": "Create an equipment",
                      "properties": {
                        "name": {
                          "description": "Create an equipment",
                          "type": "string",
                          "example": "Test name"
                        },
                        "clinic_id": {
                          "description": "Create an equipment",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an equipment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an equipment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/equipment/{id}": {
      "get": {
        "tags": [
          "equipment"
        ],
        "summary": "Retrieve an equipment",
        "description": "Returns certain equipment based on the given filters",
        "operationId": "getEquipmentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'clinic', 'room', 'supplier'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Retrieve an equipment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Retrieve an equipment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "equipment"
        ],
        "summary": "Edit an equipment",
        "description": "Returns edited equipment based on the given filters",
        "operationId": "patchEquipmentById",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "'id' field",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an equipment",
                  "properties": {
                    "attributes": {
                      "description": "Edit an equipment",
                      "properties": {
                        "name": {
                          "description": "Edit an equipment",
                          "type": "string",
                          "example": "Test name"
                        },
                        "clinic_id": {
                          "description": "Edit an equipment",
                          "type": "number",
                          "example": 1
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Edit an equipment",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EquipmentResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Edit an equipment",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    },
    "/api/error-notifications": {
      "post": {
        "tags": [
          "error-notifications"
        ],
        "summary": "Create an error-notification",
        "description": "Returns created error notification based on the given filters",
        "operationId": "postErrorNotification",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Bearer token",
            "required": true,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Including 'user', 'clinic'.",
            "required": false,
            "type": "array",
            "allowEmptyValue": true,
            "items": {
              "type": "string"
            },
            "collectionFormat": "csv",
            "default": ""
          },
          {
            "name": "body",
            "in": "body",
            "description": "Body of request (not all fields is obligatory)",
            "required": true,
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an error-notification",
                  "properties": {
                    "attributes": {
                      "description": "Create an error-notification",
                      "properties": {
                        "date": {
                          "description": "Create an error-notification",
                          "type": "string"
                        },
                        "name": {
                          "description": "Create an error-notification",
                          "type": "string"
                        },
                        "message": {
                          "description": "Create an error-notification",
                          "type": "string"
                        },
                        "stack": {
                          "description": "Create an error-notification",
                          "type": "string"
                        },
                        "url": {
                          "description": "Create an error-notification",
                          "type": "string"
                        },
                        "version": {
                          "description": "Create an error-notification",
                          "type": "string",
                          "example": "2024-09-01T19:25:31+02:00"
                        },
                        "ip_address": {
                          "description": "Create an error-notification",
                          "type": "string",
                          "example": "79.112.148.244"
                        },
                        "user_id": {
                          "description": "Create an error-notification",
                          "type": "number"
                        },
                        "clinic_id": {
                          "description": "Create an error-notification",
                          "type": "number"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "data": {
                  "description": "Create an error-notification",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ErrorNotificationResponse"
                  }
                }
              },
              "type": "object"
            }
          },
          "422": {
            "description": "Validation error",
            "schema": {
              "properties": {
                "message": {
                  "description": "Create an error-notification",
                  "type": "string",
                  "example": "Please make sure that request parameters is correct"
                }
              },
              "type": "object"
            }
          }
        }
      }
    }
  }
}